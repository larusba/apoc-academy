{
  "paragraphs": [
    {
      "text": "%md\n\n# Export\n\nTo activate it, use `apoc.export.file.enabled\u003dtrue`.\n\n- Export to CSV (apoc.export.csv.TYPE)\n- Export to JSON (apoc.export.json.TYPE)\n- Export to Cypher Script (apoc.export.cypher.TYPE)\n- Export to GraphML (apoc.export.graphml.TYPE)\n- Export to Xls (apoc.export.xls.TYPE)\n\n\nWhere `TYPE` can be `all`, `data`, `graph`, `query`.\n\nFor example, in JSON case, we have `apoc.export.json.all(fileName, $configMap)`, \n`apoc.export.json.query(query, file, $configMap)`, \n`apoc.export.json.data(nodes, rels, fileName, $configMap)`\n`apoc.export.json.graph(graph, fileName?, $configMap)`.\n\n`$configMap` depends on file Type. See \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/overview/apoc.export/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e to see all possible configurations.\n\n---\n#### REFRESH\n\nIn `apoc.export.csv.*` we have\n-` batchSize (default: 20000)` - define the batch size to export large files avoiding heap space errors\n- `delim (default: \",\")` - define the delimiter character (export csv)\n- `arrayDelim (default: \";\")` - define the delimiter character for arrays\n- `quotes (default: \u0027always\u0027)` - quote-character used for CSV. It can be \u0027always\u0027, \u0027none\u0027 or \u0027ifNeeded\u0027, that apply quotes only when it\u0027s necessary (for escape purpose or when a value is blank)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 11:29:03.911",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eExport\u003c/h1\u003e\n\u003cp\u003eTo activate it, use \u003ccode\u003eapoc.export.file.enabled\u003dtrue\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExport to CSV (apoc.export.csv.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to JSON (apoc.export.json.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to Cypher Script (apoc.export.cypher.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to GraphML (apoc.export.graphml.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to Xls (apoc.export.xls.TYPE)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhere \u003ccode\u003eTYPE\u003c/code\u003e can be \u003ccode\u003eall\u003c/code\u003e, \u003ccode\u003edata\u003c/code\u003e, \u003ccode\u003egraph\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eFor example, in JSON case, we have \u003ccode\u003eapoc.export.json.all(fileName, $configMap)\u003c/code\u003e,\u003cbr /\u003e\n\u003ccode\u003eapoc.export.json.query(query, file, $configMap)\u003c/code\u003e,\u003cbr /\u003e\n\u003ccode\u003eapoc.export.json.data(nodes, rels, fileName, $configMap)\u003c/code\u003e\u003cbr /\u003e\n\u003ccode\u003eapoc.export.json.graph(graph, fileName?, $configMap)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$configMap\u003c/code\u003e depends on file Type. See \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/overview/apoc.export/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e to see all possible configurations.\u003c/p\u003e\n\u003chr /\u003e\n\u003ch4\u003eREFRESH\u003c/h4\u003e\n\u003cp\u003eIn \u003ccode\u003eapoc.export.csv.*\u003c/code\u003e we have\u003cbr /\u003e\n-\u003ccode\u003ebatchSize (default: 20000)\u003c/code\u003e - define the batch size to export large files avoiding heap space errors\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edelim (default: \u0026quot;,\u0026quot;)\u003c/code\u003e - define the delimiter character (export csv)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003earrayDelim (default: \u0026quot;;\u0026quot;)\u003c/code\u003e - define the delimiter character for arrays\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003equotes (default: \u0027always\u0027)\u003c/code\u003e - quote-character used for CSV. It can be \u0026lsquo;always\u0026rsquo;, \u0026lsquo;none\u0026rsquo; or \u0026lsquo;ifNeeded\u0026rsquo;, that apply quotes only when it\u0026rsquo;s necessary (for escape purpose or when a value is blank)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666604216511_60290228",
      "id": "paragraph_1666604216511_60290228",
      "dateCreated": "2022-10-24 09:36:56.511",
      "dateStarted": "2022-11-04 11:29:03.913",
      "dateFinished": "2022-11-04 11:29:05.272",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Export cypher\n\nSee [here](https://neo4j.com/labs/apoc/4.4/export/cypher/)\n\nWe have 4 procedures + 1 just for schema:\n- apoc.export.cypher.all\n- apoc.export.cypher.data\n- apoc.export.cypher.graph\n- apoc.export.cypher.query\n- apoc.export.cypher.schema\n\n\n### Available configurations:\n\n- format\n- cypherFormat [vedere chat alberto]\n- separateFiles \n- useOptimizations\n- awaitForIndexes\n- saveIndexNames\n- saveConstraintNames\n- multipleRelationshipsWithType\n- timeout\n- check others...\n- stream: https://neo4j.com/labs/apoc/4.4/export/cypher/#export-cypher-stream-export",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 11:37:08.192",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eExport cypher\u003c/h2\u003e\n\u003cp\u003eSee \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.4/export/cypher/\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eWe have 4 procedures + 1 just for schema:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eapoc.export.cypher.all\u003c/li\u003e\n\u003cli\u003eapoc.export.cypher.data\u003c/li\u003e\n\u003cli\u003eapoc.export.cypher.graph\u003c/li\u003e\n\u003cli\u003eapoc.export.cypher.query\u003c/li\u003e\n\u003cli\u003eapoc.export.cypher.schema\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAvailable configurations:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eformat\u003c/li\u003e\n\u003cli\u003ecypherFormat [vedere chat alberto]\u003c/li\u003e\n\u003cli\u003eseparateFiles\u003c/li\u003e\n\u003cli\u003euseOptimizations\u003c/li\u003e\n\u003cli\u003eawaitForIndexes\u003c/li\u003e\n\u003cli\u003esaveIndexNames\u003c/li\u003e\n\u003cli\u003esaveConstraintNames\u003c/li\u003e\n\u003cli\u003emultipleRelationshipsWithType\u003c/li\u003e\n\u003cli\u003etimeout\u003c/li\u003e\n\u003cli\u003echeck others\u0026hellip;\u003c/li\u003e\n\u003cli\u003estream: \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.4/export/cypher/#export-cypher-stream-export\"\u003ehttps://neo4j.com/labs/apoc/4.4/export/cypher/#export-cypher-stream-export\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666606356300_2070896974",
      "id": "paragraph_1666606356300_2070896974",
      "dateCreated": "2022-10-24 10:12:36.300",
      "dateStarted": "2022-11-04 11:37:08.193",
      "dateFinished": "2022-11-04 11:37:08.210",
      "status": "FINISHED"
    },
    {
      "title": "Default configuration",
      "text": "%md\n\nThis Cypher script executes 5 transactions, each surrounded by `:begin` and `:commit` commands. The transactions do the following:\n\nCreate a unique constraint on the UNIQUE IMPORT LABEL label and UNIQUE IMPORT ID property\n\nImport the Person and Movie nodes: UNWIND []\n\nCreate ACTED_IN, PRODUCED, and DIRECTED relationships between these nodes\n\nRemove the UNIQUE IMPORT LABEL label and UNIQUE IMPORT ID property from the nodes\n\nDrop the unique constraint on the UNIQUE IMPORT LABEL label and UNIQUE IMPORT ID property\n\n\nBy default, the script can be executed using the Cypher Shell command line tool.",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 11:38:05.984",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThis Cypher script executes 5 transactions, each surrounded by \u003ccode\u003e:begin\u003c/code\u003e and \u003ccode\u003e:commit\u003c/code\u003e commands. The transactions do the following:\u003c/p\u003e\n\u003cp\u003eCreate a unique constraint on the UNIQUE IMPORT LABEL label and UNIQUE IMPORT ID property\u003c/p\u003e\n\u003cp\u003eImport the Person and Movie nodes: UNWIND []\u003c/p\u003e\n\u003cp\u003eCreate ACTED_IN, PRODUCED, and DIRECTED relationships between these nodes\u003c/p\u003e\n\u003cp\u003eRemove the UNIQUE IMPORT LABEL label and UNIQUE IMPORT ID property from the nodes\u003c/p\u003e\n\u003cp\u003eDrop the unique constraint on the UNIQUE IMPORT LABEL label and UNIQUE IMPORT ID property\u003c/p\u003e\n\u003cp\u003eBy default, the script can be executed using the Cypher Shell command line tool.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608408832_64361941",
      "id": "paragraph_1666608408832_64361941",
      "dateCreated": "2022-10-24 10:46:48.832",
      "dateStarted": "2022-11-04 11:37:50.522",
      "dateFinished": "2022-11-04 11:37:50.539",
      "status": "FINISHED"
    },
    {
      "title": "Default configurations",
      "text": "%neo4j\n\n\nCALL apoc.export.cypher.all(\u0027testfile.cypher\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:03:09.283",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testfile.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t68\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608073857_190827409",
      "id": "paragraph_1666608073857_190827409",
      "dateCreated": "2022-10-24 10:41:13.857",
      "dateStarted": "2022-11-04 13:03:09.299",
      "dateFinished": "2022-11-04 13:03:09.401",
      "status": "FINISHED"
    },
    {
      "title": "Output explained",
      "text": "%md\n\nExport a `.cypher` file useful for import with Cypher Shell:\n\n```\n// begin and commit with `:`\n:begin\n\n\n// create indexes\nCREATE INDEX ON :Movie(title);\n\n// create constraints\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\n\n// create an \"internal\" unique constraint\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\n\n:commit\n\n// waiting for indexes\nCALL db.awaitIndexes(300);\n\n\n:begin\n// we group some nodes properties (default with size TODO), and to distinguish them, we create an _id from the intrinsic id\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\n\n\n// we create multiple nodes with our \"internal\" label and properties, and set properties and labels\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc....\n\n:commit\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\n\n// etc....\n\n:commit\n:begin\n\n// remove unique labels\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\n\n// remove unique constraint\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 11:57:49.874",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eExport a \u003ccode\u003e.cypher\u003c/code\u003e file useful for import with Cypher Shell:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// begin and commit with `:`\n:begin\n\n\n// create indexes\nCREATE INDEX ON :Movie(title);\n\n// create constraints\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\n\n// create an \u0026quot;internal\u0026quot; unique constraint\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\n\n:commit\n\n// waiting for indexes\nCALL db.awaitIndexes(300);\n\n\n:begin\n// we group some nodes properties (default with size TODO), and to distinguish them, we create an _id from the intrinsic id\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\n\n\n// we create multiple nodes with our \u0026quot;internal\u0026quot; label and properties, and set properties and labels\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc....\n\n:commit\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\n\n// etc....\n\n:commit\n:begin\n\n// remove unique labels\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\n\n// remove unique constraint\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608507342_684605333",
      "id": "paragraph_1666608507342_684605333",
      "dateCreated": "2022-10-24 10:48:27.342",
      "dateStarted": "2022-11-04 11:57:49.871",
      "dateFinished": "2022-11-04 11:57:49.895",
      "status": "FINISHED"
    },
    {
      "text": "%md\n`format` config: \n- `cypher-shell` (default): for import with Cypher Shell\n- `plain`: exports plain Cypher without begin, commit, or await commands. For import with Neo4j Browser\n- `neo4j-shell`: for import with Neo4j Shell and the `apoc.cypher.runFile` procedure",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 11:59:52.261",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666609630855_1504779443",
      "id": "paragraph_1666609630855_1504779443",
      "dateCreated": "2022-10-24 11:07:10.855",
      "status": "READY"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testPlain.cypher\", {format: \u0027PLAIN\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 12:00:48.343",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 114.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testPlain.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t146\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608402975_516550672",
      "id": "paragraph_1666608402975_516550672",
      "dateCreated": "2022-10-24 10:46:42.975",
      "dateStarted": "2022-11-04 12:00:48.367",
      "dateFinished": "2022-11-04 12:00:49.566",
      "status": "FINISHED"
    },
    {
      "title": "Output",
      "text": "%md\n\nFile without `:begin` and `:commit`, and no schema await:\n```\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}] AS row\n\n// etc...\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:01:57.874",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFile without \u003ccode\u003e:begin\u003c/code\u003e and \u003ccode\u003e:commit\u003c/code\u003e, and no schema await:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}] AS row\n\n// etc...\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666619594388_2014218297",
      "id": "paragraph_1666619594388_2014218297",
      "dateCreated": "2022-10-24 13:53:14.388",
      "dateStarted": "2022-11-04 13:01:57.872",
      "dateFinished": "2022-11-04 13:01:57.895",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testNeo4jShell.cypher\", {format: \u0027neo4j-shell\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 12:08:03.566",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testNeo4jShell.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t62\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667563384110_503205032",
      "id": "paragraph_1667563384110_503205032",
      "dateCreated": "2022-11-04 12:03:04.110",
      "dateStarted": "2022-11-04 12:08:03.579",
      "dateFinished": "2022-11-04 12:08:03.679",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nFile with `BEGIN` and `COMMIT` and different shema await`:\n```\nBEGIN\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\nCOMMIT\n\n// command changed for neo4j-shell\nSCHEMA AWAIT\n\nBEGIN\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}] AS row\n\n// etc...\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:04:44.789",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFile with \u003ccode\u003eBEGIN\u003c/code\u003e and \u003ccode\u003eCOMMIT\u003c/code\u003e and different shema await`:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eBEGIN\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\nCOMMIT\n\n// command changed for neo4j-shell\nSCHEMA AWAIT\n\nBEGIN\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}] AS row\n\n// etc...\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667563400355_846326045",
      "id": "paragraph_1667563400355_846326045",
      "dateCreated": "2022-11-04 12:03:20.355",
      "dateStarted": "2022-11-04 12:08:26.222",
      "dateFinished": "2022-11-04 12:08:26.234",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### `cypherFormat` config:\n\n- `create` (default) - only uses the `CREATE` clause\n\n- `updateAll` - uses `MERGE` instead of `CREATE`.\n\n- `addStructure` - uses `MATCH` for nodes and `MERGE` for relationships.\n\n- `updateStructure` - uses `MERGE` and `MATCH` for nodes and relationships.\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:13:04.273",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e\u003ccode\u003ecypherFormat\u003c/code\u003e config:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ecreate\u003c/code\u003e (default) - only uses the \u003ccode\u003eCREATE\u003c/code\u003e clause\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eupdateAll\u003c/code\u003e - uses \u003ccode\u003eMERGE\u003c/code\u003e instead of \u003ccode\u003eCREATE\u003c/code\u003e. If those entities may already exist in the destination database, we may choose to use another format.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eaddStructure\u003c/code\u003e - uses \u003ccode\u003eMATCH\u003c/code\u003e for nodes and \u003ccode\u003eMERGE\u003c/code\u003e for relationships. If we already have the nodes in our destination database, we can use cypherFormat: \u0026ldquo;addStructure\u0026rdquo; to create Cypher CREATE statements for just the relationships.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eupdateStructure\u003c/code\u003e - uses \u003ccode\u003eMERGE\u003c/code\u003e and \u003ccode\u003eMATCH\u003c/code\u003e for nodes and relationships. If those relationships do exist but have properties that need to be updated, we can use cypherFormat: \u0026ldquo;updateStructure\u0026rdquo; to create our import script.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666607181427_1851482496",
      "id": "paragraph_1666607181427_1851482496",
      "dateCreated": "2022-10-24 10:26:21.427",
      "dateStarted": "2022-11-04 13:09:05.039",
      "dateFinished": "2022-11-04 13:09:05.066",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testUpdateAll.cypher\", {cypherFormat: \u0027updateAll\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:05:07.211",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testUpdateAll.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t73\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666607087524_863233031",
      "id": "paragraph_1666607087524_863233031",
      "dateCreated": "2022-10-24 10:24:47.524",
      "dateStarted": "2022-11-04 13:05:07.226",
      "dateFinished": "2022-11-04 13:05:07.362",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nIf those entities may already exist in the destination database, we may choose to use another format.\n\n```\n:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n\n// \n:begin\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\n\n// merge statement\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc...\n\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\n\n// match...\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:93}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:96}, properties:{}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{}}, {start: {name:\"Robert Longo\"}, end: {_id:101}, properties:{}}, {start: {name:\"Tom Tykwer\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:112}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:129}, properties:{}}, {start: {name:\"Frank Darabont\"}, end: {_id:131}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:138}, properties:{}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:145}, properties:{}}, {start: {name:\"Jan de Bont\"}, end: {_id:148}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:151}, properties:{}}, {start: {name:\"Milos Forman\"}, end: {_id:153}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\n\n\n// etc...\n\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:12:50.308",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf those entities may already exist in the destination database, we may choose to use another format.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n\n// \n:begin\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\n\n// merge statement\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc...\n\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\n\n// match...\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:93}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:96}, properties:{}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{}}, {start: {name:\u0026quot;Robert Longo\u0026quot;}, end: {_id:101}, properties:{}}, {start: {name:\u0026quot;Tom Tykwer\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:112}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Frank Darabont\u0026quot;}, end: {_id:131}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:138}, properties:{}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:145}, properties:{}}, {start: {name:\u0026quot;Jan de Bont\u0026quot;}, end: {_id:148}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:151}, properties:{}}, {start: {name:\u0026quot;Milos Forman\u0026quot;}, end: {_id:153}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\n\n\n// etc...\n\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567094175_976990248",
      "id": "paragraph_1667567094175_976990248",
      "dateCreated": "2022-11-04 13:04:54.175",
      "dateStarted": "2022-11-04 13:12:50.308",
      "dateFinished": "2022-11-04 13:12:50.325",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testUpdateStructure.cypher\", {cypherFormat: \u0027updateStructure\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:09:44.337",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testUpdateStructure.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t0\t253\t190\t66\t253\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567355707_1192313309",
      "id": "paragraph_1667567355707_1192313309",
      "dateCreated": "2022-11-04 13:09:15.707",
      "dateStarted": "2022-11-04 13:09:36.581",
      "dateFinished": "2022-11-04 13:09:36.749",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\nIf those relationships do exist but have properties that need to be updated, we can use cypherFormat: \"updateStructure\" to create our import script.\n \n```\n\n// we don\u0027t create node indexes/constraints\n\n// we just create rels...\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:93}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:96}, properties:{}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{}}, {start: {name:\"Robert Longo\"}, end: {_id:101}, properties:{}}, {start: {name:\"Tom Tykwer\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:112}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:129}, properties:{}}, {start: {name:\"Frank Darabont\"}, end: {_id:131}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:138}, properties:{}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:145}, properties:{}}, {start: {name:\"Jan de Bont\"}, end: {_id:148}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:151}, properties:{}}, {start: {name:\"Milos Forman\"}, end: {_id:153}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Chris Columbus\"}, end: {_id:158}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:160}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:162}, properties:{}}, {start: {name:\"Penny Marshall\"}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"James Thompson\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Angela Scope\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Paul Blythe\"}, end: {name:\"Angela Scope\"}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nMERGE (start)-[r:FOLLOWS]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Franco e Ciccio\"}, end: {_id:1}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:10}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:11}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:82}, properties:{}}, {start: {name:\"Stefan Arndt\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:117}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:129}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:129}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:129}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:PRODUCED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{}}, {start: {name:\"Jim Cash\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:82}, properties:{}}, {start: {name:\"David Mitchell\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:WROTE]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Giandomenico Fracchia\"}, end: {_id:1}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:1}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:1}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:1}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Emil Eifrem\"}, end: {_id:1}, properties:{roles:[\"Emil\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:10}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:10}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:10}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:10}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:11}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:11}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:11}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:11}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:12}, properties:{roles:[\"Kevin Lomax\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:12}, properties:{roles:[\"Mary Ann Lomax\"]}}, {start: {name:\"Al Pacino\"}, end: {_id:12}, properties:{roles:[\"John Milton\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:16}, properties:{roles:[\"Lt. Daniel Kaffee\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:16}, properties:{roles:[\"Col. Nathan R. Jessup\"]}}, {start: {name:\"Demi Moore\"}, end: {_id:16}, properties:{roles:[\"Lt. Cdr. JoAnne Galloway\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:16}, properties:{roles:[\"Capt. Jack Ross\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Kiefer Sutherland\"}, end: {_id:16}, properties:{roles:[\"Lt. Jonathan Kendrick\"]}}, {start: {name:\"Noah Wyle\"}, end: {_id:16}, properties:{roles:[\"Cpl. Jeffrey Barnes\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:16}, properties:{roles:[\"Cpl. Carl Hammaker\"]}}, {start: {name:\"Kevin Pollak\"}, end: {_id:16}, properties:{roles:[\"Lt. Sam Weinberg\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:16}, properties:{roles:[\"Lt. Col. Matthew Andrew Markinson\"]}}, {start: {name:\"James Marshall\"}, end: {_id:16}, properties:{roles:[\"Pfc. Louden Downey\"]}}, {start: {name:\"Christopher Guest\"}, end: {_id:16}, properties:{roles:[\"Dr. Stone\"]}}, {start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{roles:[\"Man in Bar\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:30}, properties:{roles:[\"Maverick\"]}}, {start: {name:\"Kelly McGillis\"}, end: {_id:30}, properties:{roles:[\"Charlie\"]}}, {start: {name:\"Val Kilmer\"}, end: {_id:30}, properties:{roles:[\"Iceman\"]}}, {start: {name:\"Anthony Edwards\"}, end: {_id:30}, properties:{roles:[\"Goose\"]}}, {start: {name:\"Tom Skerritt\"}, end: {_id:30}, properties:{roles:[\"Viper\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:30}, properties:{roles:[\"Carole\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:38}, properties:{roles:[\"Jerry Maguire\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:38}, properties:{roles:[\"Rod Tidwell\"]}}, {start: {name:\"Renee Zellweger\"}, end: {_id:38}, properties:{roles:[\"Dorothy Boyd\"]}}, {start: {name:\"Kelly Preston\"}, end: {_id:38}, properties:{roles:[\"Avery Bishop\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:38}, properties:{roles:[\"Frank Cushman\"]}}, {start: {name:\"Jay Mohr\"}, end: {_id:38}, properties:{roles:[\"Bob Sugar\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Bonnie Hunt\"}, end: {_id:38}, properties:{roles:[\"Laurel Boyd\"]}}, {start: {name:\"Regina King\"}, end: {_id:38}, properties:{roles:[\"Marcee Tidwell\"]}}, {start: {name:\"Jonathan Lipnicki\"}, end: {_id:38}, properties:{roles:[\"Ray Boyd\"]}}, {start: {name:\"Wil Wheaton\"}, end: {_id:47}, properties:{roles:[\"Gordie Lachance\"]}}, {start: {name:\"River Phoenix\"}, end: {_id:47}, properties:{roles:[\"Chris Chambers\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:47}, properties:{roles:[\"Vern Tessio\"]}}, {start: {name:\"Corey Feldman\"}, end: {_id:47}, properties:{roles:[\"Teddy Duchamp\"]}}, {start: {name:\"John Cusack\"}, end: {_id:47}, properties:{roles:[\"Denny Lachance\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:47}, properties:{roles:[\"Ace Merrill\"]}}, {start: {name:\"Marshall Bell\"}, end: {_id:47}, properties:{roles:[\"Mr. Lachance\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:53}, properties:{roles:[\"Melvin Udall\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:53}, properties:{roles:[\"Carol Connelly\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:53}, properties:{roles:[\"Simon Bishop\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:53}, properties:{roles:[\"Frank Sachs\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:57}, properties:{roles:[\"Chris Nielsen\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:57}, properties:{roles:[\"Albert Lewis\"]}}, {start: {name:\"Annabella Sciorra\"}, end: {_id:57}, properties:{roles:[\"Annie Collins-Nielsen\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:57}, properties:{roles:[\"The Tracker\"]}}, {start: {name:\"Werner Herzog\"}, end: {_id:57}, properties:{roles:[\"The Face\"]}}, {start: {name:\"Ethan Hawke\"}, end: {_id:63}, properties:{roles:[\"Ishmael Chambers\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\n\n// ...\n\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:14:38.694",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf those relationships do exist but have properties that need to be updated, we can use cypherFormat: \u0026ldquo;updateStructure\u0026rdquo; to create our import script.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n// we don\u0027t create node indexes/constraints\n\n// we just create rels...\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:93}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:96}, properties:{}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{}}, {start: {name:\u0026quot;Robert Longo\u0026quot;}, end: {_id:101}, properties:{}}, {start: {name:\u0026quot;Tom Tykwer\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:112}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Frank Darabont\u0026quot;}, end: {_id:131}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:138}, properties:{}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:145}, properties:{}}, {start: {name:\u0026quot;Jan de Bont\u0026quot;}, end: {_id:148}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:151}, properties:{}}, {start: {name:\u0026quot;Milos Forman\u0026quot;}, end: {_id:153}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Chris Columbus\u0026quot;}, end: {_id:158}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:160}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:162}, properties:{}}, {start: {name:\u0026quot;Penny Marshall\u0026quot;}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;James Thompson\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Angela Scope\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Paul Blythe\u0026quot;}, end: {name:\u0026quot;Angela Scope\u0026quot;}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nMERGE (start)-[r:FOLLOWS]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Stefan Arndt\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:PRODUCED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Jim Cash\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;David Mitchell\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:WROTE]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Emil Eifrem\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Emil\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Kevin Lomax\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Mary Ann Lomax\u0026quot;]}}, {start: {name:\u0026quot;Al Pacino\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;John Milton\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Daniel Kaffee\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Col. Nathan R. Jessup\u0026quot;]}}, {start: {name:\u0026quot;Demi Moore\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Cdr. JoAnne Galloway\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Capt. Jack Ross\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Jonathan Kendrick\u0026quot;]}}, {start: {name:\u0026quot;Noah Wyle\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Jeffrey Barnes\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Carl Hammaker\u0026quot;]}}, {start: {name:\u0026quot;Kevin Pollak\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Sam Weinberg\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Col. Matthew Andrew Markinson\u0026quot;]}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Pfc. Louden Downey\u0026quot;]}}, {start: {name:\u0026quot;Christopher Guest\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Dr. Stone\u0026quot;]}}, {start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Man in Bar\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Maverick\u0026quot;]}}, {start: {name:\u0026quot;Kelly McGillis\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Charlie\u0026quot;]}}, {start: {name:\u0026quot;Val Kilmer\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Iceman\u0026quot;]}}, {start: {name:\u0026quot;Anthony Edwards\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Goose\u0026quot;]}}, {start: {name:\u0026quot;Tom Skerritt\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Viper\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Carole\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Jerry Maguire\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Rod Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Renee Zellweger\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Dorothy Boyd\u0026quot;]}}, {start: {name:\u0026quot;Kelly Preston\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Avery Bishop\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Frank Cushman\u0026quot;]}}, {start: {name:\u0026quot;Jay Mohr\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Bob Sugar\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Laurel Boyd\u0026quot;]}}, {start: {name:\u0026quot;Regina King\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Marcee Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Jonathan Lipnicki\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Ray Boyd\u0026quot;]}}, {start: {name:\u0026quot;Wil Wheaton\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Gordie Lachance\u0026quot;]}}, {start: {name:\u0026quot;River Phoenix\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Chris Chambers\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Vern Tessio\u0026quot;]}}, {start: {name:\u0026quot;Corey Feldman\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Teddy Duchamp\u0026quot;]}}, {start: {name:\u0026quot;John Cusack\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Denny Lachance\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Ace Merrill\u0026quot;]}}, {start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Mr. Lachance\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Melvin Udall\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Carol Connelly\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Simon Bishop\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Frank Sachs\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Chris Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Albert Lewis\u0026quot;]}}, {start: {name:\u0026quot;Annabella Sciorra\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Annie Collins-Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Tracker\u0026quot;]}}, {start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Face\u0026quot;]}}, {start: {name:\u0026quot;Ethan Hawke\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Ishmael Chambers\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\n\n// ...\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567389271_953557370",
      "id": "paragraph_1667567389271_953557370",
      "dateCreated": "2022-11-04 13:09:49.271",
      "dateStarted": "2022-11-04 13:14:38.695",
      "dateFinished": "2022-11-04 13:14:38.734",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testAddStructure.cypher\", {cypherFormat: \u0027addStructure\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:13:57.274",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testAddStructure.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t67\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567050685_153104786",
      "id": "paragraph_1667567050685_153104786",
      "dateCreated": "2022-11-04 13:04:10.685",
      "dateStarted": "2022-11-04 13:13:36.234",
      "dateFinished": "2022-11-04 13:13:36.370",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nIf we already have the nodes in our destination database, we can use cypherFormat: \"addStructure\" to create Cypher CREATE statements for just the relationships.\n\n\n```\n\n// we don\u0027t create node indexes/constraints\n\n:begin\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:98, properties:{tagline:\"It\u0027s a hell of a thing, killing a man\", title:\"Unforgiven\", released:1992}}, {_id:101, properties:{tagline:\"The hottest data on earth. In the coolest head in town\", title:\"Johnny Mnemonic\", released:1995}}, {_id:106, properties:{tagline:\"Everything is connected\", title:\"Cloud Atlas\", released:2012}}, {_id:112, properties:{tagline:\"Break The Codes\", title:\"The Da Vinci Code\", released:2006}}, {_id:117, properties:{tagline:\"Freedom! Forever!\", title:\"V for Vendetta\", released:2006}}, {_id:122, properties:{tagline:\"Speed has no limits\", title:\"Speed Racer\", released:2008}}, {_id:129, properties:{tagline:\"Prepare to enter a secret world of assassins\", title:\"Ninja Assassin\", released:2009}}, {_id:131, properties:{tagline:\"Walk a mile you\u0027ll never forget.\", title:\"The Green Mile\", released:1999}}, {_id:138, properties:{tagline:\"400 million people were waiting for the truth.\", title:\"Frost/Nixon\", released:2008}}, {_id:142, properties:{tagline:\"He didn\u0027t want law. He wanted justice.\", title:\"Hoffa\", released:1992}}, {_id:145, properties:{tagline:\"Houston, we have a problem.\", title:\"Apollo 13\", released:1995}}, {_id:148, properties:{tagline:\"Don\u0027t Breathe. Don\u0027t Look Back.\", title:\"Twister\", released:1996}}, {_id:151, properties:{tagline:\"At the edge of the world, his journey begins.\", title:\"Cast Away\", released:2000}}, {_id:153, properties:{tagline:\"If he\u0027s crazy, what does that make you?\", title:\"One Flew Over the Cuckoo\u0027s Nest\", released:1975}}, {_id:155, properties:{title:\"Something\u0027s Gotta Give\", released:2003}}, {_id:158, properties:{tagline:\"One robot\u0027s 200 year journey to become an ordinary man.\", title:\"Bicentennial Man\", released:1999}}, {_id:160, properties:{tagline:\"A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\", title:\"Charlie Wilson\u0027s War\", released:2007}}, {_id:162, properties:{tagline:\"This Holiday Season... Believe\", title:\"The Polar Express\", released:2004}}, {_id:163, properties:{tagline:\"Once in a lifetime you get a chance to do something different.\", title:\"A League of Their Own\", released:1992}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\nUNWIND [{name:\"Giandomenico Fracchia\", properties:{born:1964}}, {name:\"Carrie-Anne Moss\", properties:{children:[\"Al\", \"John\", \"Jack\"], born:1967}}, {name:\"Laurence Fishburne\", properties:{children:[\"Naruto\", \"Sasuke\", \"Sakura\"], born:1961}}, {name:\"Hugo Weaving\", properties:{born:1960}}, {name:\"Lilly Wachowski\", properties:{born:1967}}, {name:\"Lana Wachowski\", properties:{born:1965}}, {name:\"Franco e Ciccio\", properties:{born:1952}}, {name:\"Emil Eifrem\", properties:{born:1978}}, {name:\"Charlize Theron\", properties:{born:1975}}, {name:\"Al Pacino\", properties:{born:1940}}, {name:\"Taylor Hackford\", properties:{born:1944}}, {name:\"Tom Cruise\", properties:{born:1962}}, {name:\"Jack Nicholson\", properties:{born:1937}}, {name:\"Demi Moore\", properties:{born:1962}}, {name:\"Kevin Bacon\", properties:{born:1958}}, {name:\"Kiefer Sutherland\", properties:{born:1966}}, {name:\"Noah Wyle\", properties:{born:1971}}, {name:\"Cuba Gooding Jr.\", properties:{born:1968}}, {name:\"Kevin Pollak\", properties:{born:1957}}, {name:\"J.T. Walsh\", properties:{born:1943}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\"James Marshall\", properties:{born:1967}}, {name:\"Christopher Guest\", properties:{born:1948}}, {name:\"Rob Reiner\", properties:{born:1947}}, {name:\"Aaron Sorkin\", properties:{born:1961}}, {name:\"Kelly McGillis\", properties:{born:1957}}, {name:\"Val Kilmer\", properties:{born:1959}}, {name:\"Anthony Edwards\", properties:{born:1962}}, {name:\"Tom Skerritt\", properties:{born:1933}}, {name:\"Meg Ryan\", properties:{born:1961}}, {name:\"Tony Scott\", properties:{born:1944}}, {name:\"Jim Cash\", properties:{born:1941}}, {name:\"Renee Zellweger\", properties:{born:1969}}, {name:\"Kelly Preston\", properties:{born:1962}}, {name:\"Jerry O\u0027Connell\", properties:{born:1974}}, {name:\"Jay Mohr\", properties:{born:1970}}, {name:\"Bonnie Hunt\", properties:{born:1961}}, {name:\"Regina King\", properties:{born:1971}}, {name:\"Jonathan Lipnicki\", properties:{born:1996}}, {name:\"Cameron Crowe\", properties:{born:1957}}, {name:\"River Phoenix\", properties:{born:1970}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\"Corey Feldman\", properties:{born:1971}}, {name:\"Wil Wheaton\", properties:{born:1972}}, {name:\"John Cusack\", properties:{born:1966}}, {name:\"Marshall Bell\", properties:{born:1942}}, {name:\"Helen Hunt\", properties:{born:1963}}, {name:\"Greg Kinnear\", properties:{born:1963}}, {name:\"James L. Brooks\", properties:{born:1940}}, {name:\"Annabella Sciorra\", properties:{born:1960}}, {name:\"Max von Sydow\", properties:{born:1929}}, {name:\"Werner Herzog\", properties:{born:1942}}, {name:\"Robin Williams\", properties:{born:1951}}, {name:\"Vincent Ward\", properties:{born:1956}}, {name:\"Ethan Hawke\", properties:{born:1970}}, {name:\"Rick Yune\", properties:{born:1971}}, {name:\"James Cromwell\", properties:{born:1940}}, {name:\"Scott Hicks\", properties:{born:1953}}, {name:\"Parker Posey\", properties:{born:1968}}, {name:\"Dave Chappelle\", properties:{born:1973}}, {name:\"Steve Zahn\", properties:{born:1967}}, {name:\"Tom Hanks\", properties:{born:1956}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\"Nora Ephron\", properties:{born:1941}}, {name:\"Rita Wilson\", properties:{born:1956}}, {name:\"Bill Pullman\", properties:{born:1953}}, {name:\"Victor Garber\", properties:{born:1949}}, {name:\"Rosie O\u0027Donnell\", properties:{born:1962}}, {name:\"John Patrick Stanley\", properties:{born:1950}}, {name:\"Nathan Lane\", properties:{born:1956}}, {name:\"Billy Crystal\", properties:{born:1948}}, {name:\"Carrie Fisher\", properties:{born:1956}}, {name:\"Bruno Kirby\", properties:{born:1949}}, {name:\"Liv Tyler\", properties:{born:1977}}, {name:\"Brooke Langton\", properties:{born:1970}}, {name:\"Gene Hackman\", properties:{born:1929}}, {name:\"Orlando Jones\", properties:{born:1968}}, {name:\"Howard Deutch\", properties:{born:1950}}, {name:\"Christian Bale\", properties:{born:1974}}, {name:\"Zach Grenier\", properties:{born:1954}}, {name:\"Mike Nichols\", properties:{born:1931}}, {name:\"Richard Harris\", properties:{born:1930}}, {name:\"Clint Eastwood\", properties:{born:1930}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\"Takeshi Kitano\", properties:{born:1947}}, {name:\"Dina Meyer\", properties:{born:1968}}, {name:\"Ice-T\", properties:{born:1958}}, {name:\"Robert Longo\", properties:{born:1953}}, {name:\"Halle Berry\", properties:{born:1966}}, {name:\"Jim Broadbent\", properties:{born:1949}}, {name:\"Tom Tykwer\", properties:{born:1965}}, {name:\"David Mitchell\", properties:{born:1969}}, {name:\"Stefan Arndt\", properties:{born:1961}}, {name:\"Ian McKellen\", properties:{born:1939}}, {name:\"Audrey Tautou\", properties:{born:1976}}, {name:\"Paul Bettany\", properties:{born:1971}}, {name:\"Ron Howard\", properties:{born:1954}}, {name:\"Natalie Portman\", properties:{born:1981}}, {name:\"Stephen Rea\", properties:{born:1946}}, {name:\"John Hurt\", properties:{born:1940}}, {name:\"Ben Miles\", properties:{born:1967}}, {name:\"Emile Hirsch\", properties:{born:1985}}, {name:\"John Goodman\", properties:{born:1960}}, {name:\"Susan Sarandon\", properties:{born:1946}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\"Matthew Fox\", properties:{born:1966}}, {name:\"Christina Ricci\", properties:{born:1980}}, {name:\"Rain\", properties:{born:1982}}, {name:\"Naomie Harris\", properties:{}}, {name:\"Michael Clarke Duncan\", properties:{born:1957}}, {name:\"David Morse\", properties:{born:1953}}, {name:\"Sam Rockwell\", properties:{born:1968}}, {name:\"Gary Sinise\", properties:{born:1955}}, {name:\"Patricia Clarkson\", properties:{born:1959}}, {name:\"Frank Darabont\", properties:{born:1959}}, {name:\"Frank Langella\", properties:{born:1938}}, {name:\"Michael Sheen\", properties:{born:1969}}, {name:\"Oliver Platt\", properties:{born:1960}}, {name:\"Danny DeVito\", properties:{born:1944}}, {name:\"John C. Reilly\", properties:{born:1965}}, {name:\"Ed Harris\", properties:{born:1950}}, {name:\"Bill Paxton\", properties:{born:1955}}, {name:\"Philip Seymour Hoffman\", properties:{born:1967}}, {name:\"Jan de Bont\", properties:{born:1943}}, {name:\"Robert Zemeckis\", properties:{born:1951}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\"Milos Forman\", properties:{born:1932}}, {name:\"Diane Keaton\", properties:{born:1946}}, {name:\"Nancy Meyers\", properties:{born:1949}}, {name:\"Chris Columbus\", properties:{born:1958}}, {name:\"Julia Roberts\", properties:{born:1967}}, {name:\"Madonna\", properties:{born:1954}}, {name:\"Geena Davis\", properties:{born:1956}}, {name:\"Lori Petty\", properties:{born:1963}}, {name:\"Penny Marshall\", properties:{born:1943}}, {name:\"Paul Blythe\", properties:{}}, {name:\"Angela Scope\", properties:{}}, {name:\"Jessica Thompson\", properties:{}}, {name:\"James Thompson\", properties:{}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\n:commit\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:93}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:96}, properties:{}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{}}, {start: {name:\"Robert Longo\"}, end: {_id:101}, properties:{}}, {start: {name:\"Tom Tykwer\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:112}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:129}, properties:{}}, {start: {name:\"Frank Darabont\"}, end: {_id:131}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:138}, properties:{}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:145}, properties:{}}, {start: {name:\"Jan de Bont\"}, end: {_id:148}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:151}, properties:{}}, {start: {name:\"Milos Forman\"}, end: {_id:153}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Chris Columbus\"}, end: {_id:158}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:160}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:162}, properties:{}}, {start: {name:\"Penny Marshall\"}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"James Thompson\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Angela Scope\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Paul Blythe\"}, end: {name:\"Angela Scope\"}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nCREATE (start)-[r:FOLLOWS]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Franco e Ciccio\"}, end: {_id:1}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:10}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:11}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:82}, properties:{}}, {start: {name:\"Stefan Arndt\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:117}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:129}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:129}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:129}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:PRODUCED]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{}}, {start: {name:\"Jim Cash\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:82}, properties:{}}, {start: {name:\"David Mitchell\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:WROTE]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Giandomenico Fracchia\"}, end: {_id:1}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:1}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:1}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:1}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Emil Eifrem\"}, end: {_id:1}, properties:{roles:[\"Emil\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:10}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:10}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:10}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:10}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:11}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:11}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:11}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:11}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:12}, properties:{roles:[\"Kevin Lomax\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:12}, properties:{roles:[\"Mary Ann Lomax\"]}}, {start: {name:\"Al Pacino\"}, end: {_id:12}, properties:{roles:[\"John Milton\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:16}, properties:{roles:[\"Lt. Daniel Kaffee\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:16}, properties:{roles:[\"Col. Nathan R. Jessup\"]}}, {start: {name:\"Demi Moore\"}, end: {_id:16}, properties:{roles:[\"Lt. Cdr. JoAnne Galloway\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:16}, properties:{roles:[\"Capt. Jack Ross\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Kiefer Sutherland\"}, end: {_id:16}, properties:{roles:[\"Lt. Jonathan Kendrick\"]}}, {start: {name:\"Noah Wyle\"}, end: {_id:16}, properties:{roles:[\"Cpl. Jeffrey Barnes\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:16}, properties:{roles:[\"Cpl. Carl Hammaker\"]}}, {start: {name:\"Kevin Pollak\"}, end: {_id:16}, properties:{roles:[\"Lt. Sam Weinberg\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:16}, properties:{roles:[\"Lt. Col. Matthew Andrew Markinson\"]}}, {start: {name:\"James Marshall\"}, end: {_id:16}, properties:{roles:[\"Pfc. Louden Downey\"]}}, {start: {name:\"Christopher Guest\"}, end: {_id:16}, properties:{roles:[\"Dr. Stone\"]}}, {start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{roles:[\"Man in Bar\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:30}, properties:{roles:[\"Maverick\"]}}, {start: {name:\"Kelly McGillis\"}, end: {_id:30}, properties:{roles:[\"Charlie\"]}}, {start: {name:\"Val Kilmer\"}, end: {_id:30}, properties:{roles:[\"Iceman\"]}}, {start: {name:\"Anthony Edwards\"}, end: {_id:30}, properties:{roles:[\"Goose\"]}}, {start: {name:\"Tom Skerritt\"}, end: {_id:30}, properties:{roles:[\"Viper\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:30}, properties:{roles:[\"Carole\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:38}, properties:{roles:[\"Jerry Maguire\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:38}, properties:{roles:[\"Rod Tidwell\"]}}, {start: {name:\"Renee Zellweger\"}, end: {_id:38}, properties:{roles:[\"Dorothy Boyd\"]}}, {start: {name:\"Kelly Preston\"}, end: {_id:38}, properties:{roles:[\"Avery Bishop\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:38}, properties:{roles:[\"Frank Cushman\"]}}, {start: {name:\"Jay Mohr\"}, end: {_id:38}, properties:{roles:[\"Bob Sugar\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Bonnie Hunt\"}, end: {_id:38}, properties:{roles:[\"Laurel Boyd\"]}}, {start: {name:\"Regina King\"}, end: {_id:38}, properties:{roles:[\"Marcee Tidwell\"]}}, {start: {name:\"Jonathan Lipnicki\"}, end: {_id:38}, properties:{roles:[\"Ray Boyd\"]}}, {start: {name:\"Wil Wheaton\"}, end: {_id:47}, properties:{roles:[\"Gordie Lachance\"]}}, {start: {name:\"River Phoenix\"}, end: {_id:47}, properties:{roles:[\"Chris Chambers\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:47}, properties:{roles:[\"Vern Tessio\"]}}, {start: {name:\"Corey Feldman\"}, end: {_id:47}, properties:{roles:[\"Teddy Duchamp\"]}}, {start: {name:\"John Cusack\"}, end: {_id:47}, properties:{roles:[\"Denny Lachance\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:47}, properties:{roles:[\"Ace Merrill\"]}}, {start: {name:\"Marshall Bell\"}, end: {_id:47}, properties:{roles:[\"Mr. Lachance\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:53}, properties:{roles:[\"Melvin Udall\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:53}, properties:{roles:[\"Carol Connelly\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:53}, properties:{roles:[\"Simon Bishop\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:53}, properties:{roles:[\"Frank Sachs\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:57}, properties:{roles:[\"Chris Nielsen\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:57}, properties:{roles:[\"Albert Lewis\"]}}, {start: {name:\"Annabella Sciorra\"}, end: {_id:57}, properties:{roles:[\"Annie Collins-Nielsen\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:57}, properties:{roles:[\"The Tracker\"]}}, {start: {name:\"Werner Herzog\"}, end: {_id:57}, properties:{roles:[\"The Face\"]}}, {start: {name:\"Ethan Hawke\"}, end: {_id:63}, properties:{roles:[\"Ishmael Chambers\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Rick Yune\"}, end: {_id:63}, properties:{roles:[\"Kazuo Miyamoto\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:63}, properties:{roles:[\"Nels Gudmundsson\"]}}, {start: {name:\"James Cromwell\"}, end: {_id:63}, properties:{roles:[\"Judge Fielding\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:68}, properties:{roles:[\"Joe Fox\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:68}, properties:{roles:[\"Kathleen Kelly\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:68}, properties:{roles:[\"Frank Navasky\"]}}, {start: {name:\"Parker Posey\"}, end: {_id:68}, properties:{roles:[\"Patricia Eden\"]}}, {start: {name:\"Dave Chappelle\"}, end: {_id:68}, properties:{roles:[\"Kevin Jackson\"]}}, {start: {name:\"Steve Zahn\"}, end: {_id:68}, properties:{roles:[\"George Pappas\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:74}, properties:{roles:[\"Sam Baldwin\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:74}, properties:{roles:[\"Annie Reed\"]}}, {start: {name:\"Rita Wilson\"}, end: {_id:74}, properties:{roles:[\"Suzy\"]}}, {start: {name:\"Bill Pullman\"}, end: {_id:74}, properties:{roles:[\"Walter\"]}}, {start: {name:\"Victor Garber\"}, end: {_id:74}, properties:{roles:[\"Greg\"]}}, {start: {name:\"Rosie O\u0027Donnell\"}, end: {_id:74}, properties:{roles:[\"Becky\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:79}, properties:{roles:[\"Joe Banks\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:79}, properties:{roles:[\"DeDe\", \"Angelica Graynamore\", \"Patricia Graynamore\"]}}, {start: {name:\"Nathan Lane\"}, end: {_id:79}, properties:{roles:[\"Baw\"]}}, {start: {name:\"Billy Crystal\"}, end: {_id:82}, properties:{roles:[\"Harry Burns\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:82}, properties:{roles:[\"Sally Albright\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Carrie Fisher\"}, end: {_id:82}, properties:{roles:[\"Marie\"]}}, {start: {name:\"Bruno Kirby\"}, end: {_id:82}, properties:{roles:[\"Jess\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{roles:[\"Mr. White\"]}}, {start: {name:\"Liv Tyler\"}, end: {_id:86}, properties:{roles:[\"Faye Dolan\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:86}, properties:{roles:[\"Tina\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:88}, properties:{roles:[\"Shane Falco\"]}}, {start: {name:\"Brooke Langton\"}, end: {_id:88}, properties:{roles:[\"Annabelle Farrell\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:88}, properties:{roles:[\"Jimmy McGinty\"]}}, {start: {name:\"Orlando Jones\"}, end: {_id:88}, properties:{roles:[\"Clifford Franklin\"]}}, {start: {name:\"Marshall Bell\"}, end: {_id:93}, properties:{roles:[\"Admiral\"]}}, {start: {name:\"Christian Bale\"}, end: {_id:93}, properties:{roles:[\"Dieter Dengler\"]}}, {start: {name:\"Zach Grenier\"}, end: {_id:93}, properties:{roles:[\"Squad Leader\"]}}, {start: {name:\"Steve Zahn\"}, end: {_id:93}, properties:{roles:[\"Duane\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:96}, properties:{roles:[\"Armand Goldman\"]}}, {start: {name:\"Nathan Lane\"}, end: {_id:96}, properties:{roles:[\"Albert Goldman\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:96}, properties:{roles:[\"Sen. Kevin Keeley\"]}}, {start: {name:\"Richard Harris\"}, end: {_id:98}, properties:{roles:[\"English Bob\"]}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{roles:[\"Bill Munny\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:98}, properties:{roles:[\"Little Bill Daggett\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:101}, properties:{roles:[\"Johnny Mnemonic\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Takeshi Kitano\"}, end: {_id:101}, properties:{roles:[\"Takahashi\"]}}, {start: {name:\"Dina Meyer\"}, end: {_id:101}, properties:{roles:[\"Jane\"]}}, {start: {name:\"Ice-T\"}, end: {_id:101}, properties:{roles:[\"J-Bone\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:106}, properties:{roles:[\"Zachry\", \"Dr. Henry Goose\", \"Isaac Sachs\", \"Dermot Hoggins\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:106}, properties:{roles:[\"Bill Smoke\", \"Haskell Moore\", \"Tadeusz Kesselring\", \"Nurse Noakes\", \"Boardman Mephi\", \"Old Georgie\"]}}, {start: {name:\"Halle Berry\"}, end: {_id:106}, properties:{roles:[\"Luisa Rey\", \"Jocasta Ayrs\", \"Ovid\", \"Meronym\"]}}, {start: {name:\"Jim Broadbent\"}, end: {_id:106}, properties:{roles:[\"Vyvyan Ayrs\", \"Captain Molyneux\", \"Timothy Cavendish\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:112}, properties:{roles:[\"Dr. Robert Langdon\"]}}, {start: {name:\"Ian McKellen\"}, end: {_id:112}, properties:{roles:[\"Sir Leight Teabing\"]}}, {start: {name:\"Audrey Tautou\"}, end: {_id:112}, properties:{roles:[\"Sophie Neveu\"]}}, {start: {name:\"Paul Bettany\"}, end: {_id:112}, properties:{roles:[\"Silas\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:117}, properties:{roles:[\"V\"]}}, {start: {name:\"Natalie Portman\"}, end: {_id:117}, properties:{roles:[\"Evey Hammond\"]}}, {start: {name:\"Stephen Rea\"}, end: {_id:117}, properties:{roles:[\"Eric Finch\"]}}, {start: {name:\"John Hurt\"}, end: {_id:117}, properties:{roles:[\"High Chancellor Adam Sutler\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:117}, properties:{roles:[\"Dascomb\"]}}, {start: {name:\"Emile Hirsch\"}, end: {_id:122}, properties:{roles:[\"Speed Racer\"]}}, {start: {name:\"John Goodman\"}, end: {_id:122}, properties:{roles:[\"Pops\"]}}, {start: {name:\"Susan Sarandon\"}, end: {_id:122}, properties:{roles:[\"Mom\"]}}, {start: {name:\"Matthew Fox\"}, end: {_id:122}, properties:{roles:[\"Racer X\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Christina Ricci\"}, end: {_id:122}, properties:{roles:[\"Trixie\"]}}, {start: {name:\"Rain\"}, end: {_id:122}, properties:{roles:[\"Taejo Togokahn\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:122}, properties:{roles:[\"Cass Jones\"]}}, {start: {name:\"Rain\"}, end: {_id:129}, properties:{roles:[\"Raizo\"]}}, {start: {name:\"Naomie Harris\"}, end: {_id:129}, properties:{roles:[\"Mika Coretti\"]}}, {start: {name:\"Rick Yune\"}, end: {_id:129}, properties:{roles:[\"Takeshi\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:129}, properties:{roles:[\"Ryan Maslow\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:131}, properties:{roles:[\"Paul Edgecomb\"]}}, {start: {name:\"Michael Clarke Duncan\"}, end: {_id:131}, properties:{roles:[\"John Coffey\"]}}, {start: {name:\"David Morse\"}, end: {_id:131}, properties:{roles:[\"Brutus \\\"Brutal\\\" Howell\"]}}, {start: {name:\"Bonnie Hunt\"}, end: {_id:131}, properties:{roles:[\"Jan Edgecomb\"]}}, {start: {name:\"James Cromwell\"}, end: {_id:131}, properties:{roles:[\"Warden Hal Moores\"]}}, {start: {name:\"Sam Rockwell\"}, end: {_id:131}, properties:{roles:[\"\\\"Wild Bill\\\" Wharton\"]}}, {start: {name:\"Gary Sinise\"}, end: {_id:131}, properties:{roles:[\"Burt Hammersmith\"]}}, {start: {name:\"Patricia Clarkson\"}, end: {_id:131}, properties:{roles:[\"Melinda Moores\"]}}, {start: {name:\"Frank Langella\"}, end: {_id:138}, properties:{roles:[\"Richard Nixon\"]}}, {start: {name:\"Michael Sheen\"}, end: {_id:138}, properties:{roles:[\"David Frost\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:138}, properties:{roles:[\"Jack Brennan\"]}}, {start: {name:\"Oliver Platt\"}, end: {_id:138}, properties:{roles:[\"Bob Zelnick\"]}}, {start: {name:\"Sam Rockwell\"}, end: {_id:138}, properties:{roles:[\"James Reston, Jr.\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Jack Nicholson\"}, end: {_id:142}, properties:{roles:[\"Hoffa\"]}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{roles:[\"Robert \\\"Bobby\\\" Ciaro\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:142}, properties:{roles:[\"Frank Fitzsimmons\"]}}, {start: {name:\"John C. Reilly\"}, end: {_id:142}, properties:{roles:[\"Peter \\\"Pete\\\" Connelly\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:145}, properties:{roles:[\"Jim Lovell\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:145}, properties:{roles:[\"Jack Swigert\"]}}, {start: {name:\"Ed Harris\"}, end: {_id:145}, properties:{roles:[\"Gene Kranz\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:145}, properties:{roles:[\"Fred Haise\"]}}, {start: {name:\"Gary Sinise\"}, end: {_id:145}, properties:{roles:[\"Ken Mattingly\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:148}, properties:{roles:[\"Bill Harding\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:148}, properties:{roles:[\"Dr. Jo Harding\"]}}, {start: {name:\"Zach Grenier\"}, end: {_id:148}, properties:{roles:[\"Eddie\"]}}, {start: {name:\"Philip Seymour Hoffman\"}, end: {_id:148}, properties:{roles:[\"Dustin \\\"Dusty\\\" Davis\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:151}, properties:{roles:[\"Chuck Noland\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:151}, properties:{roles:[\"Kelly Frears\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:153}, properties:{roles:[\"Randle McMurphy\"]}}, {start: {name:\"Danny DeVito\"}, end: {_id:153}, properties:{roles:[\"Martini\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:155}, properties:{roles:[\"Harry Sanborn\"]}}, {start: {name:\"Diane Keaton\"}, end: {_id:155}, properties:{roles:[\"Erica Barry\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:155}, properties:{roles:[\"Julian Mercer\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Robin Williams\"}, end: {_id:158}, properties:{roles:[\"Andrew Marin\"]}}, {start: {name:\"Oliver Platt\"}, end: {_id:158}, properties:{roles:[\"Rupert Burns\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:160}, properties:{roles:[\"Rep. Charlie Wilson\"]}}, {start: {name:\"Julia Roberts\"}, end: {_id:160}, properties:{roles:[\"Joanne Herring\"]}}, {start: {name:\"Philip Seymour Hoffman\"}, end: {_id:160}, properties:{roles:[\"Gust Avrakotos\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:162}, properties:{roles:[\"Hero Boy\", \"Father\", \"Conductor\", \"Hobo\", \"Scrooge\", \"Santa Claus\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:163}, properties:{roles:[\"Jimmy Dugan\"]}}, {start: {name:\"Geena Davis\"}, end: {_id:163}, properties:{roles:[\"Dottie Hinson\"]}}, {start: {name:\"Lori Petty\"}, end: {_id:163}, properties:{roles:[\"Kit Keller\"]}}, {start: {name:\"Rosie O\u0027Donnell\"}, end: {_id:163}, properties:{roles:[\"Doris Murphy\"]}}, {start: {name:\"Madonna\"}, end: {_id:163}, properties:{roles:[\"\\\"All the Way\\\" Mae Mordabito\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:163}, properties:{roles:[\"Bob Hinson\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Jessica Thompson\"}, end: {_id:106}, properties:{summary:\"An amazing journey\", rating:95}}, {start: {name:\"Jessica Thompson\"}, end: {_id:88}, properties:{summary:\"Silly, but fun\", rating:65}}, {start: {name:\"James Thompson\"}, end: {_id:88}, properties:{summary:\"The coolest football movie ever\", rating:100}}, {start: {name:\"Angela Scope\"}, end: {_id:88}, properties:{summary:\"Pretty funny at times\", rating:62}}, {start: {name:\"Jessica Thompson\"}, end: {_id:98}, properties:{summary:\"Dark, but compelling\", rating:85}}, {start: {name:\"Jessica Thompson\"}, end: {_id:96}, properties:{summary:\"Slapstick redeemed only by the Robin Williams and Gene Hackman\u0027s stellar performances\", rating:45}}, {start: {name:\"Jessica Thompson\"}, end: {_id:112}, properties:{summary:\"A solid romp\", rating:68}}, {start: {name:\"James Thompson\"}, end: {_id:112}, properties:{summary:\"Fun, but a little far fetched\", rating:65}}, {start: {name:\"Jessica Thompson\"}, end: {_id:38}, properties:{summary:\"You had me at Jerry\", rating:92}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:REVIEWED]-\u003e(end)  SET r +\u003d row.properties;\n:commit\n:begin\n:commit\n:begin\n:commit\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:15:01.992",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf we already have the nodes in our destination database, we can use cypherFormat: \u0026ldquo;addStructure\u0026rdquo; to create Cypher CREATE statements for just the relationships.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n// we don\u0027t create node indexes/constraints\n\n:begin\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:98, properties:{tagline:\u0026quot;It\u0027s a hell of a thing, killing a man\u0026quot;, title:\u0026quot;Unforgiven\u0026quot;, released:1992}}, {_id:101, properties:{tagline:\u0026quot;The hottest data on earth. In the coolest head in town\u0026quot;, title:\u0026quot;Johnny Mnemonic\u0026quot;, released:1995}}, {_id:106, properties:{tagline:\u0026quot;Everything is connected\u0026quot;, title:\u0026quot;Cloud Atlas\u0026quot;, released:2012}}, {_id:112, properties:{tagline:\u0026quot;Break The Codes\u0026quot;, title:\u0026quot;The Da Vinci Code\u0026quot;, released:2006}}, {_id:117, properties:{tagline:\u0026quot;Freedom! Forever!\u0026quot;, title:\u0026quot;V for Vendetta\u0026quot;, released:2006}}, {_id:122, properties:{tagline:\u0026quot;Speed has no limits\u0026quot;, title:\u0026quot;Speed Racer\u0026quot;, released:2008}}, {_id:129, properties:{tagline:\u0026quot;Prepare to enter a secret world of assassins\u0026quot;, title:\u0026quot;Ninja Assassin\u0026quot;, released:2009}}, {_id:131, properties:{tagline:\u0026quot;Walk a mile you\u0027ll never forget.\u0026quot;, title:\u0026quot;The Green Mile\u0026quot;, released:1999}}, {_id:138, properties:{tagline:\u0026quot;400 million people were waiting for the truth.\u0026quot;, title:\u0026quot;Frost/Nixon\u0026quot;, released:2008}}, {_id:142, properties:{tagline:\u0026quot;He didn\u0027t want law. He wanted justice.\u0026quot;, title:\u0026quot;Hoffa\u0026quot;, released:1992}}, {_id:145, properties:{tagline:\u0026quot;Houston, we have a problem.\u0026quot;, title:\u0026quot;Apollo 13\u0026quot;, released:1995}}, {_id:148, properties:{tagline:\u0026quot;Don\u0027t Breathe. Don\u0027t Look Back.\u0026quot;, title:\u0026quot;Twister\u0026quot;, released:1996}}, {_id:151, properties:{tagline:\u0026quot;At the edge of the world, his journey begins.\u0026quot;, title:\u0026quot;Cast Away\u0026quot;, released:2000}}, {_id:153, properties:{tagline:\u0026quot;If he\u0027s crazy, what does that make you?\u0026quot;, title:\u0026quot;One Flew Over the Cuckoo\u0027s Nest\u0026quot;, released:1975}}, {_id:155, properties:{title:\u0026quot;Something\u0027s Gotta Give\u0026quot;, released:2003}}, {_id:158, properties:{tagline:\u0026quot;One robot\u0027s 200 year journey to become an ordinary man.\u0026quot;, title:\u0026quot;Bicentennial Man\u0026quot;, released:1999}}, {_id:160, properties:{tagline:\u0026quot;A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\u0026quot;, title:\u0026quot;Charlie Wilson\u0027s War\u0026quot;, released:2007}}, {_id:162, properties:{tagline:\u0026quot;This Holiday Season... Believe\u0026quot;, title:\u0026quot;The Polar Express\u0026quot;, released:2004}}, {_id:163, properties:{tagline:\u0026quot;Once in a lifetime you get a chance to do something different.\u0026quot;, title:\u0026quot;A League of Their Own\u0026quot;, released:1992}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\nUNWIND [{name:\u0026quot;Giandomenico Fracchia\u0026quot;, properties:{born:1964}}, {name:\u0026quot;Carrie-Anne Moss\u0026quot;, properties:{children:[\u0026quot;Al\u0026quot;, \u0026quot;John\u0026quot;, \u0026quot;Jack\u0026quot;], born:1967}}, {name:\u0026quot;Laurence Fishburne\u0026quot;, properties:{children:[\u0026quot;Naruto\u0026quot;, \u0026quot;Sasuke\u0026quot;, \u0026quot;Sakura\u0026quot;], born:1961}}, {name:\u0026quot;Hugo Weaving\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Lilly Wachowski\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Lana Wachowski\u0026quot;, properties:{born:1965}}, {name:\u0026quot;Franco e Ciccio\u0026quot;, properties:{born:1952}}, {name:\u0026quot;Emil Eifrem\u0026quot;, properties:{born:1978}}, {name:\u0026quot;Charlize Theron\u0026quot;, properties:{born:1975}}, {name:\u0026quot;Al Pacino\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Taylor Hackford\u0026quot;, properties:{born:1944}}, {name:\u0026quot;Tom Cruise\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Jack Nicholson\u0026quot;, properties:{born:1937}}, {name:\u0026quot;Demi Moore\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Kevin Bacon\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Kiefer Sutherland\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Noah Wyle\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Cuba Gooding Jr.\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Kevin Pollak\u0026quot;, properties:{born:1957}}, {name:\u0026quot;J.T. Walsh\u0026quot;, properties:{born:1943}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;James Marshall\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Christopher Guest\u0026quot;, properties:{born:1948}}, {name:\u0026quot;Rob Reiner\u0026quot;, properties:{born:1947}}, {name:\u0026quot;Aaron Sorkin\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Kelly McGillis\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Val Kilmer\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Anthony Edwards\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Tom Skerritt\u0026quot;, properties:{born:1933}}, {name:\u0026quot;Meg Ryan\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Tony Scott\u0026quot;, properties:{born:1944}}, {name:\u0026quot;Jim Cash\u0026quot;, properties:{born:1941}}, {name:\u0026quot;Renee Zellweger\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Kelly Preston\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Jerry O\u0027Connell\u0026quot;, properties:{born:1974}}, {name:\u0026quot;Jay Mohr\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Bonnie Hunt\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Regina King\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Jonathan Lipnicki\u0026quot;, properties:{born:1996}}, {name:\u0026quot;Cameron Crowe\u0026quot;, properties:{born:1957}}, {name:\u0026quot;River Phoenix\u0026quot;, properties:{born:1970}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Corey Feldman\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Wil Wheaton\u0026quot;, properties:{born:1972}}, {name:\u0026quot;John Cusack\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Marshall Bell\u0026quot;, properties:{born:1942}}, {name:\u0026quot;Helen Hunt\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Greg Kinnear\u0026quot;, properties:{born:1963}}, {name:\u0026quot;James L. Brooks\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Annabella Sciorra\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Max von Sydow\u0026quot;, properties:{born:1929}}, {name:\u0026quot;Werner Herzog\u0026quot;, properties:{born:1942}}, {name:\u0026quot;Robin Williams\u0026quot;, properties:{born:1951}}, {name:\u0026quot;Vincent Ward\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Ethan Hawke\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Rick Yune\u0026quot;, properties:{born:1971}}, {name:\u0026quot;James Cromwell\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Scott Hicks\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Parker Posey\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Dave Chappelle\u0026quot;, properties:{born:1973}}, {name:\u0026quot;Steve Zahn\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Tom Hanks\u0026quot;, properties:{born:1956}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Nora Ephron\u0026quot;, properties:{born:1941}}, {name:\u0026quot;Rita Wilson\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Bill Pullman\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Victor Garber\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;, properties:{born:1962}}, {name:\u0026quot;John Patrick Stanley\u0026quot;, properties:{born:1950}}, {name:\u0026quot;Nathan Lane\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Billy Crystal\u0026quot;, properties:{born:1948}}, {name:\u0026quot;Carrie Fisher\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Bruno Kirby\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Liv Tyler\u0026quot;, properties:{born:1977}}, {name:\u0026quot;Brooke Langton\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Gene Hackman\u0026quot;, properties:{born:1929}}, {name:\u0026quot;Orlando Jones\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Howard Deutch\u0026quot;, properties:{born:1950}}, {name:\u0026quot;Christian Bale\u0026quot;, properties:{born:1974}}, {name:\u0026quot;Zach Grenier\u0026quot;, properties:{born:1954}}, {name:\u0026quot;Mike Nichols\u0026quot;, properties:{born:1931}}, {name:\u0026quot;Richard Harris\u0026quot;, properties:{born:1930}}, {name:\u0026quot;Clint Eastwood\u0026quot;, properties:{born:1930}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Takeshi Kitano\u0026quot;, properties:{born:1947}}, {name:\u0026quot;Dina Meyer\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Ice-T\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Robert Longo\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Halle Berry\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Jim Broadbent\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Tom Tykwer\u0026quot;, properties:{born:1965}}, {name:\u0026quot;David Mitchell\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Stefan Arndt\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Ian McKellen\u0026quot;, properties:{born:1939}}, {name:\u0026quot;Audrey Tautou\u0026quot;, properties:{born:1976}}, {name:\u0026quot;Paul Bettany\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Ron Howard\u0026quot;, properties:{born:1954}}, {name:\u0026quot;Natalie Portman\u0026quot;, properties:{born:1981}}, {name:\u0026quot;Stephen Rea\u0026quot;, properties:{born:1946}}, {name:\u0026quot;John Hurt\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Ben Miles\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Emile Hirsch\u0026quot;, properties:{born:1985}}, {name:\u0026quot;John Goodman\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Susan Sarandon\u0026quot;, properties:{born:1946}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Matthew Fox\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Christina Ricci\u0026quot;, properties:{born:1980}}, {name:\u0026quot;Rain\u0026quot;, properties:{born:1982}}, {name:\u0026quot;Naomie Harris\u0026quot;, properties:{}}, {name:\u0026quot;Michael Clarke Duncan\u0026quot;, properties:{born:1957}}, {name:\u0026quot;David Morse\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Sam Rockwell\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Gary Sinise\u0026quot;, properties:{born:1955}}, {name:\u0026quot;Patricia Clarkson\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Frank Darabont\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Frank Langella\u0026quot;, properties:{born:1938}}, {name:\u0026quot;Michael Sheen\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Oliver Platt\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Danny DeVito\u0026quot;, properties:{born:1944}}, {name:\u0026quot;John C. Reilly\u0026quot;, properties:{born:1965}}, {name:\u0026quot;Ed Harris\u0026quot;, properties:{born:1950}}, {name:\u0026quot;Bill Paxton\u0026quot;, properties:{born:1955}}, {name:\u0026quot;Philip Seymour Hoffman\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Jan de Bont\u0026quot;, properties:{born:1943}}, {name:\u0026quot;Robert Zemeckis\u0026quot;, properties:{born:1951}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Milos Forman\u0026quot;, properties:{born:1932}}, {name:\u0026quot;Diane Keaton\u0026quot;, properties:{born:1946}}, {name:\u0026quot;Nancy Meyers\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Chris Columbus\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Julia Roberts\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Madonna\u0026quot;, properties:{born:1954}}, {name:\u0026quot;Geena Davis\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Lori Petty\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Penny Marshall\u0026quot;, properties:{born:1943}}, {name:\u0026quot;Paul Blythe\u0026quot;, properties:{}}, {name:\u0026quot;Angela Scope\u0026quot;, properties:{}}, {name:\u0026quot;Jessica Thompson\u0026quot;, properties:{}}, {name:\u0026quot;James Thompson\u0026quot;, properties:{}}] AS row\nMERGE (n:Person{name: row.name}) ON CREATE SET n +\u003d row.properties;\n:commit\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:93}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:96}, properties:{}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{}}, {start: {name:\u0026quot;Robert Longo\u0026quot;}, end: {_id:101}, properties:{}}, {start: {name:\u0026quot;Tom Tykwer\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:112}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Frank Darabont\u0026quot;}, end: {_id:131}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:138}, properties:{}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:145}, properties:{}}, {start: {name:\u0026quot;Jan de Bont\u0026quot;}, end: {_id:148}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:151}, properties:{}}, {start: {name:\u0026quot;Milos Forman\u0026quot;}, end: {_id:153}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Chris Columbus\u0026quot;}, end: {_id:158}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:160}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:162}, properties:{}}, {start: {name:\u0026quot;Penny Marshall\u0026quot;}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;James Thompson\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Angela Scope\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Paul Blythe\u0026quot;}, end: {name:\u0026quot;Angela Scope\u0026quot;}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nCREATE (start)-[r:FOLLOWS]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Stefan Arndt\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:PRODUCED]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Jim Cash\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;David Mitchell\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:WROTE]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Emil Eifrem\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Emil\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Kevin Lomax\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Mary Ann Lomax\u0026quot;]}}, {start: {name:\u0026quot;Al Pacino\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;John Milton\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Daniel Kaffee\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Col. Nathan R. Jessup\u0026quot;]}}, {start: {name:\u0026quot;Demi Moore\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Cdr. JoAnne Galloway\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Capt. Jack Ross\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Jonathan Kendrick\u0026quot;]}}, {start: {name:\u0026quot;Noah Wyle\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Jeffrey Barnes\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Carl Hammaker\u0026quot;]}}, {start: {name:\u0026quot;Kevin Pollak\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Sam Weinberg\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Col. Matthew Andrew Markinson\u0026quot;]}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Pfc. Louden Downey\u0026quot;]}}, {start: {name:\u0026quot;Christopher Guest\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Dr. Stone\u0026quot;]}}, {start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Man in Bar\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Maverick\u0026quot;]}}, {start: {name:\u0026quot;Kelly McGillis\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Charlie\u0026quot;]}}, {start: {name:\u0026quot;Val Kilmer\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Iceman\u0026quot;]}}, {start: {name:\u0026quot;Anthony Edwards\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Goose\u0026quot;]}}, {start: {name:\u0026quot;Tom Skerritt\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Viper\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Carole\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Jerry Maguire\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Rod Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Renee Zellweger\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Dorothy Boyd\u0026quot;]}}, {start: {name:\u0026quot;Kelly Preston\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Avery Bishop\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Frank Cushman\u0026quot;]}}, {start: {name:\u0026quot;Jay Mohr\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Bob Sugar\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Laurel Boyd\u0026quot;]}}, {start: {name:\u0026quot;Regina King\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Marcee Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Jonathan Lipnicki\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Ray Boyd\u0026quot;]}}, {start: {name:\u0026quot;Wil Wheaton\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Gordie Lachance\u0026quot;]}}, {start: {name:\u0026quot;River Phoenix\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Chris Chambers\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Vern Tessio\u0026quot;]}}, {start: {name:\u0026quot;Corey Feldman\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Teddy Duchamp\u0026quot;]}}, {start: {name:\u0026quot;John Cusack\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Denny Lachance\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Ace Merrill\u0026quot;]}}, {start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Mr. Lachance\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Melvin Udall\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Carol Connelly\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Simon Bishop\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Frank Sachs\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Chris Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Albert Lewis\u0026quot;]}}, {start: {name:\u0026quot;Annabella Sciorra\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Annie Collins-Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Tracker\u0026quot;]}}, {start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Face\u0026quot;]}}, {start: {name:\u0026quot;Ethan Hawke\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Ishmael Chambers\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Rick Yune\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Kazuo Miyamoto\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Nels Gudmundsson\u0026quot;]}}, {start: {name:\u0026quot;James Cromwell\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Judge Fielding\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Joe Fox\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Kathleen Kelly\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Frank Navasky\u0026quot;]}}, {start: {name:\u0026quot;Parker Posey\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Patricia Eden\u0026quot;]}}, {start: {name:\u0026quot;Dave Chappelle\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Kevin Jackson\u0026quot;]}}, {start: {name:\u0026quot;Steve Zahn\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;George Pappas\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Sam Baldwin\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Annie Reed\u0026quot;]}}, {start: {name:\u0026quot;Rita Wilson\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Suzy\u0026quot;]}}, {start: {name:\u0026quot;Bill Pullman\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Walter\u0026quot;]}}, {start: {name:\u0026quot;Victor Garber\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Greg\u0026quot;]}}, {start: {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Becky\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;Joe Banks\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;DeDe\u0026quot;, \u0026quot;Angelica Graynamore\u0026quot;, \u0026quot;Patricia Graynamore\u0026quot;]}}, {start: {name:\u0026quot;Nathan Lane\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;Baw\u0026quot;]}}, {start: {name:\u0026quot;Billy Crystal\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Harry Burns\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Sally Albright\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Carrie Fisher\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Marie\u0026quot;]}}, {start: {name:\u0026quot;Bruno Kirby\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Jess\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Mr. White\u0026quot;]}}, {start: {name:\u0026quot;Liv Tyler\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Faye Dolan\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Tina\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Shane Falco\u0026quot;]}}, {start: {name:\u0026quot;Brooke Langton\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Annabelle Farrell\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Jimmy McGinty\u0026quot;]}}, {start: {name:\u0026quot;Orlando Jones\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Clifford Franklin\u0026quot;]}}, {start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Admiral\u0026quot;]}}, {start: {name:\u0026quot;Christian Bale\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Dieter Dengler\u0026quot;]}}, {start: {name:\u0026quot;Zach Grenier\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Squad Leader\u0026quot;]}}, {start: {name:\u0026quot;Steve Zahn\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Duane\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Armand Goldman\u0026quot;]}}, {start: {name:\u0026quot;Nathan Lane\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Albert Goldman\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Sen. Kevin Keeley\u0026quot;]}}, {start: {name:\u0026quot;Richard Harris\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;English Bob\u0026quot;]}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;Bill Munny\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;Little Bill Daggett\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Johnny Mnemonic\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Takeshi Kitano\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Takahashi\u0026quot;]}}, {start: {name:\u0026quot;Dina Meyer\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Jane\u0026quot;]}}, {start: {name:\u0026quot;Ice-T\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;J-Bone\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Zachry\u0026quot;, \u0026quot;Dr. Henry Goose\u0026quot;, \u0026quot;Isaac Sachs\u0026quot;, \u0026quot;Dermot Hoggins\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Bill Smoke\u0026quot;, \u0026quot;Haskell Moore\u0026quot;, \u0026quot;Tadeusz Kesselring\u0026quot;, \u0026quot;Nurse Noakes\u0026quot;, \u0026quot;Boardman Mephi\u0026quot;, \u0026quot;Old Georgie\u0026quot;]}}, {start: {name:\u0026quot;Halle Berry\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Luisa Rey\u0026quot;, \u0026quot;Jocasta Ayrs\u0026quot;, \u0026quot;Ovid\u0026quot;, \u0026quot;Meronym\u0026quot;]}}, {start: {name:\u0026quot;Jim Broadbent\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Vyvyan Ayrs\u0026quot;, \u0026quot;Captain Molyneux\u0026quot;, \u0026quot;Timothy Cavendish\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Dr. Robert Langdon\u0026quot;]}}, {start: {name:\u0026quot;Ian McKellen\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Sir Leight Teabing\u0026quot;]}}, {start: {name:\u0026quot;Audrey Tautou\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Sophie Neveu\u0026quot;]}}, {start: {name:\u0026quot;Paul Bettany\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Silas\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;V\u0026quot;]}}, {start: {name:\u0026quot;Natalie Portman\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Evey Hammond\u0026quot;]}}, {start: {name:\u0026quot;Stephen Rea\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Eric Finch\u0026quot;]}}, {start: {name:\u0026quot;John Hurt\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;High Chancellor Adam Sutler\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Dascomb\u0026quot;]}}, {start: {name:\u0026quot;Emile Hirsch\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Speed Racer\u0026quot;]}}, {start: {name:\u0026quot;John Goodman\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Pops\u0026quot;]}}, {start: {name:\u0026quot;Susan Sarandon\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Mom\u0026quot;]}}, {start: {name:\u0026quot;Matthew Fox\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Racer X\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Christina Ricci\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Trixie\u0026quot;]}}, {start: {name:\u0026quot;Rain\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Taejo Togokahn\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Cass Jones\u0026quot;]}}, {start: {name:\u0026quot;Rain\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Raizo\u0026quot;]}}, {start: {name:\u0026quot;Naomie Harris\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Mika Coretti\u0026quot;]}}, {start: {name:\u0026quot;Rick Yune\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Takeshi\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Ryan Maslow\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Paul Edgecomb\u0026quot;]}}, {start: {name:\u0026quot;Michael Clarke Duncan\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;John Coffey\u0026quot;]}}, {start: {name:\u0026quot;David Morse\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Brutus \\\u0026quot;Brutal\\\u0026quot; Howell\u0026quot;]}}, {start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Jan Edgecomb\u0026quot;]}}, {start: {name:\u0026quot;James Cromwell\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Warden Hal Moores\u0026quot;]}}, {start: {name:\u0026quot;Sam Rockwell\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;\\\u0026quot;Wild Bill\\\u0026quot; Wharton\u0026quot;]}}, {start: {name:\u0026quot;Gary Sinise\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Burt Hammersmith\u0026quot;]}}, {start: {name:\u0026quot;Patricia Clarkson\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Melinda Moores\u0026quot;]}}, {start: {name:\u0026quot;Frank Langella\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Richard Nixon\u0026quot;]}}, {start: {name:\u0026quot;Michael Sheen\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;David Frost\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Jack Brennan\u0026quot;]}}, {start: {name:\u0026quot;Oliver Platt\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Bob Zelnick\u0026quot;]}}, {start: {name:\u0026quot;Sam Rockwell\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;James Reston, Jr.\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Hoffa\u0026quot;]}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Robert \\\u0026quot;Bobby\\\u0026quot; Ciaro\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Frank Fitzsimmons\u0026quot;]}}, {start: {name:\u0026quot;John C. Reilly\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Peter \\\u0026quot;Pete\\\u0026quot; Connelly\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Jim Lovell\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Jack Swigert\u0026quot;]}}, {start: {name:\u0026quot;Ed Harris\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Gene Kranz\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Fred Haise\u0026quot;]}}, {start: {name:\u0026quot;Gary Sinise\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Ken Mattingly\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Bill Harding\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Dr. Jo Harding\u0026quot;]}}, {start: {name:\u0026quot;Zach Grenier\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Eddie\u0026quot;]}}, {start: {name:\u0026quot;Philip Seymour Hoffman\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Dustin \\\u0026quot;Dusty\\\u0026quot; Davis\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:151}, properties:{roles:[\u0026quot;Chuck Noland\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:151}, properties:{roles:[\u0026quot;Kelly Frears\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:153}, properties:{roles:[\u0026quot;Randle McMurphy\u0026quot;]}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:153}, properties:{roles:[\u0026quot;Martini\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Harry Sanborn\u0026quot;]}}, {start: {name:\u0026quot;Diane Keaton\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Erica Barry\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Julian Mercer\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:158}, properties:{roles:[\u0026quot;Andrew Marin\u0026quot;]}}, {start: {name:\u0026quot;Oliver Platt\u0026quot;}, end: {_id:158}, properties:{roles:[\u0026quot;Rupert Burns\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Rep. Charlie Wilson\u0026quot;]}}, {start: {name:\u0026quot;Julia Roberts\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Joanne Herring\u0026quot;]}}, {start: {name:\u0026quot;Philip Seymour Hoffman\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Gust Avrakotos\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:162}, properties:{roles:[\u0026quot;Hero Boy\u0026quot;, \u0026quot;Father\u0026quot;, \u0026quot;Conductor\u0026quot;, \u0026quot;Hobo\u0026quot;, \u0026quot;Scrooge\u0026quot;, \u0026quot;Santa Claus\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Jimmy Dugan\u0026quot;]}}, {start: {name:\u0026quot;Geena Davis\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Dottie Hinson\u0026quot;]}}, {start: {name:\u0026quot;Lori Petty\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Kit Keller\u0026quot;]}}, {start: {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Doris Murphy\u0026quot;]}}, {start: {name:\u0026quot;Madonna\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;\\\u0026quot;All the Way\\\u0026quot; Mae Mordabito\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Bob Hinson\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:106}, properties:{summary:\u0026quot;An amazing journey\u0026quot;, rating:95}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:88}, properties:{summary:\u0026quot;Silly, but fun\u0026quot;, rating:65}}, {start: {name:\u0026quot;James Thompson\u0026quot;}, end: {_id:88}, properties:{summary:\u0026quot;The coolest football movie ever\u0026quot;, rating:100}}, {start: {name:\u0026quot;Angela Scope\u0026quot;}, end: {_id:88}, properties:{summary:\u0026quot;Pretty funny at times\u0026quot;, rating:62}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:98}, properties:{summary:\u0026quot;Dark, but compelling\u0026quot;, rating:85}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:96}, properties:{summary:\u0026quot;Slapstick redeemed only by the Robin Williams and Gene Hackman\u0027s stellar performances\u0026quot;, rating:45}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:112}, properties:{summary:\u0026quot;A solid romp\u0026quot;, rating:68}}, {start: {name:\u0026quot;James Thompson\u0026quot;}, end: {_id:112}, properties:{summary:\u0026quot;Fun, but a little far fetched\u0026quot;, rating:65}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:38}, properties:{summary:\u0026quot;You had me at Jerry\u0026quot;, rating:92}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:REVIEWED]-\u0026gt;(end)  SET r +\u003d row.properties;\n:commit\n:begin\n:commit\n:begin\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567584359_101443064",
      "id": "paragraph_1667567584359_101443064",
      "dateCreated": "2022-11-04 13:13:04.359",
      "dateStarted": "2022-11-04 13:15:01.991",
      "dateFinished": "2022-11-04 13:15:02.019",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nMATCH (person)-[r:ACTED_IN]-\u003e(movie)\nWITH collect(DISTINCT person) + collect(DISTINCT  movie) AS importNodes, collect(r) AS importRels\n\nCALL apoc.export.cypher.data(importNodes, importRels,\n  \"exportData.cypher\")\n  \n\nYIELD file, batches, source, format, nodes, relationships, properties, time, rows, batchSize\nRETURN file, batches, source, format, nodes, relationships, properties, time, rows, batchSize\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:18:06.067",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\n\"exportData.cypher\"\t1\t\"data: nodes(140), rels(172)\"\t\"cypher\"\t140\t172\t490\t33\t312\t20000\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567825849_1440302535",
      "id": "paragraph_1667567825849_1440302535",
      "dateCreated": "2022-11-04 13:17:05.849",
      "dateStarted": "2022-11-04 13:18:06.086",
      "dateFinished": "2022-11-04 13:18:06.211",
      "status": "FINISHED"
    },
    {
      "text": "%md\n```\n:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n:begin\nUNWIND [{_id:131, properties:{tagline:\"Walk a mile you\u0027ll never forget.\", title:\"The Green Mile\", released:1999}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:151, properties:{tagline:\"At the edge of the world, his journey begins.\", title:\"Cast Away\", released:2000}}, {_id:148, properties:{tagline:\"Don\u0027t Breathe. Don\u0027t Look Back.\", title:\"Twister\", released:1996}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:112, properties:{tagline:\"Break The Codes\", title:\"The Da Vinci Code\", released:2006}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:129, properties:{tagline:\"Prepare to enter a secret world of assassins\", title:\"Ninja Assassin\", released:2009}}, {_id:153, properties:{tagline:\"If he\u0027s crazy, what does that make you?\", title:\"One Flew Over the Cuckoo\u0027s Nest\", released:1975}}, {_id:162, properties:{tagline:\"This Holiday Season... Believe\", title:\"The Polar Express\", released:2004}}, {_id:163, properties:{tagline:\"Once in a lifetime you get a chance to do something different.\", title:\"A League of Their Own\", released:1992}}, {_id:160, properties:{tagline:\"A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\", title:\"Charlie Wilson\u0027s War\", released:2007}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:158, properties:{tagline:\"One robot\u0027s 200 year journey to become an ordinary man.\", title:\"Bicentennial Man\", released:1999}}, {_id:155, properties:{title:\"Something\u0027s Gotta Give\", released:2003}}, {_id:98, properties:{tagline:\"It\u0027s a hell of a thing, killing a man\", title:\"Unforgiven\", released:1992}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:106, properties:{tagline:\"Everything is connected\", title:\"Cloud Atlas\", released:2012}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:122, properties:{tagline:\"Speed has no limits\", title:\"Speed Racer\", released:2008}}, {_id:138, properties:{tagline:\"400 million people were waiting for the truth.\", title:\"Frost/Nixon\", released:2008}}, {_id:117, properties:{tagline:\"Freedom! Forever!\", title:\"V for Vendetta\", released:2006}}, {_id:101, properties:{tagline:\"The hottest data on earth. In the coolest head in town\", title:\"Johnny Mnemonic\", released:1995}}, {_id:142, properties:{tagline:\"He didn\u0027t want law. He wanted justice.\", title:\"Hoffa\", released:1992}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:145, properties:{tagline:\"Houston, we have a problem.\", title:\"Apollo 13\", released:1995}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{name:\"Max von Sydow\", properties:{born:1929}}, {name:\"Kevin Bacon\", properties:{born:1958}}, {name:\"Parker Posey\", properties:{born:1968}}, {name:\"Robin Williams\", properties:{born:1951}}, {name:\"Greg Kinnear\", properties:{born:1963}}, {name:\"Richard Harris\", properties:{born:1930}}, {name:\"Rita Wilson\", properties:{born:1956}}, {name:\"Kiefer Sutherland\", properties:{born:1966}}, {name:\"Dave Chappelle\", properties:{born:1973}}, {name:\"Ethan Hawke\", properties:{born:1970}}, {name:\"Clint Eastwood\", properties:{born:1930}}, {name:\"Bill Pullman\", properties:{born:1953}}, {name:\"Annabella Sciorra\", properties:{born:1960}}, {name:\"Jack Nicholson\", properties:{born:1937}}, {name:\"Victor Garber\", properties:{born:1949}}, {name:\"Jonathan Lipnicki\", properties:{born:1996}}, {name:\"Christian Bale\", properties:{born:1974}}, {name:\"Marshall Bell\", properties:{born:1942}}, {name:\"Rick Yune\", properties:{born:1971}}, {name:\"Demi Moore\", properties:{born:1962}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Helen Hunt\", properties:{born:1963}}, {name:\"Steve Zahn\", properties:{born:1967}}, {name:\"Zach Grenier\", properties:{born:1954}}, {name:\"River Phoenix\", properties:{born:1970}}, {name:\"James Cromwell\", properties:{born:1940}}, {name:\"Tom Hanks\", properties:{born:1956}}, {name:\"Kevin Pollak\", properties:{born:1957}}, {name:\"Ice-T\", properties:{born:1958}}, {name:\"Corey Feldman\", properties:{born:1971}}, {name:\"Matthew Fox\", properties:{born:1966}}, {name:\"Bonnie Hunt\", properties:{born:1961}}, {name:\"Stephen Rea\", properties:{born:1946}}, {name:\"J.T. Walsh\", properties:{born:1943}}, {name:\"Wil Wheaton\", properties:{born:1972}}, {name:\"Christina Ricci\", properties:{born:1980}}, {name:\"Halle Berry\", properties:{born:1966}}, {name:\"Regina King\", properties:{born:1971}}, {name:\"Oliver Platt\", properties:{born:1960}}, {name:\"John Hurt\", properties:{born:1940}}, {name:\"James Marshall\", properties:{born:1967}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"John Cusack\", properties:{born:1966}}, {name:\"John Goodman\", properties:{born:1960}}, {name:\"Jim Broadbent\", properties:{born:1949}}, {name:\"Jerry O\u0027Connell\", properties:{born:1974}}, {name:\"Danny DeVito\", properties:{born:1944}}, {name:\"Anthony Edwards\", properties:{born:1962}}, {name:\"Kelly McGillis\", properties:{born:1957}}, {name:\"Ben Miles\", properties:{born:1967}}, {name:\"Susan Sarandon\", properties:{born:1946}}, {name:\"Noah Wyle\", properties:{born:1971}}, {name:\"Jay Mohr\", properties:{born:1970}}, {name:\"Takeshi Kitano\", properties:{born:1947}}, {name:\"Tom Skerritt\", properties:{born:1933}}, {name:\"John C. Reilly\", properties:{born:1965}}, {name:\"Val Kilmer\", properties:{born:1959}}, {name:\"Emile Hirsch\", properties:{born:1985}}, {name:\"Christopher Guest\", properties:{born:1948}}, {name:\"Michael Clarke Duncan\", properties:{born:1957}}, {name:\"Cuba Gooding Jr.\", properties:{born:1968}}, {name:\"Dina Meyer\", properties:{born:1968}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Ed Harris\", properties:{born:1950}}, {name:\"Meg Ryan\", properties:{born:1961}}, {name:\"Emil Eifrem\", properties:{born:1978}}, {name:\"David Morse\", properties:{born:1953}}, {name:\"Rain\", properties:{born:1982}}, {name:\"Paul Bettany\", properties:{born:1971}}, {name:\"Bill Paxton\", properties:{born:1955}}, {name:\"Bruno Kirby\", properties:{born:1949}}, {name:\"Aaron Sorkin\", properties:{born:1961}}, {name:\"Charlize Theron\", properties:{born:1975}}, {name:\"Renee Zellweger\", properties:{born:1969}}, {name:\"Natalie Portman\", properties:{born:1981}}, {name:\"Liv Tyler\", properties:{born:1977}}, {name:\"Naomie Harris\", properties:{}}, {name:\"Frank Langella\", properties:{born:1938}}, {name:\"Sam Rockwell\", properties:{born:1968}}, {name:\"Al Pacino\", properties:{born:1940}}, {name:\"Brooke Langton\", properties:{born:1970}}, {name:\"Kelly Preston\", properties:{born:1962}}, {name:\"Ian McKellen\", properties:{born:1939}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Michael Sheen\", properties:{born:1969}}, {name:\"Geena Davis\", properties:{born:1956}}, {name:\"Tom Cruise\", properties:{born:1962}}, {name:\"Julia Roberts\", properties:{born:1967}}, {name:\"Audrey Tautou\", properties:{born:1976}}, {name:\"Gene Hackman\", properties:{born:1929}}, {name:\"Gary Sinise\", properties:{born:1955}}, {name:\"Lori Petty\", properties:{born:1963}}, {name:\"Laurence Fishburne\", properties:{children:[\"Naruto\", \"Sasuke\", \"Sakura\"], born:1961}}, {name:\"Madonna\", properties:{born:1954}}, {name:\"Patricia Clarkson\", properties:{born:1959}}, {name:\"Orlando Jones\", properties:{born:1968}}, {name:\"Hugo Weaving\", properties:{born:1960}}, {name:\"Philip Seymour Hoffman\", properties:{born:1967}}, {name:\"Billy Crystal\", properties:{born:1948}}, {name:\"Giandomenico Fracchia\", properties:{born:1964}}, {name:\"Rosie O\u0027Donnell\", properties:{born:1962}}, {name:\"Werner Herzog\", properties:{born:1942}}, {name:\"Carrie Fisher\", properties:{born:1956}}, {name:\"Diane Keaton\", properties:{born:1946}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Carrie-Anne Moss\", properties:{children:[\"Al\", \"John\", \"Jack\"], born:1967}}, {name:\"Nathan Lane\", properties:{born:1956}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\n:commit\n:begin\nUNWIND [{start: {name:\"Tom Hanks\"}, end: {_id:162}, properties:{roles:[\"Hero Boy\", \"Father\", \"Conductor\", \"Hobo\", \"Scrooge\", \"Santa Claus\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:30}, properties:{roles:[\"Maverick\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:68}, properties:{roles:[\"Joe Fox\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:88}, properties:{roles:[\"Jimmy McGinty\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:12}, properties:{roles:[\"Kevin Lomax\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:151}, properties:{roles:[\"Chuck Noland\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:57}, properties:{roles:[\"Chris Nielsen\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:160}, properties:{roles:[\"Rep. Charlie Wilson\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:74}, properties:{roles:[\"Annie Reed\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:163}, properties:{roles:[\"Jimmy Dugan\"]}}, {start: {name:\"Orlando Jones\"}, end: {_id:88}, properties:{roles:[\"Clifford Franklin\"]}}, {start: {name:\"Kelly McGillis\"}, end: {_id:30}, properties:{roles:[\"Charlie\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:68}, properties:{roles:[\"Kathleen Kelly\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:12}, properties:{roles:[\"Mary Ann Lomax\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:151}, properties:{roles:[\"Kelly Frears\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:57}, properties:{roles:[\"Albert Lewis\"]}}, {start: {name:\"Julia Roberts\"}, end: {_id:160}, properties:{roles:[\"Joanne Herring\"]}}, {start: {name:\"Rita Wilson\"}, end: {_id:74}, properties:{roles:[\"Suzy\"]}}, {start: {name:\"Val Kilmer\"}, end: {_id:30}, properties:{roles:[\"Iceman\"]}}, {start: {name:\"Geena Davis\"}, end: {_id:163}, properties:{roles:[\"Dottie Hinson\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Marshall Bell\"}, end: {_id:93}, properties:{roles:[\"Admiral\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:68}, properties:{roles:[\"Frank Navasky\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:11}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Annabella Sciorra\"}, end: {_id:57}, properties:{roles:[\"Annie Collins-Nielsen\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:148}, properties:{roles:[\"Bill Harding\"]}}, {start: {name:\"Philip Seymour Hoffman\"}, end: {_id:160}, properties:{roles:[\"Gust Avrakotos\"]}}, {start: {name:\"Bill Pullman\"}, end: {_id:74}, properties:{roles:[\"Walter\"]}}, {start: {name:\"Anthony Edwards\"}, end: {_id:30}, properties:{roles:[\"Goose\"]}}, {start: {name:\"Lori Petty\"}, end: {_id:163}, properties:{roles:[\"Kit Keller\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:86}, properties:{roles:[\"Tina\"]}}, {start: {name:\"Parker Posey\"}, end: {_id:68}, properties:{roles:[\"Patricia Eden\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:148}, properties:{roles:[\"Dr. Jo Harding\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:11}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:57}, properties:{roles:[\"The Tracker\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:88}, properties:{roles:[\"Shane Falco\"]}}, {start: {name:\"Tom Skerritt\"}, end: {_id:30}, properties:{roles:[\"Viper\"]}}, {start: {name:\"Rosie O\u0027Donnell\"}, end: {_id:163}, properties:{roles:[\"Doris Murphy\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:158}, properties:{roles:[\"Andrew Marin\"]}}, {start: {name:\"Rick Yune\"}, end: {_id:63}, properties:{roles:[\"Kazuo Miyamoto\"]}}, {start: {name:\"Victor Garber\"}, end: {_id:74}, properties:{roles:[\"Greg\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:57}, properties:{roles:[\"The Face\"]}}, {start: {name:\"Zach Grenier\"}, end: {_id:148}, properties:{roles:[\"Eddie\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:30}, properties:{roles:[\"Carole\"]}}, {start: {name:\"Brooke Langton\"}, end: {_id:88}, properties:{roles:[\"Annabelle Farrell\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:11}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Madonna\"}, end: {_id:163}, properties:{roles:[\"\\\"All the Way\\\" Mae Mordabito\"]}}, {start: {name:\"Oliver Platt\"}, end: {_id:158}, properties:{roles:[\"Rupert Burns\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:63}, properties:{roles:[\"Nels Gudmundsson\"]}}, {start: {name:\"Ethan Hawke\"}, end: {_id:63}, properties:{roles:[\"Ishmael Chambers\"]}}, {start: {name:\"Dave Chappelle\"}, end: {_id:68}, properties:{roles:[\"Kevin Jackson\"]}}, {start: {name:\"Philip Seymour Hoffman\"}, end: {_id:148}, properties:{roles:[\"Dustin \\\"Dusty\\\" Davis\"]}}, {start: {name:\"Christopher Guest\"}, end: {_id:16}, properties:{roles:[\"Dr. Stone\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:163}, properties:{roles:[\"Bob Hinson\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:96}, properties:{roles:[\"Armand Goldman\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:10}, properties:{roles:[\"Neo\"]}}, {start: {name:\"James Cromwell\"}, end: {_id:63}, properties:{roles:[\"Judge Fielding\"]}}, {start: {name:\"Demi Moore\"}, end: {_id:16}, properties:{roles:[\"Lt. Cdr. JoAnne Galloway\"]}}, {start: {name:\"Steve Zahn\"}, end: {_id:68}, properties:{roles:[\"George Pappas\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:53}, properties:{roles:[\"Melvin Udall\"]}}, {start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{roles:[\"Man in Bar\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Diane Keaton\"}, end: {_id:155}, properties:{roles:[\"Erica Barry\"]}}, {start: {name:\"Nathan Lane\"}, end: {_id:96}, properties:{roles:[\"Albert Goldman\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:10}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Audrey Tautou\"}, end: {_id:112}, properties:{roles:[\"Sophie Neveu\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:16}, properties:{roles:[\"Capt. Jack Ross\"]}}, {start: {name:\"David Morse\"}, end: {_id:131}, properties:{roles:[\"Brutus \\\"Brutal\\\" Howell\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:74}, properties:{roles:[\"Sam Baldwin\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:16}, properties:{roles:[\"Cpl. Carl Hammaker\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:53}, properties:{roles:[\"Carol Connelly\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:10}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:155}, properties:{roles:[\"Julian Mercer\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:96}, properties:{roles:[\"Sen. Kevin Keeley\"]}}, {start: {name:\"Paul Bettany\"}, end: {_id:112}, properties:{roles:[\"Silas\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:16}, properties:{roles:[\"Lt. Jonathan Kendrick\"]}}, {start: {name:\"Bonnie Hunt\"}, end: {_id:131}, properties:{roles:[\"Jan Edgecomb\"]}}, {start: {name:\"Kevin Pollak\"}, end: {_id:16}, properties:{roles:[\"Lt. Sam Weinberg\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:131}, properties:{roles:[\"Paul Edgecomb\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:53}, properties:{roles:[\"Simon Bishop\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:10}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Christian Bale\"}, end: {_id:93}, properties:{roles:[\"Dieter Dengler\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Jack Nicholson\"}, end: {_id:153}, properties:{roles:[\"Randle McMurphy\"]}}, {start: {name:\"Noah Wyle\"}, end: {_id:16}, properties:{roles:[\"Cpl. Jeffrey Barnes\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:117}, properties:{roles:[\"V\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:16}, properties:{roles:[\"Lt. Col. Matthew Andrew Markinson\"]}}, {start: {name:\"Michael Clarke Duncan\"}, end: {_id:131}, properties:{roles:[\"John Coffey\"]}}, {start: {name:\"James Cromwell\"}, end: {_id:131}, properties:{roles:[\"Warden Hal Moores\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:53}, properties:{roles:[\"Frank Sachs\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:11}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Zach Grenier\"}, end: {_id:93}, properties:{roles:[\"Squad Leader\"]}}, {start: {name:\"Danny DeVito\"}, end: {_id:153}, properties:{roles:[\"Martini\"]}}, {start: {name:\"Al Pacino\"}, end: {_id:12}, properties:{roles:[\"John Milton\"]}}, {start: {name:\"James Marshall\"}, end: {_id:16}, properties:{roles:[\"Pfc. Louden Downey\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:112}, properties:{roles:[\"Dr. Robert Langdon\"]}}, {start: {name:\"Rick Yune\"}, end: {_id:129}, properties:{roles:[\"Takeshi\"]}}, {start: {name:\"Sam Rockwell\"}, end: {_id:131}, properties:{roles:[\"\\\"Wild Bill\\\" Wharton\"]}}, {start: {name:\"Steve Zahn\"}, end: {_id:93}, properties:{roles:[\"Duane\"]}}, {start: {name:\"Emil Eifrem\"}, end: {_id:1}, properties:{roles:[\"Emil\"]}}, {start: {name:\"John Cusack\"}, end: {_id:47}, properties:{roles:[\"Denny Lachance\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:16}, properties:{roles:[\"Lt. Daniel Kaffee\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:155}, properties:{roles:[\"Harry Sanborn\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Jonathan Lipnicki\"}, end: {_id:38}, properties:{roles:[\"Ray Boyd\"]}}, {start: {name:\"Ian McKellen\"}, end: {_id:112}, properties:{roles:[\"Sir Leight Teabing\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:129}, properties:{roles:[\"Ryan Maslow\"]}}, {start: {name:\"Gary Sinise\"}, end: {_id:131}, properties:{roles:[\"Burt Hammersmith\"]}}, {start: {name:\"Wil Wheaton\"}, end: {_id:47}, properties:{roles:[\"Gordie Lachance\"]}}, {start: {name:\"Carrie Fisher\"}, end: {_id:82}, properties:{roles:[\"Marie\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:47}, properties:{roles:[\"Ace Merrill\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:16}, properties:{roles:[\"Col. Nathan R. Jessup\"]}}, {start: {name:\"John C. Reilly\"}, end: {_id:142}, properties:{roles:[\"Peter \\\"Pete\\\" Connelly\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:1}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Natalie Portman\"}, end: {_id:117}, properties:{roles:[\"Evey Hammond\"]}}, {start: {name:\"River Phoenix\"}, end: {_id:47}, properties:{roles:[\"Chris Chambers\"]}}, {start: {name:\"Patricia Clarkson\"}, end: {_id:131}, properties:{roles:[\"Melinda Moores\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:38}, properties:{roles:[\"Frank Cushman\"]}}, {start: {name:\"Bruno Kirby\"}, end: {_id:82}, properties:{roles:[\"Jess\"]}}, {start: {name:\"Marshall Bell\"}, end: {_id:47}, properties:{roles:[\"Mr. Lachance\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:145}, properties:{roles:[\"Jim Lovell\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:38}, properties:{roles:[\"Jerry Maguire\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:47}, properties:{roles:[\"Vern Tessio\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:1}, properties:{roles:[\"Trinity\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Stephen Rea\"}, end: {_id:117}, properties:{roles:[\"Eric Finch\"]}}, {start: {name:\"Jay Mohr\"}, end: {_id:38}, properties:{roles:[\"Bob Sugar\"]}}, {start: {name:\"Frank Langella\"}, end: {_id:138}, properties:{roles:[\"Richard Nixon\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{roles:[\"Mr. White\"]}}, {start: {name:\"Corey Feldman\"}, end: {_id:47}, properties:{roles:[\"Teddy Duchamp\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:38}, properties:{roles:[\"Rod Tidwell\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:1}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:145}, properties:{roles:[\"Jack Swigert\"]}}, {start: {name:\"John Hurt\"}, end: {_id:117}, properties:{roles:[\"High Chancellor Adam Sutler\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:106}, properties:{roles:[\"Zachry\", \"Dr. Henry Goose\", \"Isaac Sachs\", \"Dermot Hoggins\"]}}, {start: {name:\"Bonnie Hunt\"}, end: {_id:38}, properties:{roles:[\"Laurel Boyd\"]}}, {start: {name:\"Susan Sarandon\"}, end: {_id:122}, properties:{roles:[\"Mom\"]}}, {start: {name:\"Liv Tyler\"}, end: {_id:86}, properties:{roles:[\"Faye Dolan\"]}}, {start: {name:\"Emile Hirsch\"}, end: {_id:122}, properties:{roles:[\"Speed Racer\"]}}, {start: {name:\"Renee Zellweger\"}, end: {_id:38}, properties:{roles:[\"Dorothy Boyd\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:1}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:106}, properties:{roles:[\"Bill Smoke\", \"Haskell Moore\", \"Tadeusz Kesselring\", \"Nurse Noakes\", \"Boardman Mephi\", \"Old Georgie\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:117}, properties:{roles:[\"Dascomb\"]}}, {start: {name:\"Matthew Fox\"}, end: {_id:122}, properties:{roles:[\"Racer X\"]}}, {start: {name:\"Regina King\"}, end: {_id:38}, properties:{roles:[\"Marcee Tidwell\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Ed Harris\"}, end: {_id:145}, properties:{roles:[\"Gene Kranz\"]}}, {start: {name:\"Nathan Lane\"}, end: {_id:79}, properties:{roles:[\"Baw\"]}}, {start: {name:\"John Goodman\"}, end: {_id:122}, properties:{roles:[\"Pops\"]}}, {start: {name:\"Kelly Preston\"}, end: {_id:38}, properties:{roles:[\"Avery Bishop\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:142}, properties:{roles:[\"Hoffa\"]}}, {start: {name:\"Halle Berry\"}, end: {_id:106}, properties:{roles:[\"Luisa Rey\", \"Jocasta Ayrs\", \"Ovid\", \"Meronym\"]}}, {start: {name:\"Rain\"}, end: {_id:129}, properties:{roles:[\"Raizo\"]}}, {start: {name:\"Rosie O\u0027Donnell\"}, end: {_id:74}, properties:{roles:[\"Becky\"]}}, {start: {name:\"Christina Ricci\"}, end: {_id:122}, properties:{roles:[\"Trixie\"]}}, {start: {name:\"Billy Crystal\"}, end: {_id:82}, properties:{roles:[\"Harry Burns\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:145}, properties:{roles:[\"Fred Haise\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:101}, properties:{roles:[\"Johnny Mnemonic\"]}}, {start: {name:\"Jim Broadbent\"}, end: {_id:106}, properties:{roles:[\"Vyvyan Ayrs\", \"Captain Molyneux\", \"Timothy Cavendish\"]}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{roles:[\"Robert \\\"Bobby\\\" Ciaro\"]}}, {start: {name:\"Michael Sheen\"}, end: {_id:138}, properties:{roles:[\"David Frost\"]}}, {start: {name:\"Naomie Harris\"}, end: {_id:129}, properties:{roles:[\"Mika Coretti\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:79}, properties:{roles:[\"Joe Banks\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:82}, properties:{roles:[\"Sally Albright\"]}}, {start: {name:\"Rain\"}, end: {_id:122}, properties:{roles:[\"Taejo Togokahn\"]}}, {start: {name:\"Takeshi Kitano\"}, end: {_id:101}, properties:{roles:[\"Takahashi\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Gary Sinise\"}, end: {_id:145}, properties:{roles:[\"Ken Mattingly\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:122}, properties:{roles:[\"Cass Jones\"]}}, {start: {name:\"Richard Harris\"}, end: {_id:98}, properties:{roles:[\"English Bob\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:142}, properties:{roles:[\"Frank Fitzsimmons\"]}}, {start: {name:\"Dina Meyer\"}, end: {_id:101}, properties:{roles:[\"Jane\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:138}, properties:{roles:[\"Jack Brennan\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:79}, properties:{roles:[\"DeDe\", \"Angelica Graynamore\", \"Patricia Graynamore\"]}}, {start: {name:\"Ice-T\"}, end: {_id:101}, properties:{roles:[\"J-Bone\"]}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{roles:[\"Bill Munny\"]}}, {start: {name:\"Oliver Platt\"}, end: {_id:138}, properties:{roles:[\"Bob Zelnick\"]}}, {start: {name:\"Sam Rockwell\"}, end: {_id:138}, properties:{roles:[\"James Reston, Jr.\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:98}, properties:{roles:[\"Little Bill Daggett\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:18:52.126",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n:begin\nUNWIND [{_id:131, properties:{tagline:\u0026quot;Walk a mile you\u0027ll never forget.\u0026quot;, title:\u0026quot;The Green Mile\u0026quot;, released:1999}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:151, properties:{tagline:\u0026quot;At the edge of the world, his journey begins.\u0026quot;, title:\u0026quot;Cast Away\u0026quot;, released:2000}}, {_id:148, properties:{tagline:\u0026quot;Don\u0027t Breathe. Don\u0027t Look Back.\u0026quot;, title:\u0026quot;Twister\u0026quot;, released:1996}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:112, properties:{tagline:\u0026quot;Break The Codes\u0026quot;, title:\u0026quot;The Da Vinci Code\u0026quot;, released:2006}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:129, properties:{tagline:\u0026quot;Prepare to enter a secret world of assassins\u0026quot;, title:\u0026quot;Ninja Assassin\u0026quot;, released:2009}}, {_id:153, properties:{tagline:\u0026quot;If he\u0027s crazy, what does that make you?\u0026quot;, title:\u0026quot;One Flew Over the Cuckoo\u0027s Nest\u0026quot;, released:1975}}, {_id:162, properties:{tagline:\u0026quot;This Holiday Season... Believe\u0026quot;, title:\u0026quot;The Polar Express\u0026quot;, released:2004}}, {_id:163, properties:{tagline:\u0026quot;Once in a lifetime you get a chance to do something different.\u0026quot;, title:\u0026quot;A League of Their Own\u0026quot;, released:1992}}, {_id:160, properties:{tagline:\u0026quot;A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\u0026quot;, title:\u0026quot;Charlie Wilson\u0027s War\u0026quot;, released:2007}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:158, properties:{tagline:\u0026quot;One robot\u0027s 200 year journey to become an ordinary man.\u0026quot;, title:\u0026quot;Bicentennial Man\u0026quot;, released:1999}}, {_id:155, properties:{title:\u0026quot;Something\u0027s Gotta Give\u0026quot;, released:2003}}, {_id:98, properties:{tagline:\u0026quot;It\u0027s a hell of a thing, killing a man\u0026quot;, title:\u0026quot;Unforgiven\u0026quot;, released:1992}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:106, properties:{tagline:\u0026quot;Everything is connected\u0026quot;, title:\u0026quot;Cloud Atlas\u0026quot;, released:2012}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:122, properties:{tagline:\u0026quot;Speed has no limits\u0026quot;, title:\u0026quot;Speed Racer\u0026quot;, released:2008}}, {_id:138, properties:{tagline:\u0026quot;400 million people were waiting for the truth.\u0026quot;, title:\u0026quot;Frost/Nixon\u0026quot;, released:2008}}, {_id:117, properties:{tagline:\u0026quot;Freedom! Forever!\u0026quot;, title:\u0026quot;V for Vendetta\u0026quot;, released:2006}}, {_id:101, properties:{tagline:\u0026quot;The hottest data on earth. In the coolest head in town\u0026quot;, title:\u0026quot;Johnny Mnemonic\u0026quot;, released:1995}}, {_id:142, properties:{tagline:\u0026quot;He didn\u0027t want law. He wanted justice.\u0026quot;, title:\u0026quot;Hoffa\u0026quot;, released:1992}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:145, properties:{tagline:\u0026quot;Houston, we have a problem.\u0026quot;, title:\u0026quot;Apollo 13\u0026quot;, released:1995}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{name:\u0026quot;Max von Sydow\u0026quot;, properties:{born:1929}}, {name:\u0026quot;Kevin Bacon\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Parker Posey\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Robin Williams\u0026quot;, properties:{born:1951}}, {name:\u0026quot;Greg Kinnear\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Richard Harris\u0026quot;, properties:{born:1930}}, {name:\u0026quot;Rita Wilson\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Kiefer Sutherland\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Dave Chappelle\u0026quot;, properties:{born:1973}}, {name:\u0026quot;Ethan Hawke\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Clint Eastwood\u0026quot;, properties:{born:1930}}, {name:\u0026quot;Bill Pullman\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Annabella Sciorra\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Jack Nicholson\u0026quot;, properties:{born:1937}}, {name:\u0026quot;Victor Garber\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Jonathan Lipnicki\u0026quot;, properties:{born:1996}}, {name:\u0026quot;Christian Bale\u0026quot;, properties:{born:1974}}, {name:\u0026quot;Marshall Bell\u0026quot;, properties:{born:1942}}, {name:\u0026quot;Rick Yune\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Demi Moore\u0026quot;, properties:{born:1962}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Helen Hunt\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Steve Zahn\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Zach Grenier\u0026quot;, properties:{born:1954}}, {name:\u0026quot;River Phoenix\u0026quot;, properties:{born:1970}}, {name:\u0026quot;James Cromwell\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Tom Hanks\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Kevin Pollak\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Ice-T\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Corey Feldman\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Matthew Fox\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Bonnie Hunt\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Stephen Rea\u0026quot;, properties:{born:1946}}, {name:\u0026quot;J.T. Walsh\u0026quot;, properties:{born:1943}}, {name:\u0026quot;Wil Wheaton\u0026quot;, properties:{born:1972}}, {name:\u0026quot;Christina Ricci\u0026quot;, properties:{born:1980}}, {name:\u0026quot;Halle Berry\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Regina King\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Oliver Platt\u0026quot;, properties:{born:1960}}, {name:\u0026quot;John Hurt\u0026quot;, properties:{born:1940}}, {name:\u0026quot;James Marshall\u0026quot;, properties:{born:1967}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;John Cusack\u0026quot;, properties:{born:1966}}, {name:\u0026quot;John Goodman\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Jim Broadbent\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Jerry O\u0027Connell\u0026quot;, properties:{born:1974}}, {name:\u0026quot;Danny DeVito\u0026quot;, properties:{born:1944}}, {name:\u0026quot;Anthony Edwards\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Kelly McGillis\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Ben Miles\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Susan Sarandon\u0026quot;, properties:{born:1946}}, {name:\u0026quot;Noah Wyle\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Jay Mohr\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Takeshi Kitano\u0026quot;, properties:{born:1947}}, {name:\u0026quot;Tom Skerritt\u0026quot;, properties:{born:1933}}, {name:\u0026quot;John C. Reilly\u0026quot;, properties:{born:1965}}, {name:\u0026quot;Val Kilmer\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Emile Hirsch\u0026quot;, properties:{born:1985}}, {name:\u0026quot;Christopher Guest\u0026quot;, properties:{born:1948}}, {name:\u0026quot;Michael Clarke Duncan\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Cuba Gooding Jr.\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Dina Meyer\u0026quot;, properties:{born:1968}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Ed Harris\u0026quot;, properties:{born:1950}}, {name:\u0026quot;Meg Ryan\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Emil Eifrem\u0026quot;, properties:{born:1978}}, {name:\u0026quot;David Morse\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Rain\u0026quot;, properties:{born:1982}}, {name:\u0026quot;Paul Bettany\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Bill Paxton\u0026quot;, properties:{born:1955}}, {name:\u0026quot;Bruno Kirby\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Aaron Sorkin\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Charlize Theron\u0026quot;, properties:{born:1975}}, {name:\u0026quot;Renee Zellweger\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Natalie Portman\u0026quot;, properties:{born:1981}}, {name:\u0026quot;Liv Tyler\u0026quot;, properties:{born:1977}}, {name:\u0026quot;Naomie Harris\u0026quot;, properties:{}}, {name:\u0026quot;Frank Langella\u0026quot;, properties:{born:1938}}, {name:\u0026quot;Sam Rockwell\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Al Pacino\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Brooke Langton\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Kelly Preston\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Ian McKellen\u0026quot;, properties:{born:1939}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Michael Sheen\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Geena Davis\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Tom Cruise\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Julia Roberts\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Audrey Tautou\u0026quot;, properties:{born:1976}}, {name:\u0026quot;Gene Hackman\u0026quot;, properties:{born:1929}}, {name:\u0026quot;Gary Sinise\u0026quot;, properties:{born:1955}}, {name:\u0026quot;Lori Petty\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Laurence Fishburne\u0026quot;, properties:{children:[\u0026quot;Naruto\u0026quot;, \u0026quot;Sasuke\u0026quot;, \u0026quot;Sakura\u0026quot;], born:1961}}, {name:\u0026quot;Madonna\u0026quot;, properties:{born:1954}}, {name:\u0026quot;Patricia Clarkson\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Orlando Jones\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Hugo Weaving\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Philip Seymour Hoffman\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Billy Crystal\u0026quot;, properties:{born:1948}}, {name:\u0026quot;Giandomenico Fracchia\u0026quot;, properties:{born:1964}}, {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Werner Herzog\u0026quot;, properties:{born:1942}}, {name:\u0026quot;Carrie Fisher\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Diane Keaton\u0026quot;, properties:{born:1946}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Carrie-Anne Moss\u0026quot;, properties:{children:[\u0026quot;Al\u0026quot;, \u0026quot;John\u0026quot;, \u0026quot;Jack\u0026quot;], born:1967}}, {name:\u0026quot;Nathan Lane\u0026quot;, properties:{born:1956}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\n:commit\n:begin\nUNWIND [{start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:162}, properties:{roles:[\u0026quot;Hero Boy\u0026quot;, \u0026quot;Father\u0026quot;, \u0026quot;Conductor\u0026quot;, \u0026quot;Hobo\u0026quot;, \u0026quot;Scrooge\u0026quot;, \u0026quot;Santa Claus\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Maverick\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Joe Fox\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Jimmy McGinty\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Kevin Lomax\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:151}, properties:{roles:[\u0026quot;Chuck Noland\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Chris Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Rep. Charlie Wilson\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Annie Reed\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Jimmy Dugan\u0026quot;]}}, {start: {name:\u0026quot;Orlando Jones\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Clifford Franklin\u0026quot;]}}, {start: {name:\u0026quot;Kelly McGillis\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Charlie\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Kathleen Kelly\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Mary Ann Lomax\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:151}, properties:{roles:[\u0026quot;Kelly Frears\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Albert Lewis\u0026quot;]}}, {start: {name:\u0026quot;Julia Roberts\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Joanne Herring\u0026quot;]}}, {start: {name:\u0026quot;Rita Wilson\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Suzy\u0026quot;]}}, {start: {name:\u0026quot;Val Kilmer\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Iceman\u0026quot;]}}, {start: {name:\u0026quot;Geena Davis\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Dottie Hinson\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Admiral\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Frank Navasky\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Annabella Sciorra\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Annie Collins-Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Bill Harding\u0026quot;]}}, {start: {name:\u0026quot;Philip Seymour Hoffman\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Gust Avrakotos\u0026quot;]}}, {start: {name:\u0026quot;Bill Pullman\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Walter\u0026quot;]}}, {start: {name:\u0026quot;Anthony Edwards\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Goose\u0026quot;]}}, {start: {name:\u0026quot;Lori Petty\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Kit Keller\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Tina\u0026quot;]}}, {start: {name:\u0026quot;Parker Posey\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Patricia Eden\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Dr. Jo Harding\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Tracker\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Shane Falco\u0026quot;]}}, {start: {name:\u0026quot;Tom Skerritt\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Viper\u0026quot;]}}, {start: {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Doris Murphy\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:158}, properties:{roles:[\u0026quot;Andrew Marin\u0026quot;]}}, {start: {name:\u0026quot;Rick Yune\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Kazuo Miyamoto\u0026quot;]}}, {start: {name:\u0026quot;Victor Garber\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Greg\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Face\u0026quot;]}}, {start: {name:\u0026quot;Zach Grenier\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Eddie\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Carole\u0026quot;]}}, {start: {name:\u0026quot;Brooke Langton\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Annabelle Farrell\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Madonna\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;\\\u0026quot;All the Way\\\u0026quot; Mae Mordabito\u0026quot;]}}, {start: {name:\u0026quot;Oliver Platt\u0026quot;}, end: {_id:158}, properties:{roles:[\u0026quot;Rupert Burns\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Nels Gudmundsson\u0026quot;]}}, {start: {name:\u0026quot;Ethan Hawke\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Ishmael Chambers\u0026quot;]}}, {start: {name:\u0026quot;Dave Chappelle\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Kevin Jackson\u0026quot;]}}, {start: {name:\u0026quot;Philip Seymour Hoffman\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Dustin \\\u0026quot;Dusty\\\u0026quot; Davis\u0026quot;]}}, {start: {name:\u0026quot;Christopher Guest\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Dr. Stone\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Bob Hinson\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Armand Goldman\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;James Cromwell\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Judge Fielding\u0026quot;]}}, {start: {name:\u0026quot;Demi Moore\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Cdr. JoAnne Galloway\u0026quot;]}}, {start: {name:\u0026quot;Steve Zahn\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;George Pappas\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Melvin Udall\u0026quot;]}}, {start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Man in Bar\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Diane Keaton\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Erica Barry\u0026quot;]}}, {start: {name:\u0026quot;Nathan Lane\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Albert Goldman\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Audrey Tautou\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Sophie Neveu\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Capt. Jack Ross\u0026quot;]}}, {start: {name:\u0026quot;David Morse\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Brutus \\\u0026quot;Brutal\\\u0026quot; Howell\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Sam Baldwin\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Carl Hammaker\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Carol Connelly\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Julian Mercer\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Sen. Kevin Keeley\u0026quot;]}}, {start: {name:\u0026quot;Paul Bettany\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Silas\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Jonathan Kendrick\u0026quot;]}}, {start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Jan Edgecomb\u0026quot;]}}, {start: {name:\u0026quot;Kevin Pollak\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Sam Weinberg\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Paul Edgecomb\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Simon Bishop\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Christian Bale\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Dieter Dengler\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:153}, properties:{roles:[\u0026quot;Randle McMurphy\u0026quot;]}}, {start: {name:\u0026quot;Noah Wyle\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Jeffrey Barnes\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;V\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Col. Matthew Andrew Markinson\u0026quot;]}}, {start: {name:\u0026quot;Michael Clarke Duncan\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;John Coffey\u0026quot;]}}, {start: {name:\u0026quot;James Cromwell\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Warden Hal Moores\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Frank Sachs\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Zach Grenier\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Squad Leader\u0026quot;]}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:153}, properties:{roles:[\u0026quot;Martini\u0026quot;]}}, {start: {name:\u0026quot;Al Pacino\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;John Milton\u0026quot;]}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Pfc. Louden Downey\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Dr. Robert Langdon\u0026quot;]}}, {start: {name:\u0026quot;Rick Yune\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Takeshi\u0026quot;]}}, {start: {name:\u0026quot;Sam Rockwell\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;\\\u0026quot;Wild Bill\\\u0026quot; Wharton\u0026quot;]}}, {start: {name:\u0026quot;Steve Zahn\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Duane\u0026quot;]}}, {start: {name:\u0026quot;Emil Eifrem\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Emil\u0026quot;]}}, {start: {name:\u0026quot;John Cusack\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Denny Lachance\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Daniel Kaffee\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Harry Sanborn\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Jonathan Lipnicki\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Ray Boyd\u0026quot;]}}, {start: {name:\u0026quot;Ian McKellen\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Sir Leight Teabing\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Ryan Maslow\u0026quot;]}}, {start: {name:\u0026quot;Gary Sinise\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Burt Hammersmith\u0026quot;]}}, {start: {name:\u0026quot;Wil Wheaton\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Gordie Lachance\u0026quot;]}}, {start: {name:\u0026quot;Carrie Fisher\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Marie\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Ace Merrill\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Col. Nathan R. Jessup\u0026quot;]}}, {start: {name:\u0026quot;John C. Reilly\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Peter \\\u0026quot;Pete\\\u0026quot; Connelly\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Natalie Portman\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Evey Hammond\u0026quot;]}}, {start: {name:\u0026quot;River Phoenix\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Chris Chambers\u0026quot;]}}, {start: {name:\u0026quot;Patricia Clarkson\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Melinda Moores\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Frank Cushman\u0026quot;]}}, {start: {name:\u0026quot;Bruno Kirby\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Jess\u0026quot;]}}, {start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Mr. Lachance\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Jim Lovell\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Jerry Maguire\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Vern Tessio\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Stephen Rea\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Eric Finch\u0026quot;]}}, {start: {name:\u0026quot;Jay Mohr\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Bob Sugar\u0026quot;]}}, {start: {name:\u0026quot;Frank Langella\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Richard Nixon\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Mr. White\u0026quot;]}}, {start: {name:\u0026quot;Corey Feldman\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Teddy Duchamp\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Rod Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Jack Swigert\u0026quot;]}}, {start: {name:\u0026quot;John Hurt\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;High Chancellor Adam Sutler\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Zachry\u0026quot;, \u0026quot;Dr. Henry Goose\u0026quot;, \u0026quot;Isaac Sachs\u0026quot;, \u0026quot;Dermot Hoggins\u0026quot;]}}, {start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Laurel Boyd\u0026quot;]}}, {start: {name:\u0026quot;Susan Sarandon\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Mom\u0026quot;]}}, {start: {name:\u0026quot;Liv Tyler\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Faye Dolan\u0026quot;]}}, {start: {name:\u0026quot;Emile Hirsch\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Speed Racer\u0026quot;]}}, {start: {name:\u0026quot;Renee Zellweger\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Dorothy Boyd\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Bill Smoke\u0026quot;, \u0026quot;Haskell Moore\u0026quot;, \u0026quot;Tadeusz Kesselring\u0026quot;, \u0026quot;Nurse Noakes\u0026quot;, \u0026quot;Boardman Mephi\u0026quot;, \u0026quot;Old Georgie\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Dascomb\u0026quot;]}}, {start: {name:\u0026quot;Matthew Fox\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Racer X\u0026quot;]}}, {start: {name:\u0026quot;Regina King\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Marcee Tidwell\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Ed Harris\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Gene Kranz\u0026quot;]}}, {start: {name:\u0026quot;Nathan Lane\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;Baw\u0026quot;]}}, {start: {name:\u0026quot;John Goodman\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Pops\u0026quot;]}}, {start: {name:\u0026quot;Kelly Preston\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Avery Bishop\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Hoffa\u0026quot;]}}, {start: {name:\u0026quot;Halle Berry\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Luisa Rey\u0026quot;, \u0026quot;Jocasta Ayrs\u0026quot;, \u0026quot;Ovid\u0026quot;, \u0026quot;Meronym\u0026quot;]}}, {start: {name:\u0026quot;Rain\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Raizo\u0026quot;]}}, {start: {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Becky\u0026quot;]}}, {start: {name:\u0026quot;Christina Ricci\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Trixie\u0026quot;]}}, {start: {name:\u0026quot;Billy Crystal\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Harry Burns\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Fred Haise\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Johnny Mnemonic\u0026quot;]}}, {start: {name:\u0026quot;Jim Broadbent\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Vyvyan Ayrs\u0026quot;, \u0026quot;Captain Molyneux\u0026quot;, \u0026quot;Timothy Cavendish\u0026quot;]}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Robert \\\u0026quot;Bobby\\\u0026quot; Ciaro\u0026quot;]}}, {start: {name:\u0026quot;Michael Sheen\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;David Frost\u0026quot;]}}, {start: {name:\u0026quot;Naomie Harris\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Mika Coretti\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;Joe Banks\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Sally Albright\u0026quot;]}}, {start: {name:\u0026quot;Rain\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Taejo Togokahn\u0026quot;]}}, {start: {name:\u0026quot;Takeshi Kitano\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Takahashi\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Gary Sinise\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Ken Mattingly\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Cass Jones\u0026quot;]}}, {start: {name:\u0026quot;Richard Harris\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;English Bob\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Frank Fitzsimmons\u0026quot;]}}, {start: {name:\u0026quot;Dina Meyer\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Jane\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Jack Brennan\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;DeDe\u0026quot;, \u0026quot;Angelica Graynamore\u0026quot;, \u0026quot;Patricia Graynamore\u0026quot;]}}, {start: {name:\u0026quot;Ice-T\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;J-Bone\u0026quot;]}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;Bill Munny\u0026quot;]}}, {start: {name:\u0026quot;Oliver Platt\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Bob Zelnick\u0026quot;]}}, {start: {name:\u0026quot;Sam Rockwell\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;James Reston, Jr.\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;Little Bill Daggett\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972398580_194574309",
      "id": "paragraph_1666972398580_194574309",
      "dateCreated": "2022-10-28 15:53:18.582",
      "dateStarted": "2022-11-04 13:18:52.125",
      "dateFinished": "2022-11-04 13:18:52.154",
      "status": "FINISHED"
    },
    {
      "text": "\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:23:41.958",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667568215259_383370495",
      "id": "paragraph_1667568215259_383370495",
      "dateCreated": "2022-11-04 13:23:35.259",
      "status": "READY"
    },
    {
      "text": "%md\nTODO - apoc.graph.fromPaths",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:21:15.854",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eTODO - apoc.graph.fromPaths\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667568063981_1196179583",
      "id": "paragraph_1667568063981_1196179583",
      "dateCreated": "2022-11-04 13:21:03.981",
      "dateStarted": "2022-11-04 13:21:15.855",
      "dateFinished": "2022-11-04 13:21:15.866",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// object of {nodes: [listOfNodes], relationships: [listOfRelationships]}\n\nMATCH path \u003d (:Person)-[produced:PRODUCED]-\u003e(:Movie)\nWITH collect(path) AS paths\nCALL apoc.graph.fromPaths(paths, \"procuders\", {})\nYIELD graph AS g\nCALL apoc.export.cypher.graph(g, \"exportGraph.cypher\")\nYIELD file, nodes, relationships\nRETURN file, nodes, relationships;\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:23:50.663",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667568222786_2134536035",
      "id": "paragraph_1667568222786_2134536035",
      "dateCreated": "2022-11-04 13:23:42.786",
      "status": "READY"
    },
    {
      "text": "%md\nTODO - example with graph",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:22:10.925",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972496852_1944280219",
      "id": "paragraph_1666972496852_1944280219",
      "dateCreated": "2022-10-28 15:54:56.852",
      "status": "READY"
    },
    {
      "text": "%md\n\n### TODO - esercizio: esportare una porzione di database, utilizzando le query, i data, e graph in due file diversi, poi reimportarli in altro db (create database franco) utilizzando\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 12:13:34.149",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972506419_1019004573",
      "id": "paragraph_1666972506419_1019004573",
      "dateCreated": "2022-10-28 15:55:06.419",
      "status": "READY"
    },
    {
      "title": "Separated files",
      "text": "%neo4j\nCALL apoc.export.cypher.all(\"myFile.cypher\", {format: \"plain\", separateFiles: true })",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:52:45.623",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"separated.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t270\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569194567_623600384",
      "id": "paragraph_1667569194567_623600384",
      "dateCreated": "2022-11-04 13:39:54.567",
      "dateStarted": "2022-11-04 13:51:52.808",
      "dateFinished": "2022-11-04 13:51:53.374",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`myFile.nodes.cypher`:\n```\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n```\n\n\n`myFile.relationships.cypher`:\n\n```\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\n\n// ...\n```\n\n`myFile.schema.cypher`:\n\n```\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n```\n\n`myFile.cleanup.cypher` to remove \"internal\" stuff:\n\n```\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:55:30.239",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003emyFile.nodes.cypher\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003emyFile.relationships.cypher\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003emyFile.schema.cypher\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003emyFile.cleanup.cypher\u003c/code\u003e to remove \u0026ldquo;internal\u0026rdquo; stuff:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569249832_1330047333",
      "id": "paragraph_1667569249832_1330047333",
      "dateCreated": "2022-11-04 13:40:49.832",
      "dateStarted": "2022-11-04 13:55:30.239",
      "dateFinished": "2022-11-04 13:55:30.273",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### `useOptimizations` config\n\nIt\u0027s a map of `{type: \"\u003cTYPE\u003e\", unwindBatchSize: \u003cINTEGER\u003e}`,\nwhere TYPE can be \n- `NONE`\n- `UNWIND_BATCH` (default)\n- `UNWIND_BATCH_PARAMS`, which can be used only in combination with `format: \u0027CYPHER_SHELL\u0027 (default)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:01:47.715",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e\u003ccode\u003euseOptimizations\u003c/code\u003e config\u003c/h3\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569799866_872787664",
      "id": "paragraph_1667569799866_872787664",
      "dateCreated": "2022-11-04 13:49:59.866",
      "dateStarted": "2022-11-04 13:55:41.264",
      "dateFinished": "2022-11-04 13:55:41.283",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\"smallBatch.cypher\", {useOptimizations: {type: \"UNWIND_BATCH\", unwindBatchSize: 2}})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:02:49.570",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"smallBatch.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t216\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570538891_1844109034",
      "id": "paragraph_1667570538891_1844109034",
      "dateCreated": "2022-11-04 14:02:18.891",
      "dateStarted": "2022-11-04 14:02:47.750",
      "dateFinished": "2022-11-04 14:02:48.668",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\n```\n// ...\n\n\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:03:58.474",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e// ...\n\n\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570551432_299927799",
      "id": "paragraph_1667570551432_299927799",
      "dateCreated": "2022-11-04 14:02:31.432",
      "dateStarted": "2022-11-04 14:03:19.793",
      "dateFinished": "2022-11-04 14:03:19.943",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\"unwindParams.cypher\", {useOptimizations: {type: \"UNWIND_BATCH_PARAMS\", unwindBatchSize: 20}})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:03:53.689",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"unwindParams.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t71\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570494533_1195233763",
      "id": "paragraph_1667570494533_1195233763",
      "dateCreated": "2022-11-04 14:01:34.544",
      "dateStarted": "2022-11-04 14:03:52.638",
      "dateFinished": "2022-11-04 14:03:52.818",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\n```\n// ...\n\n\n:param rows \u003d\u003e [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}]\nUNWIND $rows AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:04:49.960",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e// ...\n\n\n:param rows \u003d\u0026gt; [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}]\nUNWIND $rows AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570635346_1879487784",
      "id": "paragraph_1667570635346_1879487784",
      "dateCreated": "2022-11-04 14:03:55.346",
      "dateStarted": "2022-11-04 14:04:49.962",
      "dateFinished": "2022-11-04 14:04:49.977",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`awaitForIndexes`, default `300` --\u003e to confuure the `CALL db.awaitIndexes(300);` with `cypher-shell`",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:06:12.197",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003eawaitForIndexes\u003c/code\u003e, default \u003ccode\u003e300\u003c/code\u003e \u0026ndash;\u0026gt; to confuure the \u003ccode\u003eCALL db.awaitIndexes(300);\u003c/code\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569326127_1174923313",
      "id": "paragraph_1667569326127_1174923313",
      "dateCreated": "2022-11-04 13:42:06.128",
      "dateStarted": "2022-11-04 14:05:43.618",
      "dateFinished": "2022-11-04 14:05:43.646",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nsaveIndexNames - boolean (default: false) - Save name indexes on export\nsaveConstraintNames - boolean (default: false) - Save name constraints on export",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:07:02.062",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570754945_1668661910",
      "id": "paragraph_1667570754945_1668661910",
      "dateCreated": "2022-11-04 14:05:54.949",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\ncreate (pers:Person {name: \u0027MyName\u0027})-[:WORKS_FOR {id: 1}]-\u003e(proj:Project {a: 1}),\n    (pers)-[:WORKS_FOR {id: 2}]-\u003e(proj),\n    (pers)-[:WORKS_FOR {id: 3}]-\u003e(proj),\n    (pers)-[:WORKS_FOR {id: 4}]-\u003e(proj),\n    (pers)-[:WORKS_FOR {id: 5}]-\u003e(proj)",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:12:12.629",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667571025895_1180819607",
      "id": "paragraph_1667571025895_1180819607",
      "dateCreated": "2022-11-04 14:10:25.896",
      "dateStarted": "2022-11-04 14:12:12.656",
      "dateFinished": "2022-11-04 14:12:13.069",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nIn these cases, if we export relationships via a MERGE clause, we must use the config {multipleRelationshipsWithType: true}, otherwise we cannot distinguish them, and a script would be exported which would create only one WORKS_FOR relationship.\nmultipleRelationshipsWithType\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:11:43.182",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570844581_2018076500",
      "id": "paragraph_1667570844581_2018076500",
      "dateCreated": "2022-11-04 14:07:24.582",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\"multiRels.cypher\", {multipleRelationshipsWithType: true})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:12:19.285",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 94.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"multiRels.cypher\"\t1\t\"database: nodes(174), rels(258)\"\t\"cypher\"\t174\t258\t576\t69\t432\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667571103259_1887398528",
      "id": "paragraph_1667571103259_1887398528",
      "dateCreated": "2022-11-04 14:11:43.259",
      "dateStarted": "2022-11-04 14:12:14.051",
      "dateFinished": "2022-11-04 14:12:14.219",
      "status": "FINISHED"
    },
    {
      "title": "Stream",
      "text": "%neo4j\n\n// common with all export procedures\n\n// note that the 2nd param., the file name, is null\n\nCALL apoc.export.cypher.query(\"match (n:Person)-[r]-(m) return n, r, m\", null, {stream: true}) yield cypherStatements",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:18:28.486",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "file0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "batches1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "source2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "format3",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "nodes4",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "relationships5",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "properties6",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "time7",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rows8",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "batchSize9",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "cypherStatements10",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "nodeStatements11",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0.0,
                          "direction": "asc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "relationshipStatements12",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "schemaStatements13",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "cleanupStatements14",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "cypherStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667571130164_1446021177",
      "id": "paragraph_1667571130164_1446021177",
      "dateCreated": "2022-11-04 14:12:10.164",
      "dateStarted": "2022-11-04 14:17:44.754",
      "dateFinished": "2022-11-04 14:17:44.872",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Export JSON\n\n- apoc.export.json.all \n- apoc.export.json.data \n- apoc.export.json.graph \n- apoc.export.json.query\n\n\n\n### Configurations\n\n- writeNodeProperties (default true): to export properties too.\n- stream: like apoc.export.cypher\n- jsonFormat",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:35:12.084",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972589884_123146020",
      "id": "paragraph_1666972589884_123146020",
      "dateCreated": "2022-10-28 15:56:29.884",
      "status": "READY"
    },
    {
      "title": "Default export",
      "text": "%neo4j\nCALL apoc.export.json.all(\"all.json\")",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:35:26.693",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"all.json\"\t\"database: nodes(174), rels(258)\"\t\"json\"\t174\t258\t576\t863\t432\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569120761_884733576",
      "id": "paragraph_1667569120761_884733576",
      "dateCreated": "2022-11-04 13:38:40.761",
      "dateStarted": "2022-11-04 14:35:18.847",
      "dateFinished": "2022-11-04 14:35:19.918",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`id` is the internal id: \n```\n{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}}\n{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}}\n{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\"],\"properties\":{\"born\":1964,\"name\":\"Giandomenico Fracchia\"}}\n{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}}\n\n....\n\n{\"id\":\"0\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"1\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"2\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"3\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"4\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"5\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"6\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n\n\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:39:01.115",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667572529770_465674145",
      "id": "paragraph_1667572529770_465674145",
      "dateCreated": "2022-11-04 14:35:29.771",
      "status": "READY"
    },
    {
      "text": "%neo4j\n// the output is in column data instead of cypherStatements\nCALL apoc.export.json.all(null, {stream: true}) yield data",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:40:00.581",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "data\n\"{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"0\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"My carpenter with 30 thousand lire did it better\\\",\\\"title\\\":\\\"3 men and 1 leg\\\",\\\"released\\\":0}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Welcome to the Real World\\\",\\\"title\\\":\\\"The Matrix\\\",\\\"released\\\":1999}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1964,\\\"name\\\":\\\"Giandomenico Fracchia\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"3\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"children\\\":[\\\"Al\\\",\\\"John\\\",\\\"Jack\\\"],\\\"born\\\":1967,\\\"name\\\":\\\"Carrie-Anne Moss\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"4\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"children\\\":[\\\"Naruto\\\",\\\"Sasuke\\\",\\\"Sakura\\\"],\\\"born\\\":1961,\\\"name\\\":\\\"Laurence Fishburne\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"5\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1960,\\\"name\\\":\\\"Hugo Weaving\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1967,\\\"name\\\":\\\"Lilly Wachowski\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1965,\\\"name\\\":\\\"Lana Wachowski\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1952,\\\"name\\\":\\\"Franco e Ciccio\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"9\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1978,\\\"name\\\":\\\"Emil Eifrem\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Free your mind\\\",\\\"title\\\":\\\"The Matrix Reloaded\\\",\\\"released\\\":2003}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Everything that has a beginning has an end\\\",\\\"title\\\":\\\"The Matrix Revolutions\\\",\\\"released\\\":2003}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"12\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Evil has its winning ways\\\",\\\"title\\\":\\\"The Devil\u0027s Advocate\\\",\\\"released\\\":1997}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"13\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1975,\\\"name\\\":\\\"Charlize Theron\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"14\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1940,\\\"name\\\":\\\"Al Pacino\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"15\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1944,\\\"name\\\":\\\"Taylor Hackford\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\\\",\\\"title\\\":\\\"A Few Good Men\\\",\\\"released\\\":1992}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"17\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1962,\\\"name\\\":\\\"Tom Cruise\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"18\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1937,\\\"name\\\":\\\"Jack Nicholson\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"19\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1962,\\\"name\\\":\\\"Demi Moore\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"20\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1958,\\\"name\\\":\\\"Kevin Bacon\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"21\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1966,\\\"name\\\":\\\"Kiefer Sutherland\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"22\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1971,\\\"name\\\":\\\"Noah Wyle\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"23\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1968,\\\"name\\\":\\\"Cuba Gooding Jr.\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"24\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1957,\\\"name\\\":\\\"Kevin Pollak\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"25\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1943,\\\"name\\\":\\\"J.T. Walsh\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"26\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1967,\\\"name\\\":\\\"James Marshall\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"27\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1948,\\\"name\\\":\\\"Christopher Guest\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"28\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1947,\\\"name\\\":\\\"Rob Reiner\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"29\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1961,\\\"name\\\":\\\"Aaron Sorkin\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"I feel the need, the need for speed.\\\",\\\"title\\\":\\\"Top Gun\\\",\\\"released\\\":1986}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"31\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1957,\\\"name\\\":\\\"Kelly McGillis\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"32\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1959,\\\"name\\\":\\\"Val Kilmer\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"33\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1962,\\\"name\\\":\\\"Anthony Edwards\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"34\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1933,\\\"name\\\":\\\"Tom Skerritt\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"35\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1961,\\\"name\\\":\\\"Meg Ryan\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"36\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1944,\\\"name\\\":\\\"Tony Scott\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"37\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1941,\\\"name\\\":\\\"Jim Cash\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"The rest of his life begins now.\\\",\\\"title\\\":\\\"Jerry Maguire\\\",\\\"released\\\":2000}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"39\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1969,\\\"name\\\":\\\"Renee Zellweger\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"40\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1962,\\\"name\\\":\\\"Kelly Preston\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"41\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1974,\\\"name\\\":\\\"Jerry O\u0027Connell\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"42\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1970,\\\"name\\\":\\\"Jay Mohr\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"43\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1961,\\\"name\\\":\\\"Bonnie Hunt\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"44\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1971,\\\"name\\\":\\\"Regina King\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"45\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1996,\\\"name\\\":\\\"Jonathan Lipnicki\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"46\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1957,\\\"name\\\":\\\"Cameron Crowe\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\\\",\\\"title\\\":\\\"Stand By Me\\\",\\\"released\\\":1986}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"48\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1970,\\\"name\\\":\\\"River Phoenix\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"49\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1971,\\\"name\\\":\\\"Corey Feldman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"50\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1972,\\\"name\\\":\\\"Wil Wheaton\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"51\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1966,\\\"name\\\":\\\"John Cusack\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"52\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1942,\\\"name\\\":\\\"Marshall Bell\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"53\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"A comedy from the heart that goes for the throat.\\\",\\\"title\\\":\\\"As Good as It Gets\\\",\\\"released\\\":1997}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"54\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1963,\\\"name\\\":\\\"Helen Hunt\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"55\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1963,\\\"name\\\":\\\"Greg Kinnear\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"56\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1940,\\\"name\\\":\\\"James L. Brooks\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"After life there is more. The end is just the beginning.\\\",\\\"title\\\":\\\"What Dreams May Come\\\",\\\"released\\\":1998}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"58\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1960,\\\"name\\\":\\\"Annabella Sciorra\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"59\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1929,\\\"name\\\":\\\"Max von Sydow\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"60\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1942,\\\"name\\\":\\\"Werner Herzog\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"61\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1951,\\\"name\\\":\\\"Robin Williams\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"62\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1956,\\\"name\\\":\\\"Vincent Ward\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"63\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"First loves last. Forever.\\\",\\\"title\\\":\\\"Snow Falling on Cedars\\\",\\\"released\\\":1999}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"64\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1970,\\\"name\\\":\\\"Ethan Hawke\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"65\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1971,\\\"name\\\":\\\"Rick Yune\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"66\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1940,\\\"name\\\":\\\"James Cromwell\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"67\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1953,\\\"name\\\":\\\"Scott Hicks\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"At odds in life... in love on-line.\\\",\\\"title\\\":\\\"You\u0027ve Got Mail\\\",\\\"released\\\":1998}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"69\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1968,\\\"name\\\":\\\"Parker Posey\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"70\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1973,\\\"name\\\":\\\"Dave Chappelle\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"71\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1967,\\\"name\\\":\\\"Steve Zahn\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1956,\\\"name\\\":\\\"Tom Hanks\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"73\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1941,\\\"name\\\":\\\"Nora Ephron\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\\\",\\\"title\\\":\\\"Sleepless in Seattle\\\",\\\"released\\\":1993}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"75\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1956,\\\"name\\\":\\\"Rita Wilson\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"76\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1953,\\\"name\\\":\\\"Bill Pullman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"77\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1949,\\\"name\\\":\\\"Victor Garber\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"78\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1962,\\\"name\\\":\\\"Rosie O\u0027Donnell\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"79\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"A story of love, lava and burning desire.\\\",\\\"title\\\":\\\"Joe Versus the Volcano\\\",\\\"released\\\":1990}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"80\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1950,\\\"name\\\":\\\"John Patrick Stanley\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"81\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1956,\\\"name\\\":\\\"Nathan Lane\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Can two friends sleep together and still love each other in the morning?\\\",\\\"title\\\":\\\"When Herry Met Sally\\\",\\\"released\\\":1998}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"83\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1948,\\\"name\\\":\\\"Billy Crystal\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"84\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1956,\\\"name\\\":\\\"Carrie Fisher\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"85\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1949,\\\"name\\\":\\\"Bruno Kirby\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"86\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"In every life there comes a time when that thing you dream becomes that thing you do\\\",\\\"title\\\":\\\"That Thing You Do\\\",\\\"released\\\":1996}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"87\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1977,\\\"name\\\":\\\"Liv Tyler\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Pain heals, Chicks dig scars... Glory lasts forever\\\",\\\"title\\\":\\\"The Replacements\\\",\\\"released\\\":2000}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"89\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1970,\\\"name\\\":\\\"Brooke Langton\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"90\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1929,\\\"name\\\":\\\"Gene Hackman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"91\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1968,\\\"name\\\":\\\"Orlando Jones\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"92\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1950,\\\"name\\\":\\\"Howard Deutch\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"93\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Based on the extraordinary true story of one man\u0027s fight for freedom\\\",\\\"title\\\":\\\"RescueDawn\\\",\\\"released\\\":2006}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"94\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1974,\\\"name\\\":\\\"Christian Bale\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"95\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1954,\\\"name\\\":\\\"Zach Grenier\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"96\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Come as you are\\\",\\\"title\\\":\\\"The Birdcage\\\",\\\"released\\\":1996}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"97\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1931,\\\"name\\\":\\\"Mike Nichols\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"98\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"It\u0027s a hell of a thing, killing a man\\\",\\\"title\\\":\\\"Unforgiven\\\",\\\"released\\\":1992}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"99\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1930,\\\"name\\\":\\\"Richard Harris\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"100\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1930,\\\"name\\\":\\\"Clint Eastwood\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"101\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"The hottest data on earth. In the coolest head in town\\\",\\\"title\\\":\\\"Johnny Mnemonic\\\",\\\"released\\\":1995}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"102\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1947,\\\"name\\\":\\\"Takeshi Kitano\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"103\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1968,\\\"name\\\":\\\"Dina Meyer\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"104\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1958,\\\"name\\\":\\\"Ice-T\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"105\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1953,\\\"name\\\":\\\"Robert Longo\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Everything is connected\\\",\\\"title\\\":\\\"Cloud Atlas\\\",\\\"released\\\":2012}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"107\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1966,\\\"name\\\":\\\"Halle Berry\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"108\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1949,\\\"name\\\":\\\"Jim Broadbent\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"109\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1965,\\\"name\\\":\\\"Tom Tykwer\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"110\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1969,\\\"name\\\":\\\"David Mitchell\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"111\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1961,\\\"name\\\":\\\"Stefan Arndt\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Break The Codes\\\",\\\"title\\\":\\\"The Da Vinci Code\\\",\\\"released\\\":2006}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"113\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1939,\\\"name\\\":\\\"Ian McKellen\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"114\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1976,\\\"name\\\":\\\"Audrey Tautou\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"115\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1971,\\\"name\\\":\\\"Paul Bettany\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"116\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1954,\\\"name\\\":\\\"Ron Howard\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Freedom! Forever!\\\",\\\"title\\\":\\\"V for Vendetta\\\",\\\"released\\\":2006}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"118\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1981,\\\"name\\\":\\\"Natalie Portman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"119\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1946,\\\"name\\\":\\\"Stephen Rea\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"120\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1940,\\\"name\\\":\\\"John Hurt\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"121\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1967,\\\"name\\\":\\\"Ben Miles\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Speed has no limits\\\",\\\"title\\\":\\\"Speed Racer\\\",\\\"released\\\":2008}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"123\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1985,\\\"name\\\":\\\"Emile Hirsch\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"124\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1960,\\\"name\\\":\\\"John Goodman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"125\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1946,\\\"name\\\":\\\"Susan Sarandon\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"126\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1966,\\\"name\\\":\\\"Matthew Fox\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"127\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1980,\\\"name\\\":\\\"Christina Ricci\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"128\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1982,\\\"name\\\":\\\"Rain\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Prepare to enter a secret world of assassins\\\",\\\"title\\\":\\\"Ninja Assassin\\\",\\\"released\\\":2009}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"130\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"name\\\":\\\"Naomie Harris\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Walk a mile you\u0027ll never forget.\\\",\\\"title\\\":\\\"The Green Mile\\\",\\\"released\\\":1999}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"132\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1957,\\\"name\\\":\\\"Michael Clarke Duncan\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"133\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1953,\\\"name\\\":\\\"David Morse\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"134\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1968,\\\"name\\\":\\\"Sam Rockwell\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"135\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1955,\\\"name\\\":\\\"Gary Sinise\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"136\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1959,\\\"name\\\":\\\"Patricia Clarkson\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"137\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1959,\\\"name\\\":\\\"Frank Darabont\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"400 million people were waiting for the truth.\\\",\\\"title\\\":\\\"Frost/Nixon\\\",\\\"released\\\":2008}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"139\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1938,\\\"name\\\":\\\"Frank Langella\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"140\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1969,\\\"name\\\":\\\"Michael Sheen\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"141\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1960,\\\"name\\\":\\\"Oliver Platt\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"142\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"He didn\u0027t want law. He wanted justice.\\\",\\\"title\\\":\\\"Hoffa\\\",\\\"released\\\":1992}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"143\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1944,\\\"name\\\":\\\"Danny DeVito\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"144\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1965,\\\"name\\\":\\\"John C. Reilly\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Houston, we have a problem.\\\",\\\"title\\\":\\\"Apollo 13\\\",\\\"released\\\":1995}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"146\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1950,\\\"name\\\":\\\"Ed Harris\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"147\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1955,\\\"name\\\":\\\"Bill Paxton\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"148\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Don\u0027t Breathe. Don\u0027t Look Back.\\\",\\\"title\\\":\\\"Twister\\\",\\\"released\\\":1996}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"149\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1967,\\\"name\\\":\\\"Philip Seymour Hoffman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"150\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1943,\\\"name\\\":\\\"Jan de Bont\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"151\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"At the edge of the world, his journey begins.\\\",\\\"title\\\":\\\"Cast Away\\\",\\\"released\\\":2000}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"152\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1951,\\\"name\\\":\\\"Robert Zemeckis\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"153\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"If he\u0027s crazy, what does that make you?\\\",\\\"title\\\":\\\"One Flew Over the Cuckoo\u0027s Nest\\\",\\\"released\\\":1975}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"154\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1932,\\\"name\\\":\\\"Milos Forman\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"title\\\":\\\"Something\u0027s Gotta Give\\\",\\\"released\\\":2003}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"156\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1946,\\\"name\\\":\\\"Diane Keaton\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"157\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1949,\\\"name\\\":\\\"Nancy Meyers\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"158\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"One robot\u0027s 200 year journey to become an ordinary man.\\\",\\\"title\\\":\\\"Bicentennial Man\\\",\\\"released\\\":1999}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"159\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1958,\\\"name\\\":\\\"Chris Columbus\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"160\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\\\",\\\"title\\\":\\\"Charlie Wilson\u0027s War\\\",\\\"released\\\":2007}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"161\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1967,\\\"name\\\":\\\"Julia Roberts\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"162\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"This Holiday Season... Believe\\\",\\\"title\\\":\\\"The Polar Express\\\",\\\"released\\\":2004}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"],\\\"properties\\\":{\\\"tagline\\\":\\\"Once in a lifetime you get a chance to do something different.\\\",\\\"title\\\":\\\"A League of Their Own\\\",\\\"released\\\":1992}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"164\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1954,\\\"name\\\":\\\"Madonna\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"165\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1956,\\\"name\\\":\\\"Geena Davis\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"166\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1963,\\\"name\\\":\\\"Lori Petty\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"167\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"born\\\":1943,\\\"name\\\":\\\"Penny Marshall\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"168\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"name\\\":\\\"Paul Blythe\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"169\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"name\\\":\\\"Angela Scope\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"name\\\":\\\"Jessica Thompson\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"171\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"name\\\":\\\"James Thompson\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"172\\\",\\\"labels\\\":[\\\"Person\\\"],\\\"properties\\\":{\\\"name\\\":\\\"MyName\\\"}}\n{\\\"type\\\":\\\"node\\\",\\\"id\\\":\\\"173\\\",\\\"labels\\\":[\\\"Project\\\"],\\\"properties\\\":{\\\"a\\\":1}}\n{\\\"id\\\":\\\"0\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Neo\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"1\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Trinity\\\"]},\\\"start\\\":{\\\"id\\\":\\\"3\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"2\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Morpheus\\\"]},\\\"start\\\":{\\\"id\\\":\\\"4\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"3\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Agent Smith\\\"]},\\\"start\\\":{\\\"id\\\":\\\"5\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"4\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"5\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"6\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"7\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Emil\\\"]},\\\"start\\\":{\\\"id\\\":\\\"9\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"1\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"8\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Neo\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"9\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Trinity\\\"]},\\\"start\\\":{\\\"id\\\":\\\"3\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"10\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Morpheus\\\"]},\\\"start\\\":{\\\"id\\\":\\\"4\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"11\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Agent Smith\\\"]},\\\"start\\\":{\\\"id\\\":\\\"5\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"12\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"13\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"14\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"10\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"15\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Neo\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"16\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Trinity\\\"]},\\\"start\\\":{\\\"id\\\":\\\"3\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"17\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Morpheus\\\"]},\\\"start\\\":{\\\"id\\\":\\\"4\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"18\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Agent Smith\\\"]},\\\"start\\\":{\\\"id\\\":\\\"5\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"19\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"20\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"21\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"11\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"22\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Kevin Lomax\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"12\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"23\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Mary Ann Lomax\\\"]},\\\"start\\\":{\\\"id\\\":\\\"13\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"12\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"24\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"John Milton\\\"]},\\\"start\\\":{\\\"id\\\":\\\"14\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"12\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"25\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"15\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"12\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"26\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Lt. Daniel Kaffee\\\"]},\\\"start\\\":{\\\"id\\\":\\\"17\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"27\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Col. Nathan R. Jessup\\\"]},\\\"start\\\":{\\\"id\\\":\\\"18\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"28\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Lt. Cdr. JoAnne Galloway\\\"]},\\\"start\\\":{\\\"id\\\":\\\"19\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"29\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Capt. Jack Ross\\\"]},\\\"start\\\":{\\\"id\\\":\\\"20\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"30\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Lt. Jonathan Kendrick\\\"]},\\\"start\\\":{\\\"id\\\":\\\"21\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"31\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Cpl. Jeffrey Barnes\\\"]},\\\"start\\\":{\\\"id\\\":\\\"22\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"32\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Cpl. Carl Hammaker\\\"]},\\\"start\\\":{\\\"id\\\":\\\"23\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"33\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Lt. Sam Weinberg\\\"]},\\\"start\\\":{\\\"id\\\":\\\"24\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"34\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Lt. Col. Matthew Andrew Markinson\\\"]},\\\"start\\\":{\\\"id\\\":\\\"25\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"35\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Pfc. Louden Downey\\\"]},\\\"start\\\":{\\\"id\\\":\\\"26\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"36\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dr. Stone\\\"]},\\\"start\\\":{\\\"id\\\":\\\"27\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"37\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Man in Bar\\\"]},\\\"start\\\":{\\\"id\\\":\\\"29\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"38\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"28\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"39\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"29\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"16\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"40\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Maverick\\\"]},\\\"start\\\":{\\\"id\\\":\\\"17\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"41\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Charlie\\\"]},\\\"start\\\":{\\\"id\\\":\\\"31\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"42\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Iceman\\\"]},\\\"start\\\":{\\\"id\\\":\\\"32\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"43\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Goose\\\"]},\\\"start\\\":{\\\"id\\\":\\\"33\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"44\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Viper\\\"]},\\\"start\\\":{\\\"id\\\":\\\"34\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"45\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Carole\\\"]},\\\"start\\\":{\\\"id\\\":\\\"35\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"46\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"36\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"47\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"37\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"30\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"48\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jerry Maguire\\\"]},\\\"start\\\":{\\\"id\\\":\\\"17\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"49\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Rod Tidwell\\\"]},\\\"start\\\":{\\\"id\\\":\\\"23\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"50\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dorothy Boyd\\\"]},\\\"start\\\":{\\\"id\\\":\\\"39\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"51\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Avery Bishop\\\"]},\\\"start\\\":{\\\"id\\\":\\\"40\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"52\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Frank Cushman\\\"]},\\\"start\\\":{\\\"id\\\":\\\"41\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"53\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Bob Sugar\\\"]},\\\"start\\\":{\\\"id\\\":\\\"42\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"54\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Laurel Boyd\\\"]},\\\"start\\\":{\\\"id\\\":\\\"43\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"55\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Marcee Tidwell\\\"]},\\\"start\\\":{\\\"id\\\":\\\"44\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"56\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Ray Boyd\\\"]},\\\"start\\\":{\\\"id\\\":\\\"45\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"57\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"46\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"58\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"46\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"59\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"46\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"60\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Gordie Lachance\\\"]},\\\"start\\\":{\\\"id\\\":\\\"50\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"61\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Chris Chambers\\\"]},\\\"start\\\":{\\\"id\\\":\\\"48\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"62\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Vern Tessio\\\"]},\\\"start\\\":{\\\"id\\\":\\\"41\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"63\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Teddy Duchamp\\\"]},\\\"start\\\":{\\\"id\\\":\\\"49\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"64\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Denny Lachance\\\"]},\\\"start\\\":{\\\"id\\\":\\\"51\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"65\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Ace Merrill\\\"]},\\\"start\\\":{\\\"id\\\":\\\"21\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"66\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Mr. Lachance\\\"]},\\\"start\\\":{\\\"id\\\":\\\"52\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"67\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"28\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"47\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"68\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Melvin Udall\\\"]},\\\"start\\\":{\\\"id\\\":\\\"18\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"53\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"69\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Carol Connelly\\\"]},\\\"start\\\":{\\\"id\\\":\\\"54\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"53\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"70\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Simon Bishop\\\"]},\\\"start\\\":{\\\"id\\\":\\\"55\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"53\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"71\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Frank Sachs\\\"]},\\\"start\\\":{\\\"id\\\":\\\"23\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"53\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"72\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"56\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"53\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"73\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Chris Nielsen\\\"]},\\\"start\\\":{\\\"id\\\":\\\"61\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"74\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Albert Lewis\\\"]},\\\"start\\\":{\\\"id\\\":\\\"23\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"75\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Annie Collins-Nielsen\\\"]},\\\"start\\\":{\\\"id\\\":\\\"58\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"76\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"The Tracker\\\"]},\\\"start\\\":{\\\"id\\\":\\\"59\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"77\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"The Face\\\"]},\\\"start\\\":{\\\"id\\\":\\\"60\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"78\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"62\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"57\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"79\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Ishmael Chambers\\\"]},\\\"start\\\":{\\\"id\\\":\\\"64\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"63\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"80\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Kazuo Miyamoto\\\"]},\\\"start\\\":{\\\"id\\\":\\\"65\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"63\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"81\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Nels Gudmundsson\\\"]},\\\"start\\\":{\\\"id\\\":\\\"59\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"63\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"82\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Judge Fielding\\\"]},\\\"start\\\":{\\\"id\\\":\\\"66\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"63\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"83\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"67\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"63\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"84\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Joe Fox\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"85\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Kathleen Kelly\\\"]},\\\"start\\\":{\\\"id\\\":\\\"35\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"86\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Frank Navasky\\\"]},\\\"start\\\":{\\\"id\\\":\\\"55\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"87\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Patricia Eden\\\"]},\\\"start\\\":{\\\"id\\\":\\\"69\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"88\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Kevin Jackson\\\"]},\\\"start\\\":{\\\"id\\\":\\\"70\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"89\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"George Pappas\\\"]},\\\"start\\\":{\\\"id\\\":\\\"71\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"90\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"73\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"68\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"91\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Sam Baldwin\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"92\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Annie Reed\\\"]},\\\"start\\\":{\\\"id\\\":\\\"35\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"93\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Suzy\\\"]},\\\"start\\\":{\\\"id\\\":\\\"75\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"94\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Walter\\\"]},\\\"start\\\":{\\\"id\\\":\\\"76\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"95\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Greg\\\"]},\\\"start\\\":{\\\"id\\\":\\\"77\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"96\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Becky\\\"]},\\\"start\\\":{\\\"id\\\":\\\"78\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"97\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"73\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"74\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"98\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Joe Banks\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"79\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"99\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"DeDe\\\",\\\"Angelica Graynamore\\\",\\\"Patricia Graynamore\\\"]},\\\"start\\\":{\\\"id\\\":\\\"35\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"79\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"100\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Baw\\\"]},\\\"start\\\":{\\\"id\\\":\\\"81\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"79\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"101\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"80\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"79\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"102\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Harry Burns\\\"]},\\\"start\\\":{\\\"id\\\":\\\"83\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"103\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Sally Albright\\\"]},\\\"start\\\":{\\\"id\\\":\\\"35\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"104\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Marie\\\"]},\\\"start\\\":{\\\"id\\\":\\\"84\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"105\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jess\\\"]},\\\"start\\\":{\\\"id\\\":\\\"85\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"106\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"28\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"107\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"28\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"108\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"73\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"109\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"73\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"82\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"110\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Mr. White\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"86\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"111\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Faye Dolan\\\"]},\\\"start\\\":{\\\"id\\\":\\\"87\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"86\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"112\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Tina\\\"]},\\\"start\\\":{\\\"id\\\":\\\"13\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"86\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"113\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"86\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"114\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Shane Falco\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"115\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Annabelle Farrell\\\"]},\\\"start\\\":{\\\"id\\\":\\\"89\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"116\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jimmy McGinty\\\"]},\\\"start\\\":{\\\"id\\\":\\\"90\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"117\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Clifford Franklin\\\"]},\\\"start\\\":{\\\"id\\\":\\\"91\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"118\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"92\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"119\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Admiral\\\"]},\\\"start\\\":{\\\"id\\\":\\\"52\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"93\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"120\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dieter Dengler\\\"]},\\\"start\\\":{\\\"id\\\":\\\"94\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"93\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"121\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Squad Leader\\\"]},\\\"start\\\":{\\\"id\\\":\\\"95\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"93\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"122\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Duane\\\"]},\\\"start\\\":{\\\"id\\\":\\\"71\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"93\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"123\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"60\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"93\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"124\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Armand Goldman\\\"]},\\\"start\\\":{\\\"id\\\":\\\"61\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"96\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"125\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Albert Goldman\\\"]},\\\"start\\\":{\\\"id\\\":\\\"81\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"96\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"126\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Sen. Kevin Keeley\\\"]},\\\"start\\\":{\\\"id\\\":\\\"90\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"96\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"127\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"97\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"96\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"128\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"English Bob\\\"]},\\\"start\\\":{\\\"id\\\":\\\"99\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"98\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"129\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Bill Munny\\\"]},\\\"start\\\":{\\\"id\\\":\\\"100\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"98\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"130\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Little Bill Daggett\\\"]},\\\"start\\\":{\\\"id\\\":\\\"90\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"98\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"131\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"100\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"98\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"132\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Johnny Mnemonic\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"101\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"133\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Takahashi\\\"]},\\\"start\\\":{\\\"id\\\":\\\"102\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"101\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"134\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jane\\\"]},\\\"start\\\":{\\\"id\\\":\\\"103\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"101\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"135\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"J-Bone\\\"]},\\\"start\\\":{\\\"id\\\":\\\"104\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"101\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"136\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"105\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"101\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"137\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Zachry\\\",\\\"Dr. Henry Goose\\\",\\\"Isaac Sachs\\\",\\\"Dermot Hoggins\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"138\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Bill Smoke\\\",\\\"Haskell Moore\\\",\\\"Tadeusz Kesselring\\\",\\\"Nurse Noakes\\\",\\\"Boardman Mephi\\\",\\\"Old Georgie\\\"]},\\\"start\\\":{\\\"id\\\":\\\"5\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"139\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Luisa Rey\\\",\\\"Jocasta Ayrs\\\",\\\"Ovid\\\",\\\"Meronym\\\"]},\\\"start\\\":{\\\"id\\\":\\\"107\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"140\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Vyvyan Ayrs\\\",\\\"Captain Molyneux\\\",\\\"Timothy Cavendish\\\"]},\\\"start\\\":{\\\"id\\\":\\\"108\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"141\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"109\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"142\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"143\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"144\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"110\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"145\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"111\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"146\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dr. Robert Langdon\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"147\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Sir Leight Teabing\\\"]},\\\"start\\\":{\\\"id\\\":\\\"113\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"148\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Sophie Neveu\\\"]},\\\"start\\\":{\\\"id\\\":\\\"114\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"149\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Silas\\\"]},\\\"start\\\":{\\\"id\\\":\\\"115\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"150\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"116\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"151\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"V\\\"]},\\\"start\\\":{\\\"id\\\":\\\"5\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"152\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Evey Hammond\\\"]},\\\"start\\\":{\\\"id\\\":\\\"118\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"153\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Eric Finch\\\"]},\\\"start\\\":{\\\"id\\\":\\\"119\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"154\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"High Chancellor Adam Sutler\\\"]},\\\"start\\\":{\\\"id\\\":\\\"120\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"155\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dascomb\\\"]},\\\"start\\\":{\\\"id\\\":\\\"121\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"156\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"26\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"157\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"158\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"159\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"160\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"161\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"117\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"162\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Speed Racer\\\"]},\\\"start\\\":{\\\"id\\\":\\\"123\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"163\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Pops\\\"]},\\\"start\\\":{\\\"id\\\":\\\"124\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"164\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Mom\\\"]},\\\"start\\\":{\\\"id\\\":\\\"125\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"165\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Racer X\\\"]},\\\"start\\\":{\\\"id\\\":\\\"126\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"166\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Trixie\\\"]},\\\"start\\\":{\\\"id\\\":\\\"127\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"167\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Taejo Togokahn\\\"]},\\\"start\\\":{\\\"id\\\":\\\"128\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"168\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Cass Jones\\\"]},\\\"start\\\":{\\\"id\\\":\\\"121\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"169\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"170\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"171\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"172\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"173\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"122\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"174\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Raizo\\\"]},\\\"start\\\":{\\\"id\\\":\\\"128\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"175\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Mika Coretti\\\"]},\\\"start\\\":{\\\"id\\\":\\\"130\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"176\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Takeshi\\\"]},\\\"start\\\":{\\\"id\\\":\\\"65\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"177\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Ryan Maslow\\\"]},\\\"start\\\":{\\\"id\\\":\\\"121\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"178\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"26\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"179\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"6\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"180\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"7\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"181\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"8\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"129\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"182\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Paul Edgecomb\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"183\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"John Coffey\\\"]},\\\"start\\\":{\\\"id\\\":\\\"132\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"184\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Brutus \\\\\"Brutal\\\\\" Howell\\\"]},\\\"start\\\":{\\\"id\\\":\\\"133\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"185\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jan Edgecomb\\\"]},\\\"start\\\":{\\\"id\\\":\\\"43\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"186\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Warden Hal Moores\\\"]},\\\"start\\\":{\\\"id\\\":\\\"66\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"187\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"\\\\\"Wild Bill\\\\\" Wharton\\\"]},\\\"start\\\":{\\\"id\\\":\\\"134\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"188\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Burt Hammersmith\\\"]},\\\"start\\\":{\\\"id\\\":\\\"135\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"189\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Melinda Moores\\\"]},\\\"start\\\":{\\\"id\\\":\\\"136\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"190\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"137\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"131\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"191\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Richard Nixon\\\"]},\\\"start\\\":{\\\"id\\\":\\\"139\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"192\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"David Frost\\\"]},\\\"start\\\":{\\\"id\\\":\\\"140\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"193\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jack Brennan\\\"]},\\\"start\\\":{\\\"id\\\":\\\"20\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"194\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Bob Zelnick\\\"]},\\\"start\\\":{\\\"id\\\":\\\"141\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"195\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"James Reston, Jr.\\\"]},\\\"start\\\":{\\\"id\\\":\\\"134\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"196\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"116\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"138\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"197\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Hoffa\\\"]},\\\"start\\\":{\\\"id\\\":\\\"18\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"142\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"198\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Robert \\\\\"Bobby\\\\\" Ciaro\\\"]},\\\"start\\\":{\\\"id\\\":\\\"143\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"142\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"199\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Frank Fitzsimmons\\\"]},\\\"start\\\":{\\\"id\\\":\\\"25\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"142\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"200\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Peter \\\\\"Pete\\\\\" Connelly\\\"]},\\\"start\\\":{\\\"id\\\":\\\"144\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"142\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"201\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"143\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"142\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"202\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jim Lovell\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"203\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jack Swigert\\\"]},\\\"start\\\":{\\\"id\\\":\\\"20\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"204\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Gene Kranz\\\"]},\\\"start\\\":{\\\"id\\\":\\\"146\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"205\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Fred Haise\\\"]},\\\"start\\\":{\\\"id\\\":\\\"147\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"206\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Ken Mattingly\\\"]},\\\"start\\\":{\\\"id\\\":\\\"135\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"207\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"116\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"145\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"208\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Bill Harding\\\"]},\\\"start\\\":{\\\"id\\\":\\\"147\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"148\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"209\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dr. Jo Harding\\\"]},\\\"start\\\":{\\\"id\\\":\\\"54\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"148\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"210\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Eddie\\\"]},\\\"start\\\":{\\\"id\\\":\\\"95\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"148\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"211\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dustin \\\\\"Dusty\\\\\" Davis\\\"]},\\\"start\\\":{\\\"id\\\":\\\"149\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"148\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"212\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"150\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"148\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"213\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Chuck Noland\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"151\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"214\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Kelly Frears\\\"]},\\\"start\\\":{\\\"id\\\":\\\"54\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"151\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"215\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"152\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"151\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"216\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Randle McMurphy\\\"]},\\\"start\\\":{\\\"id\\\":\\\"18\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"153\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"217\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Martini\\\"]},\\\"start\\\":{\\\"id\\\":\\\"143\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"153\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"218\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"154\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"153\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"219\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Harry Sanborn\\\"]},\\\"start\\\":{\\\"id\\\":\\\"18\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"220\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Erica Barry\\\"]},\\\"start\\\":{\\\"id\\\":\\\"156\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"221\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Julian Mercer\\\"]},\\\"start\\\":{\\\"id\\\":\\\"2\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"222\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"157\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"223\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"PRODUCED\\\",\\\"start\\\":{\\\"id\\\":\\\"157\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"224\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WROTE\\\",\\\"start\\\":{\\\"id\\\":\\\"157\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"155\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"225\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Andrew Marin\\\"]},\\\"start\\\":{\\\"id\\\":\\\"61\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"158\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"226\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Rupert Burns\\\"]},\\\"start\\\":{\\\"id\\\":\\\"141\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"158\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"227\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"159\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"158\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"228\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Rep. Charlie Wilson\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"160\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"229\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Joanne Herring\\\"]},\\\"start\\\":{\\\"id\\\":\\\"161\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"160\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"230\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Gust Avrakotos\\\"]},\\\"start\\\":{\\\"id\\\":\\\"149\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"160\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"231\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"97\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"160\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"232\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Hero Boy\\\",\\\"Father\\\",\\\"Conductor\\\",\\\"Hobo\\\",\\\"Scrooge\\\",\\\"Santa Claus\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"162\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"233\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"152\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"162\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"234\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Jimmy Dugan\\\"]},\\\"start\\\":{\\\"id\\\":\\\"72\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"235\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Dottie Hinson\\\"]},\\\"start\\\":{\\\"id\\\":\\\"165\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"236\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Kit Keller\\\"]},\\\"start\\\":{\\\"id\\\":\\\"166\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"237\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Doris Murphy\\\"]},\\\"start\\\":{\\\"id\\\":\\\"78\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"238\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"\\\\\"All the Way\\\\\" Mae Mordabito\\\"]},\\\"start\\\":{\\\"id\\\":\\\"164\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"239\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"ACTED_IN\\\",\\\"properties\\\":{\\\"roles\\\":[\\\"Bob Hinson\\\"]},\\\"start\\\":{\\\"id\\\":\\\"147\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"240\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"DIRECTED\\\",\\\"start\\\":{\\\"id\\\":\\\"167\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"163\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"241\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"FOLLOWS\\\",\\\"start\\\":{\\\"id\\\":\\\"171\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]}}\n{\\\"id\\\":\\\"242\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"FOLLOWS\\\",\\\"start\\\":{\\\"id\\\":\\\"169\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]}}\n{\\\"id\\\":\\\"243\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"FOLLOWS\\\",\\\"start\\\":{\\\"id\\\":\\\"168\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"169\\\",\\\"labels\\\":[\\\"Person\\\"]}}\n{\\\"id\\\":\\\"244\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"An amazing journey\\\",\\\"rating\\\":95},\\\"start\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"106\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"245\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"Silly, but fun\\\",\\\"rating\\\":65},\\\"start\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"246\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"The coolest football movie ever\\\",\\\"rating\\\":100},\\\"start\\\":{\\\"id\\\":\\\"171\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"247\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"Pretty funny at times\\\",\\\"rating\\\":62},\\\"start\\\":{\\\"id\\\":\\\"169\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"88\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"248\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"Dark, but compelling\\\",\\\"rating\\\":85},\\\"start\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"98\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"249\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"Slapstick redeemed only by the Robin Williams and Gene Hackman\u0027s stellar performances\\\",\\\"rating\\\":45},\\\"start\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"96\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"250\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"A solid romp\\\",\\\"rating\\\":68},\\\"start\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"251\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"Fun, but a little far fetched\\\",\\\"rating\\\":65},\\\"start\\\":{\\\"id\\\":\\\"171\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"112\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"252\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"REVIEWED\\\",\\\"properties\\\":{\\\"summary\\\":\\\"You had me at Jerry\\\",\\\"rating\\\":92},\\\"start\\\":{\\\"id\\\":\\\"170\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"38\\\",\\\"labels\\\":[\\\"Movie\\\"]}}\n{\\\"id\\\":\\\"253\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WORKS_FOR\\\",\\\"properties\\\":{\\\"id\\\":1},\\\"start\\\":{\\\"id\\\":\\\"172\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"173\\\",\\\"labels\\\":[\\\"Project\\\"]}}\n{\\\"id\\\":\\\"254\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WORKS_FOR\\\",\\\"properties\\\":{\\\"id\\\":2},\\\"start\\\":{\\\"id\\\":\\\"172\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"173\\\",\\\"labels\\\":[\\\"Project\\\"]}}\n{\\\"id\\\":\\\"255\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WORKS_FOR\\\",\\\"properties\\\":{\\\"id\\\":3},\\\"start\\\":{\\\"id\\\":\\\"172\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"173\\\",\\\"labels\\\":[\\\"Project\\\"]}}\n{\\\"id\\\":\\\"256\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WORKS_FOR\\\",\\\"properties\\\":{\\\"id\\\":4},\\\"start\\\":{\\\"id\\\":\\\"172\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"173\\\",\\\"labels\\\":[\\\"Project\\\"]}}\n{\\\"id\\\":\\\"257\\\",\\\"type\\\":\\\"relationship\\\",\\\"label\\\":\\\"WORKS_FOR\\\",\\\"properties\\\":{\\\"id\\\":5},\\\"start\\\":{\\\"id\\\":\\\"172\\\",\\\"labels\\\":[\\\"Person\\\"]},\\\"end\\\":{\\\"id\\\":\\\"173\\\",\\\"labels\\\":[\\\"Project\\\"]}}\"\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667572754717_857636997",
      "id": "paragraph_1667572754717_857636997",
      "dateCreated": "2022-11-04 14:39:14.720",
      "dateStarted": "2022-11-04 14:40:00.005",
      "dateFinished": "2022-11-04 14:40:00.149",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## `jsonFormat` config\n\n- `JSON_LINES` (default): follows [JSON lines convention](https://jsonlines.org/examples/). \n        Only this config can be used with `apoc.import.json`\n- `ARRAY_JSON`: the data will be exported as array of json:\n- `JSON`: the data will be exported as json with two (array) fields nodes and rels\n- `JSON_ID_AS_KEYS`: the data will be exported as json with two (map) fields nodes and rels where the key is the neo4j internal id and the value is the graph entity value:\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:54:18.163",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ccode\u003ejsonFormat\u003c/code\u003e config\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eJSON_LINES\u003c/code\u003e (default): follows \u003ca href\u003d\"https://jsonlines.org/examples/\"\u003eJSON lines convention\u003c/a\u003e.\u003cbr /\u003e\nOnly this config can be used with \u003ccode\u003eapoc.import.json\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eARRAY_JSON\u003c/code\u003e: the data will be exported as array of json:\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eJSON\u003c/code\u003e: the data will be exported as json with two (array) fields nodes and rels\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eJSON_ID_AS_KEYS\u003c/code\u003e: the data will be exported as json with two (map) fields nodes and rels where the key is the neo4j internal id and the value is the graph entity value:\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667572805052_1839291194",
      "id": "paragraph_1667572805052_1839291194",
      "dateCreated": "2022-11-04 14:40:05.052",
      "dateStarted": "2022-11-04 14:54:18.166",
      "dateFinished": "2022-11-04 14:54:18.356",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.json.all(\"arrayJson.json\", {jsonFormat: \"ARRAY_JSON\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:51:57.686",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"arrayJson.json\"\t\"database: nodes(174), rels(258)\"\t\"json\"\t174\t258\t576\t284\t432\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573010044_1768446048",
      "id": "paragraph_1667573010044_1768446048",
      "dateCreated": "2022-11-04 14:43:30.044",
      "dateStarted": "2022-11-04 14:51:55.711",
      "dateFinished": "2022-11-04 14:51:56.538",
      "status": "FINISHED"
    },
    {
      "text": "%md\n```\n[{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}},{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}},{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\"],\"properties\":{\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}},{\"type\":\"node\",\"id\":\"4\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Naruto\",\"Sasuke\",\"Sakura\"],\"born\":1961,\"name\":\"Laurence Fishburne\"}},{\"type\":\"node\",\"id\":\"5\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Hugo Weaving\"}},{\"type\":\"node\",\"id\":\"6\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Lilly Wachowski\"}},{\"type\":\"node\",\"id\":\"7\",\"labels\":[\"Person\"],\"properties\":{\"born\":1965,\"name\":\"Lana Wachowski\"}},{\"type\":\"node\",\"id\":\"8\",\"labels\":[\"Person\"],\"properties\":{\"born\":1952,\"name\":\"Franco e Ciccio\"}},{\"type\":\"node\",\"id\":\"9\",\"labels\":[\"Person\"],\"properties\":{\"born\":1978,\"name\":\"Emil Eifrem\"}},{\"type\":\"node\",\"id\":\"10\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Free your mind\",\"title\":\"The Matrix Reloaded\",\"released\":2003}},{\"type\":\"node\",\"id\":\"11\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Everything that has a beginning has an end\",\"title\":\"The Matrix Revolutions\",\"released\":2003}},{\"type\":\"node\",\"id\":\"12\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Evil has its winning ways\",\"title\":\"The Devil\u0027s Advocate\",\"released\":1997}},{\"type\":\"node\",\"id\":\"13\",\"labels\":[\"Person\"],\"properties\":{\"born\":1975,\"name\":\"Charlize Theron\"}},{\"type\":\"node\",\"id\":\"14\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"Al Pacino\"}},{\"type\":\"node\",\"id\":\"15\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Taylor Hackford\"}},{\"type\":\"node\",\"id\":\"16\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\",\"title\":\"A Few Good Men\",\"released\":1992}},{\"type\":\"node\",\"id\":\"17\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Tom Cruise\"}},{\"type\":\"node\",\"id\":\"18\",\"labels\":[\"Person\"],\"properties\":{\"born\":1937,\"name\":\"Jack Nicholson\"}},{\"type\":\"node\",\"id\":\"19\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Demi Moore\"}},{\"type\":\"node\",\"id\":\"20\",\"labels\":[\"Person\"],\"properties\":{\"born\":1958,\"name\":\"Kevin Bacon\"}},{\"type\":\"node\",\"id\":\"21\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"Kiefer Sutherland\"}},{\"type\":\"node\",\"id\":\"22\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Noah Wyle\"}},{\"type\":\"node\",\"id\":\"23\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Cuba Gooding Jr.\"}},{\"type\":\"node\",\"id\":\"24\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kevin Pollak\"}},{\"type\":\"node\",\"id\":\"25\",\"labels\":[\"Person\"],\"properties\":{\"born\":1943,\"name\":\"J.T. Walsh\"}},{\"type\":\"node\",\"id\":\"26\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"James Marshall\"}},{\"type\":\"node\",\"id\":\"27\",\"labels\":[\"Person\"],\"properties\":{\"born\":1948,\"name\":\"Christopher Guest\"}},{\"type\":\"node\",\"id\":\"28\",\"labels\":[\"Person\"],\"properties\":{\"born\":1947,\"name\":\"Rob Reiner\"}},{\"type\":\"node\",\"id\":\"29\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Aaron Sorkin\"}},{\"type\":\"node\",\"id\":\"30\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"I feel the need, the need for speed.\",\"title\":\"Top Gun\",\"released\":1986}},{\"type\":\"node\",\"id\":\"31\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kelly McGillis\"}},{\"type\":\"node\",\"id\":\"32\",\"labels\":[\"Person\"],\"properties\":{\"born\":1959,\"name\":\"Val Kilmer\"}},{\"type\":\"node\",\"id\":\"33\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Anthony Edwards\"}},{\"type\":\"node\",\"id\":\"34\",\"labels\":[\"Person\"],\"properties\":{\"born\":1933,\"name\":\"Tom Skerritt\"}},{\"type\":\"node\",\"id\":\"35\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Meg Ryan\"}},{\"type\":\"node\",\"id\":\"36\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Tony Scott\"}},{\"type\":\"node\",\"id\":\"37\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Jim Cash\"}},{\"type\":\"node\",\"id\":\"38\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"The rest of his life begins now.\",\"title\":\"Jerry Maguire\",\"released\":2000}},{\"type\":\"node\",\"id\":\"39\",\"labels\":[\"Person\"],\"properties\":{\"born\":1969,\"name\":\"Renee Zellweger\"}},{\"type\":\"node\",\"id\":\"40\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Kelly Preston\"}},{\"type\":\"node\",\"id\":\"41\",\"labels\":[\"Person\"],\"properties\":{\"born\":1974,\"name\":\"Jerry O\u0027Connell\"}},{\"type\":\"node\",\"id\":\"42\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Jay Mohr\"}},{\"type\":\"node\",\"id\":\"43\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Bonnie Hunt\"}},{\"type\":\"node\",\"id\":\"44\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Regina King\"}},{\"type\":\"node\",\"id\":\"45\",\"labels\":[\"Person\"],\"properties\":{\"born\":1996,\"name\":\"Jonathan Lipnicki\"}},{\"type\":\"node\",\"id\":\"46\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Cameron Crowe\"}},{\"type\":\"node\",\"id\":\"47\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\",\"title\":\"Stand By Me\",\"released\":1986}},{\"type\":\"node\",\"id\":\"48\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"River Phoenix\"}},{\"type\":\"node\",\"id\":\"49\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Corey Feldman\"}},{\"type\":\"node\",\"id\":\"50\",\"labels\":[\"Person\"],\"properties\":{\"born\":1972,\"name\":\"Wil Wheaton\"}},{\"type\":\"node\",\"id\":\"51\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"John Cusack\"}},{\"type\":\"node\",\"id\":\"52\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Marshall Bell\"}},{\"type\":\"node\",\"id\":\"53\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"A comedy from the heart that goes for the throat.\",\"title\":\"As Good as It Gets\",\"released\":1997}},{\"type\":\"node\",\"id\":\"54\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Helen Hunt\"}},{\"type\":\"node\",\"id\":\"55\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Greg Kinnear\"}},{\"type\":\"node\",\"id\":\"56\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James L. Brooks\"}},{\"type\":\"node\",\"id\":\"57\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"After life there is more. The end is just the beginning.\",\"title\":\"What Dreams May Come\",\"released\":1998}},{\"type\":\"node\",\"id\":\"58\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Annabella Sciorra\"}},{\"type\":\"node\",\"id\":\"59\",\"labels\":[\"Person\"],\"properties\":{\"born\":1929,\"name\":\"Max von Sydow\"}},{\"type\":\"node\",\"id\":\"60\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Werner Herzog\"}},{\"type\":\"node\",\"id\":\"61\",\"labels\":[\"Person\"],\"properties\":{\"born\":1951,\"name\":\"Robin Williams\"}},{\"type\":\"node\",\"id\":\"62\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Vincent Ward\"}},{\"type\":\"node\",\"id\":\"63\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"First loves last. Forever.\",\"title\":\"Snow Falling on Cedars\",\"released\":1999}},{\"type\":\"node\",\"id\":\"64\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Ethan Hawke\"}},{\"type\":\"node\",\"id\":\"65\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Rick Yune\"}},{\"type\":\"node\",\"id\":\"66\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James Cromwell\"}},{\"type\":\"node\",\"id\":\"67\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Scott Hicks\"}},{\"type\":\"node\",\"id\":\"68\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"At odds in life... in love on-line.\",\"title\":\"You\u0027ve Got Mail\",\"released\":1998}},{\"type\":\"node\",\"id\":\"69\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Parker Posey\"}},{\"type\":\"node\",\"id\":\"70\",\"labels\":[\"Person\"],\"properties\":{\"born\":1973,\"name\":\"Dave Chappelle\"}},{\"type\":\"node\",\"id\":\"71\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Steve Zahn\"}},{\"type\":\"node\",\"id\":\"72\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Tom Hanks\"}},{\"type\":\"node\",\"id\":\"73\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Nora Ephron\"}},{\"type\":\"node\",\"id\":\"74\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\",\"title\":\"Sleepless in Seattle\",\"released\":1993}},{\"type\":\"node\",\"id\":\"75\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Rita Wilson\"}},{\"type\":\"node\",\"id\":\"76\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Bill Pullman\"}},{\"type\":\"node\",\"id\":\"77\",\"labels\":[\"Person\"],\"properties\":{\"born\":1949,\"name\":\"Victor Garber\"}},{\"type\":\"node\",\"id\":\"78\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Rosie O\u0027Donnell\"}},{\"type\":\"node\",\"id\":\"79\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"A story of love, lava and burning desire.\",\"title\":\"Joe Versus the Volcano\",\"released\":1990}},{\"type\":\"node\",\"id\":\"80\",\"labels\":[\"Person\"],\"properties\":{\"born\":1950,\"name\":\"John Patrick Stanley\"}},{\"type\":\"node\",\"id\":\"81\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Nathan Lane\"}},{\"type\":\"node\",\"id\":\"82\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Can two friends sleep together and still love each other in the morning?\",\"title\":\"When Herry Met Sally\",\"released\":1998}},{\"type\":\"node\",\"id\":\"83\",\"labels\":[\"Person\"],\"properties\":{\"born\":1948,\"name\":\"Billy Crystal\"}},{\"type\":\"node\",\"id\":\"84\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Carrie Fisher\"}},{\"type\":\"node\",\"id\":\"85\",\"labels\":[\"Person\"],\"properties\":{\"born\":1949,\"name\":\"Bruno Kirby\"}},{\"type\":\"node\",\"id\":\"86\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"In every life there comes a time when that thing you dream becomes that thing you do\",\"title\":\"That Thing You Do\",\"released\":1996}},{\"type\":\"node\",\"id\":\"87\",\"labels\":[\"Person\"],\"properties\":{\"born\":1977,\"name\":\"Liv Tyler\"}},{\"type\":\"node\",\"id\":\"88\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Pain heals, Chicks dig scars... Glory lasts forever\",\"title\":\"The Replacements\",\"released\":2000}},{\"type\":\"node\",\"id\":\"89\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Brooke Langton\"}},{\"type\":\"node\",\"id\":\"90\",\"labels\":[\"Person\"],\"properties\":{\"born\":1929,\"name\":\"Gene Hackman\"}},{\"type\":\"node\",\"id\":\"91\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Orlando Jones\"}},{\"type\":\"node\",\"id\":\"92\",\"labels\":[\"Person\"],\"properties\":{\"born\":1950,\"name\":\"Howard Deutch\"}},{\"type\":\"node\",\"id\":\"93\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Based on the extraordinary true story of one man\u0027s fight for freedom\",\"title\":\"RescueDawn\",\"released\":2006}},{\"type\":\"node\",\"id\":\"94\",\"labels\":[\"Person\"],\"properties\":{\"born\":1974,\"name\":\"Christian Bale\"}},{\"type\":\"node\",\"id\":\"95\",\"labels\":[\"Person\"],\"properties\":{\"born\":1954,\"name\":\"Zach Grenier\"}},{\"type\":\"node\",\"id\":\"96\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Come as you are\",\"title\":\"The Birdcage\",\"released\":1996}},{\"type\":\"node\",\"id\":\"97\",\"labels\":[\"Person\"],\"properties\":{\"born\":1931,\"name\":\"Mike Nichols\"}},{\"type\":\"node\",\"id\":\"98\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"It\u0027s a hell of a thing, killing a man\",\"title\":\"Unforgiven\",\"released\":1992}},{\"type\":\"node\",\"id\":\"99\",\"labels\":[\"Person\"],\"properties\":{\"born\":1930,\"name\":\"Richard Harris\"}},{\"type\":\"node\",\"id\":\"100\",\"labels\":[\"Person\"],\"properties\":{\"born\":1930,\"name\":\"Clint Eastwood\"}},{\"type\":\"node\",\"id\":\"101\",\"labels\":[\"Movie\"],\"properties\":{\"\n\n....\n\n\n{\"id\":\"0\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"1\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"2\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n\n...\n]\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:55:12.703",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573005494_1412837294",
      "id": "paragraph_1667573005494_1412837294",
      "dateCreated": "2022-11-04 14:43:25.494",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.json.all(\"Json.json\", {jsonFormat: \"JSON\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:52:53.033",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"Json.json\"\t\"database: nodes(174), rels(258)\"\t\"json\"\t174\t258\t576\t212\t432\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573334743_10395461",
      "id": "paragraph_1667573334743_10395461",
      "dateCreated": "2022-11-04 14:48:54.743",
      "dateStarted": "2022-11-04 14:52:51.583",
      "dateFinished": "2022-11-04 14:52:51.855",
      "status": "FINISHED"
    },
    {
      "text": "%md\n```\n{\"nodes\":[{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}},{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}},{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\"],\"properties\":{\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}},{\"type\":\"node\",\"id\":\"4\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Naruto\",\"Sasuke\",\"Sakura\"],\"born\":1961,\"name\":\"Laurence Fishburne\"}},{\"type\":\"node\",\"id\":\"5\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Hugo Weaving\"}},{\"type\":\"node\",\"id\":\"6\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Lilly Wachowski\"}},{\"type\":\"node\",\"id\":\"7\",\"labels\":[\"Person\"],\"properties\":{\"born\":1965,\"name\":\"Lana Wachowski\"}},{\"type\":\"node\",\"id\":\"8\",\"labels\":[\"Person\"],\"properties\":{\"born\":1952,\"name\":\"Franco e Ciccio\"}},{\"type\":\"node\",\"id\":\"9\",\"labels\":[\"Person\"],\"properties\":{\"born\":1978,\"name\":\"Emil Eifrem\"}},{\"type\":\"node\",\"id\":\"10\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Free your mind\",\"title\":\"The Matrix Reloaded\",\"released\":2003}},{\"type\":\"node\",\"id\":\"11\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Everything that has a beginning has an end\",\"title\":\"The Matrix Revolutions\",\"released\":2003}},{\"type\":\"node\",\"id\":\"12\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Evil has its winning ways\",\"title\":\"The Devil\u0027s Advocate\",\"released\":1997}},{\"type\":\"node\",\"id\":\"13\",\"labels\":[\"Person\"],\"properties\":{\"born\":1975,\"name\":\"Charlize Theron\"}},{\"type\":\"node\",\"id\":\"14\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"Al Pacino\"}},{\"type\":\"node\",\"id\":\"15\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Taylor Hackford\"}},{\"type\":\"node\",\"id\":\"16\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\",\"title\":\"A Few Good Men\",\"released\":1992}},{\"type\":\"node\",\"id\":\"17\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Tom Cruise\"}},{\"type\":\"node\",\"id\":\"18\",\"labels\":[\"Person\"],\"properties\":{\"born\":1937,\"name\":\"Jack Nicholson\"}},{\"type\":\"node\",\"id\":\"19\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Demi Moore\"}},{\"type\":\"node\",\"id\":\"20\",\"labels\":[\"Person\"],\"properties\":{\"born\":1958,\"name\":\"Kevin Bacon\"}},{\"type\":\"node\",\"id\":\"21\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"Kiefer Sutherland\"}},{\"type\":\"node\",\"id\":\"22\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Noah Wyle\"}},{\"type\":\"node\",\"id\":\"23\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Cuba Gooding Jr.\"}},{\"type\":\"node\",\"id\":\"24\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kevin Pollak\"}},{\"type\":\"node\",\"id\":\"25\",\"labels\":[\"Person\"],\"properties\":{\"born\":1943,\"name\":\"J.T. Walsh\"}},{\"type\":\"node\",\"id\":\"26\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"James Marshall\"}},{\"type\":\"node\",\"id\":\"27\",\"labels\":[\"Person\"],\"properties\":{\"born\":1948,\"name\":\"Christopher Guest\"}},{\"type\":\"node\",\"id\":\"28\",\"labels\":[\"Person\"],\"properties\":{\"born\":1947,\"name\":\"Rob Reiner\"}},{\"type\":\"node\",\"id\":\"29\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Aaron Sorkin\"}},{\"type\":\"node\",\"id\":\"30\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"I feel the need, the need for speed.\",\"title\":\"Top Gun\",\"released\":1986}},{\"type\":\"node\",\"id\":\"31\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kelly McGillis\"}},{\"type\":\"node\",\"id\":\"32\",\"labels\":[\"Person\"],\"properties\":{\"born\":1959,\"name\":\"Val Kilmer\"}},{\"type\":\"node\",\"id\":\"33\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Anthony Edwards\"}},{\"type\":\"node\",\"id\":\"34\",\"labels\":[\"Person\"],\"properties\":{\"born\":1933,\"name\":\"Tom Skerritt\"}},{\"type\":\"node\",\"id\":\"35\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Meg Ryan\"}},{\"type\":\"node\",\"id\":\"36\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Tony Scott\"}},{\"type\":\"node\",\"id\":\"37\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Jim Cash\"}},{\"type\":\"node\",\"id\":\"38\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"The rest of his life begins now.\",\"title\":\"Jerry Maguire\",\"released\":2000}},{\"type\":\"node\",\"id\":\"39\",\"labels\":[\"Person\"],\"properties\":{\"born\":1969,\"name\":\"Renee Zellweger\"}},{\"type\":\"node\",\"id\":\"40\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Kelly Preston\"}},{\"type\":\"node\",\"id\":\"41\",\"labels\":[\"Person\"],\"properties\":{\"born\":1974,\"name\":\"Jerry O\u0027Connell\"}},{\"type\":\"node\",\"id\":\"42\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Jay Mohr\"}},{\"type\":\"node\",\"id\":\"43\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Bonnie Hunt\"}},{\"type\":\"node\",\"id\":\"44\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Regina King\"}},{\"type\":\"node\",\"id\":\"45\",\"labels\":[\"Person\"],\"properties\":{\"born\":1996,\"name\":\"Jonathan Lipnicki\"}},{\"type\":\"node\",\"id\":\"46\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Cameron Crowe\"}},{\"type\":\"node\",\"id\":\"47\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\",\"title\":\"Stand By Me\",\"released\":1986}},{\"type\":\"node\",\"id\":\"48\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"River Phoenix\"}},{\"type\":\"node\",\"id\":\"49\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Corey Feldman\"}},{\"type\":\"node\",\"id\":\"50\",\"labels\":[\"Person\"],\"properties\":{\"born\":1972,\"name\":\"Wil Wheaton\"}},{\"type\":\"node\",\"id\":\"51\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"John Cusack\"}},{\"type\":\"node\",\"id\":\"52\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Marshall Bell\"}},{\"type\":\"node\",\"id\":\"53\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"A comedy from the heart that goes for the throat.\",\"title\":\"As Good as It Gets\",\"released\":1997}},{\"type\":\"node\",\"id\":\"54\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Helen Hunt\"}},{\"type\":\"node\",\"id\":\"55\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Greg Kinnear\"}},{\"type\":\"node\",\"id\":\"56\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James L. Brooks\"}},{\"type\":\"node\",\"id\":\"57\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"After life there is more. The end is just the beginning.\",\"title\":\"What Dreams May Come\",\"released\":1998}},{\"type\":\"node\",\"id\":\"58\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Annabella Sciorra\"}},{\"type\":\"node\",\"id\":\"59\",\"labels\":[\"Person\"],\"properties\":{\"born\":1929,\"name\":\"Max von Sydow\"}},{\"type\":\"node\",\"id\":\"60\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Werner Herzog\"}},{\"type\":\"node\",\"id\":\"61\",\"labels\":[\"Person\"],\"properties\":{\"born\":1951,\"name\":\"Robin Williams\"}},{\"type\":\"node\",\"id\":\"62\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Vincent Ward\"}},{\"type\":\"node\",\"id\":\"63\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"First loves last. Forever.\",\"title\":\"Snow Falling on Cedars\",\"released\":1999}},{\"type\":\"node\",\"id\":\"64\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Ethan Hawke\"}},{\"type\":\"node\",\"id\":\"65\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Rick Yune\"}},{\"type\":\"node\",\"id\":\"66\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James Cromwell\"}},{\"type\":\"node\",\"id\":\"67\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Scott Hicks\"}},{\"type\":\"node\",\"id\":\"68\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"At odds in life... in love on-line.\",\"title\":\"You\u0027ve Got Mail\",\"released\":1998}},{\"type\":\"node\",\"id\":\"69\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Parker Posey\"}},{\"type\":\"node\",\"id\":\"70\",\"labels\":[\"Person\"],\"properties\":{\"born\":1973,\"name\":\"Dave Chappelle\"}},{\"type\":\"node\",\"id\":\"71\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Steve Zahn\"}},{\"type\":\"node\",\"id\":\"72\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Tom Hanks\"}},{\"type\":\"node\",\"id\":\"73\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Nora Ephron\"}},{\"type\":\"node\",\"id\":\"74\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\",\"title\":\"Sleepless in Seattle\",\"released\":1993}},{\"type\":\"node\",\"id\":\"75\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Rita Wilson\"}},{\"type\":\"node\",\"id\":\"76\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Bill \n\n.....\n\n\"rels\":[{\"id\":\"0\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"1\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"2\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"3\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"4\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"5\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"6\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"7\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Emil\"]},\"start\":{\"id\":\"9\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"8\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"9\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"10\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"11\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"12\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"13\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"14\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"15\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"16\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"17\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"18\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"19\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"20\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"21\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"22\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Kevin Lomax\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"12\",\"labels\":[\"Movie\"]}},{\"id\":\"23\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"prope\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:54:36.905",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573006781_1771474833",
      "id": "paragraph_1667573006781_1771474833",
      "dateCreated": "2022-11-04 14:43:26.782",
      "status": "READY"
    },
    {
      "text": "%neo4j\nCALL apoc.export.json.all(\"JsonIdKeys.json\", {jsonFormat: \"JSON_ID_AS_KEYS\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:51:55.066",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573338900_1990469062",
      "id": "paragraph_1667573338900_1990469062",
      "dateCreated": "2022-11-04 14:48:58.900",
      "status": "READY"
    },
    {
      "text": "%md\n....",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:05:53.932",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573007912_1960308685",
      "id": "paragraph_1667573007912_1960308685",
      "dateCreated": "2022-11-04 14:43:27.912",
      "status": "READY"
    },
    {
      "text": "%md\n## Export GraphMl\n\nThe export GraphML procedures export data into a format that’s used by other tools like Gephi and CytoScape to read graph data.\n\nAll Point or Temporal data types are exported formatted as a String\n\ne.g:\n\nPoint 3d\n\n{\"crs\":\"wgs-84-3d\",\"latitude\":56.7,\"longitude\":12.78,\"height\":100.0}\n\nPoint 2d\n\n{\"crs\":\"wgs-84-3d\",\"latitude\":56.7,\"longitude\":12.78,\"height\":null}\n\nDate\n\n2018-10-10\n\nLocalDateTime\n\n2018-10-10T00:00\n\n\n- apoc.export.graphml.all \n- apoc.export.graphml.data \n- apoc.export.graphml.graph \n- apoc.export.graphml.query\n\n\n\n### Configurations\n\n- caption\n- useTypes\n- batchSize\n- defaultRelationshipType\n- separateFiles (davvero???)\n- caption\n- ",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:10:54.991",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667574354036_142950248",
      "id": "paragraph_1667574354036_142950248",
      "dateCreated": "2022-11-04 15:05:54.036",
      "status": "READY"
    },
    {
      "text": "%neo4j\nCALL apoc.export.graphml.all(all.graphml)",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:18:35.904",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575101690_1264571887",
      "id": "paragraph_1667575101690_1264571887",
      "dateCreated": "2022-11-04 15:18:21.691",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:06:08.070",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667574368070_708986375",
      "id": "paragraph_1667574368070_708986375",
      "dateCreated": "2022-11-04 15:06:08.070",
      "status": "READY"
    },
    {
      "text": "%neo4j\nCALL apoc.export.graphml.all(all.graphml)",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:18:42.788",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575116855_1779681740",
      "id": "paragraph_1667575116855_1779681740",
      "dateCreated": "2022-11-04 15:18:36.855",
      "status": "READY"
    },
    {
      "text": "%md\nCALL apoc.export.graphml.graph(graph, $s3,{useTypes:true})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:19:14.800",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575122915_966609339",
      "id": "paragraph_1667575122915_966609339",
      "dateCreated": "2022-11-04 15:18:42.916",
      "status": "READY"
    },
    {
      "text": "%neo4j\ncall apoc.export.graphml.all($file,{storeNodeIds:true, readLabels:true, useTypes:true, defaultRelationshipType:\u0027RELATED\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:20:30.521",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575124784_1796103449",
      "id": "paragraph_1667575124784_1796103449",
      "dateCreated": "2022-11-04 15:18:44.784",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:18:55.033",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575128510_466088802",
      "id": "paragraph_1667575128510_466088802",
      "dateCreated": "2022-11-04 15:18:48.510",
      "status": "READY"
    },
    {
      "text": "%neo4j\ncall apoc.export.graphml.all($file,{storeNodeIds:true, readLabels:true, useTypes:true, defaultRelationshipType:\u0027RELATED\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:20:33.398",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575129844_1241390470",
      "id": "paragraph_1667575129844_1241390470",
      "dateCreated": "2022-11-04 15:18:49.845",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:20:38.971",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575234784_187922153",
      "id": "paragraph_1667575234784_187922153",
      "dateCreated": "2022-11-04 15:20:34.784",
      "status": "READY"
    },
    {
      "text": "%neo4j\ncall apoc.export.graphml.all($file,{storeNodeIds:true, readLabels:true, useTypes:true, defaultRelationshipType:\u0027RELATED\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:20:44.158",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575233472_51929975",
      "id": "paragraph_1667575233472_51929975",
      "dateCreated": "2022-11-04 15:20:33.472",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:20:41.473",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575236189_1397893651",
      "id": "paragraph_1667575236189_1397893651",
      "dateCreated": "2022-11-04 15:20:36.189",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:21:23.472",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575283472_331989614",
      "id": "paragraph_1667575283472_331989614",
      "dateCreated": "2022-11-04 15:21:23.472",
      "status": "READY"
    },
    {
      "text": "%md\n### Export xls\n\nTo use this procedure (and the apoc.load.xls) you need to download the jar\n\nhttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003cAPOC_VERSION\u003e/apoc-xls-dependencies-\u003cAPOC_VERSION\u003e.jar,\n\nso for example with apoc 4.4.0.10, `https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-xls-dependencies-4.4.0.10.jar`.\n\nand put in the `plugin` folder.",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:28:57.084",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575577938_1158569987",
      "id": "paragraph_1667575577938_1158569987",
      "dateCreated": "2022-11-04 15:26:17.938",
      "status": "READY"
    },
    {
      "text": "%neo4j\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:05.915",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576041728_363818919",
      "id": "paragraph_1667576041728_363818919",
      "dateCreated": "2022-11-04 15:34:01.729",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:10.242",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576046028_1435555135",
      "id": "paragraph_1667576046028_1435555135",
      "dateCreated": "2022-11-04 15:34:06.028",
      "status": "READY"
    },
    {
      "text": "%md\nTODO - examples...\n    public XlsExportConfig(Map\u003cString,Object\u003e c) {\n        config \u003d c !\u003d null ? c : Collections.emptyMap();\n        this.headerNodeId \u003d (String) config.getOrDefault(\"headerNodeId\", \"\u003cnodeId\u003e\");\n        this.headerRelationshipId\u003d (String) config.getOrDefault(\"headerRelationshipId\", \"\u003crelationshipId\u003e\");\n        this.headerStartNodeId \u003d (String) config.getOrDefault(\"headerStartNodeId\", \"\u003cstartNodeId\u003e\");\n        this.headerEndNodeId \u003d (String) config.getOrDefault(\"headerEndNodeId\", \"\u003cendNodeId\u003e\");\n        this.arrayDelimiter \u003d (String) config.getOrDefault(\"arrayDelimiter\", \";\");\n        this.dateTimeStyle \u003d (String) config.getOrDefault(\"dateTimeStyle\", \"yyyy-mm-dd hh:mm:ss\");\n        this.dateStyle \u003d (String) config.getOrDefault(\"dateStyle\", \"yyyy-mm-dd\");\n        this.batchSize \u003d ((Number)config.getOrDefault(\"batchSize\", DEFAULT_BATCH_SIZE)).intValue();\n        this.prefixSheetWithEntityType \u003d Util.toBoolean(config.getOrDefault(\"prefixSheetWithEntityType\", false));\n        this.joinLabels \u003d Util.toBoolean(config.getOrDefault(\"joinLabels\", false));\n    }\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:01.645",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575737193_203994453",
      "id": "paragraph_1667575737193_203994453",
      "dateCreated": "2022-11-04 15:28:57.194",
      "status": "READY"
    },
    {
      "text": "%neo4j\nexample with something...",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:56.398",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576047334_685582360",
      "id": "paragraph_1667576047334_685582360",
      "dateCreated": "2022-11-04 15:34:07.334",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:34.385",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576071482_278603958",
      "id": "paragraph_1667576071482_278603958",
      "dateCreated": "2022-11-04 15:34:31.482",
      "status": "READY"
    },
    {
      "text": "%md\n### Export Arrow",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:23:51.014",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575415017_1797430969",
      "id": "paragraph_1667575415017_1797430969",
      "dateCreated": "2022-11-04 15:23:35.017",
      "status": "READY"
    },
    {
      "text": "%md\nDire che in teoria non serve che la versioni combaci perfettamente, ma per sicurezza \n\n- vari protocols: http/https/s3/...",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:57:53.882",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n\u003cli\u003evari protocols: http/https/s3/\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666606586725_2099638126",
      "id": "paragraph_1666606586725_2099638126",
      "dateCreated": "2022-10-24 10:16:26.729",
      "dateStarted": "2022-10-24 10:16:44.868",
      "dateFinished": "2022-10-24 10:16:44.978",
      "status": "FINISHED"
    },
    {
      "text": "%md\ntodo - esempio con un protocollo",
      "user": "anonymous",
      "dateUpdated": "2022-10-28 15:57:06.230",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972616081_1881356028",
      "id": "paragraph_1666972616081_1881356028",
      "dateCreated": "2022-10-28 15:56:56.081",
      "status": "READY"
    },
    {
      "text": "%md\nTODO - DIRE IL FATTO CHE HO DETTO IN VERACODE, DI USE NEO4J CONFIG",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:22:40.445",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575349434_954302871",
      "id": "paragraph_1667575349434_954302871",
      "dateCreated": "2022-11-04 15:22:29.434",
      "status": "READY"
    },
    {
      "text": "%md\n3 esercizi di export:\nesportare tutte le persone con proprieta x \u003c 20 in cypher e format plain\nesportare tutte le movie, con la graph, in json in formato default e in un unico array\nesportare tutte le entità, con la graph, in json in formato default e in un unico array",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:44:57.558",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972646699_626512426",
      "id": "paragraph_1666972646699_626512426",
      "dateCreated": "2022-10-28 15:57:26.699",
      "status": "READY"
    },
    {
      "text": "%md\n# file compressi\n\nNOTE:file compressed (e.g `.gz`, `.deflate`) not archives (like `.tar.gz` or `.zip`)",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 16:42:02.265",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666606604863_797590396",
      "id": "paragraph_1666606604863_797590396",
      "dateCreated": "2022-10-24 10:16:44.863",
      "status": "READY"
    }
  ],
  "name": "00. export cypher - graphml - json - xls",
  "id": "2HJF49R6C",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}