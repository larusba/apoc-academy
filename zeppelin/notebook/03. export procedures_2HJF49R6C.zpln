{
  "paragraphs": [
    {
      "text": "%md\n\n# Export\n\nTo activate it, use `apoc.export.file.enabled\u003dtrue`.\n\n- Export to CSV (apoc.export.csv.TYPE)\n- Export to JSON (apoc.export.json.TYPE)\n- Export to Cypher Script (apoc.export.cypher.TYPE)\n- Export to GraphML (apoc.export.graphml.TYPE)\n- Export to Xls (apoc.export.xls.TYPE)\n\n\nWhere `TYPE` can be `all`, `data`, `graph`, `query`.\n\nFor example, in JSON case, we have `apoc.export.json.all(fileName, $configMap)`, \n`apoc.export.json.query(query, file, $configMap)`, \n`apoc.export.json.data(nodes, rels, fileName, $configMap)`\n`apoc.export.json.graph(graph, fileName?, $configMap)`.\n\n`$configMap` depends on file Type. See \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/overview/apoc.export/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e to see all possible configurations.\n\n---\n#### REFRESHER\n\nIn `apoc.export.csv.*` we have\n-` batchSize (default: 20000)` - define the batch size to export large files avoiding heap space errors\n- `delim (default: \",\")` - define the delimiter character (export csv)\n- `arrayDelim (default: \";\")` - define the delimiter character for arrays\n- `quotes (default: \u0027always\u0027)` - quote-character used for CSV. It can be \u0027always\u0027, \u0027none\u0027 or \u0027ifNeeded\u0027, that apply quotes only when it\u0027s necessary (for escape purpose or when a value is blank)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:16:33.460",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eExport\u003c/h1\u003e\n\u003cp\u003eTo activate it, use \u003ccode\u003eapoc.export.file.enabled\u003dtrue\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eExport to CSV (apoc.export.csv.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to JSON (apoc.export.json.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to Cypher Script (apoc.export.cypher.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to GraphML (apoc.export.graphml.TYPE)\u003c/li\u003e\n\u003cli\u003eExport to Xls (apoc.export.xls.TYPE)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhere \u003ccode\u003eTYPE\u003c/code\u003e can be \u003ccode\u003eall\u003c/code\u003e, \u003ccode\u003edata\u003c/code\u003e, \u003ccode\u003egraph\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eFor example, in JSON case, we have \u003ccode\u003eapoc.export.json.all(fileName, $configMap)\u003c/code\u003e,\u003cbr /\u003e\n\u003ccode\u003eapoc.export.json.query(query, file, $configMap)\u003c/code\u003e,\u003cbr /\u003e\n\u003ccode\u003eapoc.export.json.data(nodes, rels, fileName, $configMap)\u003c/code\u003e\u003cbr /\u003e\n\u003ccode\u003eapoc.export.json.graph(graph, fileName?, $configMap)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$configMap\u003c/code\u003e depends on file Type. See \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/overview/apoc.export/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e to see all possible configurations.\u003c/p\u003e\n\u003chr /\u003e\n\u003ch4\u003eREFRESHER\u003c/h4\u003e\n\u003cp\u003eIn \u003ccode\u003eapoc.export.csv.*\u003c/code\u003e we have\u003cbr /\u003e\n-\u003ccode\u003ebatchSize (default: 20000)\u003c/code\u003e - define the batch size to export large files avoiding heap space errors\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edelim (default: \u0026quot;,\u0026quot;)\u003c/code\u003e - define the delimiter character (export csv)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003earrayDelim (default: \u0026quot;;\u0026quot;)\u003c/code\u003e - define the delimiter character for arrays\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003equotes (default: \u0027always\u0027)\u003c/code\u003e - quote-character used for CSV. It can be \u0026lsquo;always\u0026rsquo;, \u0026lsquo;none\u0026rsquo; or \u0026lsquo;ifNeeded\u0026rsquo;, that apply quotes only when it\u0026rsquo;s necessary (for escape purpose or when a value is blank)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666604216511_60290228",
      "id": "paragraph_1666604216511_60290228",
      "dateCreated": "2022-10-24 09:36:56.511",
      "dateStarted": "2022-11-10 22:16:33.460",
      "dateFinished": "2022-11-10 22:16:33.484",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.csv.all(\u0027testfile.csv\u0027, {quotes: \u0027always\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:19:43.659",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 114.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"testfile.csv\"\t\"database: nodes(172), rels(254)\"\t\"csv\"\t172\t254\t571\t241\t426\t20000\t1\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925556357_2134364951",
      "id": "paragraph_1667925556357_2134364951",
      "dateCreated": "2022-11-08 16:39:16.357",
      "dateStarted": "2022-11-10 08:19:29.518",
      "dateFinished": "2022-11-10 08:19:32.511",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\ncall apoc.export.csv.all(\u0027testfileNoQuote.csv\u0027, {quotes: \u0027none\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:39:37.010",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925559120_766832834",
      "id": "paragraph_1667925559120_766832834",
      "dateCreated": "2022-11-08 16:39:19.120",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.csv.all(\u0027testfileNeededQuote.csv\u0027, {quotes: \u0027ifNeeded\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:39:44.374",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925579197_1685688357",
      "id": "paragraph_1667925579197_1685688357",
      "dateCreated": "2022-11-08 16:39:39.197",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.csv.all(\"customDelim.csv\", {quotes: \u0027none\u0027, delim: \u0027|\u0027, arrayDelimiter: \u0027_\u0027}) ",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:39:57.848",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925590593_186103894",
      "id": "paragraph_1667925590593_186103894",
      "dateCreated": "2022-11-08 16:39:50.593",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.csv.query(\"MATCH (person:Person) RETURN person\", \u0027person.csv\u0027, {})\nYIELD file RETURN file",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:40:06.017",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925591262_1769270845",
      "id": "paragraph_1667925591262_1769270845",
      "dateCreated": "2022-11-08 16:39:51.262",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nMATCH (person:Person) \nWITH collect(person) as people\nCALL apoc.export.csv.data(people, [], \u0027dataFile.csv\u0027, {})\nyield file return file",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:40:12.528",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925605887_1452847550",
      "id": "paragraph_1667925605887_1452847550",
      "dateCreated": "2022-11-08 16:40:05.887",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n\n\nMATCH (person:Person)-[r:DIRECTED]-\u003e() \nWITH {nodes: collect(person), relationships: collect(r)} as graph\nCALL apoc.export.csv.graph(graph, \u0027graphFile.csv\u0027, {}) YIELD file RETURN file",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:40:37.944",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925606799_38669532",
      "id": "paragraph_1667925606799_38669532",
      "dateCreated": "2022-11-08 16:40:06.799",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n// We can pass filename null and a config with `stream:true` to retrieve results directly in neo4j instead of a file\nCALL apoc.export.csv.all(null, {stream:true, batchSize: 20, quote: \u0027none\u0027}) yield data return data",
      "user": "anonymous",
      "dateUpdated": "2022-11-08 16:40:55.564",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667925616825_1860067774",
      "id": "paragraph_1667925616825_1860067774",
      "dateCreated": "2022-11-08 16:40:16.825",
      "dateStarted": "2022-11-08 16:40:51.873",
      "dateFinished": "2022-11-08 16:40:52.842",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Export cypher\n\nSee [here](https://neo4j.com/labs/apoc/4.4/export/cypher/)\n\nWe have 4 procedures + 1 just for schema:\n- `apoc.export.cypher.all`\n- `apoc.export.cypher.data`\n- `apoc.export.cypher.graph`\n- `apoc.export.cypher.query`\n- `apoc.export.cypher.schema`\n\n\n### Available configurations:\n\n- batchSize\n- unwindBatchSize\n- format\n- cypherFormat\n- separateFiles \n- useOptimizations\n- awaitForIndexes\n- saveIndexNames\n- saveConstraintNames\n- multipleRelationshipsWithType\n- timeout\n- stream",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:20:26.656",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eExport cypher\u003c/h2\u003e\n\u003cp\u003eSee \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.4/export/cypher/\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eWe have 4 procedures + 1 just for schema:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.cypher.all\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.cypher.data\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.cypher.graph\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.cypher.query\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.cypher.schema\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAvailable configurations:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ebatchSize\u003c/li\u003e\n\u003cli\u003eunwindBatchSize\u003c/li\u003e\n\u003cli\u003eformat\u003c/li\u003e\n\u003cli\u003ecypherFormat\u003c/li\u003e\n\u003cli\u003eseparateFiles\u003c/li\u003e\n\u003cli\u003euseOptimizations\u003c/li\u003e\n\u003cli\u003eawaitForIndexes\u003c/li\u003e\n\u003cli\u003esaveIndexNames\u003c/li\u003e\n\u003cli\u003esaveConstraintNames\u003c/li\u003e\n\u003cli\u003emultipleRelationshipsWithType\u003c/li\u003e\n\u003cli\u003etimeout\u003c/li\u003e\n\u003cli\u003estream\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666606356300_2070896974",
      "id": "paragraph_1666606356300_2070896974",
      "dateCreated": "2022-10-24 10:12:36.300",
      "dateStarted": "2022-11-10 22:20:26.657",
      "dateFinished": "2022-11-10 22:20:26.673",
      "status": "FINISHED"
    },
    {
      "title": "Default configurations",
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\u0027testfile.cypher\u0027)",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:23:31.001",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testfile.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t68\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608073857_190827409",
      "id": "paragraph_1666608073857_190827409",
      "dateCreated": "2022-10-24 10:41:13.857",
      "dateStarted": "2022-11-04 13:03:09.299",
      "dateFinished": "2022-11-04 13:03:09.401",
      "status": "FINISHED"
    },
    {
      "title": "Output explained",
      "text": "%md\n\nExport a `.cypher` file useful for import with Cypher Shell:\n\n```\n// begin and commit with `:`\n:begin\n\n\n// create indexes\nCREATE INDEX ON :Movie(title);\n\n// create constraints\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\n\n// create an \"internal\" unique constraint\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\n\n:commit\n\n// waiting for indexes\nCALL db.awaitIndexes(300);\n\n\n:begin\n// we group some nodes properties (default with size 20), and to distinguish them, we create an _id from the intrinsic id\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\n\n\n// we create multiple nodes with our \"internal\" label and properties, and set properties and labels\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc....\n\n:commit\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\n\n// etc....\n\n:commit\n:begin\n\n// remove unique labels\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\n\n// remove unique constraint\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 01:10:59.395",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eExport a \u003ccode\u003e.cypher\u003c/code\u003e file useful for import with Cypher Shell:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// begin and commit with `:`\n:begin\n\n\n// create indexes\nCREATE INDEX ON :Movie(title);\n\n// create constraints\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\n\n// create an \u0026quot;internal\u0026quot; unique constraint\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\n\n:commit\n\n// waiting for indexes\nCALL db.awaitIndexes(300);\n\n\n:begin\n// we group some nodes properties (default with size 20), and to distinguish them, we create an _id from the intrinsic id\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\n\n\n// we create multiple nodes with our \u0026quot;internal\u0026quot; label and properties, and set properties and labels\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc....\n\n:commit\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\n\n// etc....\n\n:commit\n:begin\n\n// remove unique labels\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\n\n// remove unique constraint\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608507342_684605333",
      "id": "paragraph_1666608507342_684605333",
      "dateCreated": "2022-10-24 10:48:27.342",
      "dateStarted": "2022-11-11 01:10:59.399",
      "dateFinished": "2022-11-11 01:10:59.432",
      "status": "FINISHED"
    },
    {
      "text": "%md\n`format` config: \n- `cypher-shell` (default): for import with Cypher Shell\n- `plain`: exports plain Cypher without begin, commit, or await commands. For import with Neo4j Browser\n- `neo4j-shell`: for import with Neo4j Shell and the `apoc.cypher.runFile` procedure",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:23:57.739",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003eformat\u003c/code\u003e config:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ecypher-shell\u003c/code\u003e (default): for import with Cypher Shell\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eplain\u003c/code\u003e: exports plain Cypher without begin, commit, or await commands. For import with Neo4j Browser\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eneo4j-shell\u003c/code\u003e: for import with Neo4j Shell and the \u003ccode\u003eapoc.cypher.runFile\u003c/code\u003e procedure\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666609630855_1504779443",
      "id": "paragraph_1666609630855_1504779443",
      "dateCreated": "2022-10-24 11:07:10.855",
      "dateStarted": "2022-11-10 08:23:57.741",
      "dateFinished": "2022-11-10 08:23:57.756",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testPlain.cypher\", {format: \u0027PLAIN\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 12:00:48.343",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 114.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testPlain.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t146\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666608402975_516550672",
      "id": "paragraph_1666608402975_516550672",
      "dateCreated": "2022-10-24 10:46:42.975",
      "dateStarted": "2022-11-04 12:00:48.367",
      "dateFinished": "2022-11-04 12:00:49.566",
      "status": "FINISHED"
    },
    {
      "title": "Output",
      "text": "%md\n\nFile without `:begin` and `:commit`, and no schema await:\n```\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}] AS row\n\n// etc...\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:01:57.874",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFile without \u003ccode\u003e:begin\u003c/code\u003e and \u003ccode\u003e:commit\u003c/code\u003e, and no schema await:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}] AS row\n\n// etc...\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666619594388_2014218297",
      "id": "paragraph_1666619594388_2014218297",
      "dateCreated": "2022-10-24 13:53:14.388",
      "dateStarted": "2022-11-04 13:01:57.872",
      "dateFinished": "2022-11-04 13:01:57.895",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testNeo4jShell.cypher\", {format: \u0027neo4j-shell\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 12:08:03.566",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testNeo4jShell.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t62\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667563384110_503205032",
      "id": "paragraph_1667563384110_503205032",
      "dateCreated": "2022-11-04 12:03:04.110",
      "dateStarted": "2022-11-04 12:08:03.579",
      "dateFinished": "2022-11-04 12:08:03.679",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nFile with `BEGIN` and `COMMIT` and different shema await`:\n```\nBEGIN\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\nCOMMIT\n\n// command changed for neo4j-shell\nSCHEMA AWAIT\n\nBEGIN\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}] AS row\n\n// etc...\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 20:42:25.129",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFile with \u003ccode\u003eBEGIN\u003c/code\u003e and \u003ccode\u003eCOMMIT\u003c/code\u003e and different shema await`:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eBEGIN\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\nCOMMIT\n\n// command changed for neo4j-shell\nSCHEMA AWAIT\n\nBEGIN\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}] AS row\n\n// etc...\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667563400355_846326045",
      "id": "paragraph_1667563400355_846326045",
      "dateCreated": "2022-11-04 12:03:20.355",
      "dateStarted": "2022-11-10 20:42:25.131",
      "dateFinished": "2022-11-10 20:42:25.154",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### `cypherFormat` config:\n\n- `create` (default) - only uses the `CREATE` clause\n\n- `updateAll` - uses `MERGE` instead of `CREATE`.\n\n- `addStructure` - uses `MATCH` for nodes and `MERGE` for relationships.\n\n- `updateStructure` - uses `MERGE` and `MATCH` for nodes and relationships.\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:24:14.399",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e\u003ccode\u003ecypherFormat\u003c/code\u003e config:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ecreate\u003c/code\u003e (default) - only uses the \u003ccode\u003eCREATE\u003c/code\u003e clause\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eupdateAll\u003c/code\u003e - uses \u003ccode\u003eMERGE\u003c/code\u003e instead of \u003ccode\u003eCREATE\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eaddStructure\u003c/code\u003e - uses \u003ccode\u003eMATCH\u003c/code\u003e for nodes and \u003ccode\u003eMERGE\u003c/code\u003e for relationships.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eupdateStructure\u003c/code\u003e - uses \u003ccode\u003eMERGE\u003c/code\u003e and \u003ccode\u003eMATCH\u003c/code\u003e for nodes and relationships.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666607181427_1851482496",
      "id": "paragraph_1666607181427_1851482496",
      "dateCreated": "2022-10-24 10:26:21.427",
      "dateStarted": "2022-11-10 08:24:14.402",
      "dateFinished": "2022-11-10 08:24:14.415",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testUpdateAll.cypher\", {cypherFormat: \u0027updateAll\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:05:07.211",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666607087524_863233031",
      "id": "paragraph_1666607087524_863233031",
      "dateCreated": "2022-10-24 10:24:47.524",
      "dateStarted": "2022-11-04 13:05:07.226",
      "dateFinished": "2022-11-04 13:05:07.362",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nIf those entities may already exist in the destination database, we may choose to use another format.\n\n```\n:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n\n// \n:begin\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\n\n// merge statement\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc...\n\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\n\n// match...\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:93}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:96}, properties:{}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{}}, {start: {name:\"Robert Longo\"}, end: {_id:101}, properties:{}}, {start: {name:\"Tom Tykwer\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:112}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:129}, properties:{}}, {start: {name:\"Frank Darabont\"}, end: {_id:131}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:138}, properties:{}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:145}, properties:{}}, {start: {name:\"Jan de Bont\"}, end: {_id:148}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:151}, properties:{}}, {start: {name:\"Milos Forman\"}, end: {_id:153}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\n\n\n// etc...\n\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:12:50.308",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf those entities may already exist in the destination database, we may choose to use another format.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n\n// \n:begin\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\n\n// merge statement\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// etc...\n\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\n\n// match...\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:93}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:96}, properties:{}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{}}, {start: {name:\u0026quot;Robert Longo\u0026quot;}, end: {_id:101}, properties:{}}, {start: {name:\u0026quot;Tom Tykwer\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:112}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Frank Darabont\u0026quot;}, end: {_id:131}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:138}, properties:{}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:145}, properties:{}}, {start: {name:\u0026quot;Jan de Bont\u0026quot;}, end: {_id:148}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:151}, properties:{}}, {start: {name:\u0026quot;Milos Forman\u0026quot;}, end: {_id:153}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\n\n\n// etc...\n\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567094175_976990248",
      "id": "paragraph_1667567094175_976990248",
      "dateCreated": "2022-11-04 13:04:54.175",
      "dateStarted": "2022-11-04 13:12:50.308",
      "dateFinished": "2022-11-04 13:12:50.325",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testUpdateStructure.cypher\", {cypherFormat: \u0027updateStructure\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:09:44.337",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testUpdateStructure.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t0\t253\t190\t66\t253\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567355707_1192313309",
      "id": "paragraph_1667567355707_1192313309",
      "dateCreated": "2022-11-04 13:09:15.707",
      "dateStarted": "2022-11-04 13:09:36.581",
      "dateFinished": "2022-11-04 13:09:36.749",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\nIf those relationships do exist but have properties that need to be updated, we can use cypherFormat: \"updateStructure\" to create our import script.\n \n```\n\n// we don\u0027t create node indexes/constraints\n\n// we just create rels...\n:begin\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:93}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:96}, properties:{}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{}}, {start: {name:\"Robert Longo\"}, end: {_id:101}, properties:{}}, {start: {name:\"Tom Tykwer\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:112}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:129}, properties:{}}, {start: {name:\"Frank Darabont\"}, end: {_id:131}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:138}, properties:{}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:145}, properties:{}}, {start: {name:\"Jan de Bont\"}, end: {_id:148}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:151}, properties:{}}, {start: {name:\"Milos Forman\"}, end: {_id:153}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Chris Columbus\"}, end: {_id:158}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:160}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:162}, properties:{}}, {start: {name:\"Penny Marshall\"}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"James Thompson\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Angela Scope\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Paul Blythe\"}, end: {name:\"Angela Scope\"}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nMERGE (start)-[r:FOLLOWS]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Franco e Ciccio\"}, end: {_id:1}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:10}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:11}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:82}, properties:{}}, {start: {name:\"Stefan Arndt\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:117}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:129}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:129}, properties:{}}, {start: {name:\"Franco e Ciccio\"}, end: {_id:129}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:PRODUCED]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{}}, {start: {name:\"Jim Cash\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:82}, properties:{}}, {start: {name:\"David Mitchell\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:WROTE]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Giandomenico Fracchia\"}, end: {_id:1}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:1}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:1}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:1}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Emil Eifrem\"}, end: {_id:1}, properties:{roles:[\"Emil\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:10}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:10}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:10}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:10}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:11}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:11}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:11}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:11}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:12}, properties:{roles:[\"Kevin Lomax\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:12}, properties:{roles:[\"Mary Ann Lomax\"]}}, {start: {name:\"Al Pacino\"}, end: {_id:12}, properties:{roles:[\"John Milton\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:16}, properties:{roles:[\"Lt. Daniel Kaffee\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:16}, properties:{roles:[\"Col. Nathan R. Jessup\"]}}, {start: {name:\"Demi Moore\"}, end: {_id:16}, properties:{roles:[\"Lt. Cdr. JoAnne Galloway\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:16}, properties:{roles:[\"Capt. Jack Ross\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Kiefer Sutherland\"}, end: {_id:16}, properties:{roles:[\"Lt. Jonathan Kendrick\"]}}, {start: {name:\"Noah Wyle\"}, end: {_id:16}, properties:{roles:[\"Cpl. Jeffrey Barnes\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:16}, properties:{roles:[\"Cpl. Carl Hammaker\"]}}, {start: {name:\"Kevin Pollak\"}, end: {_id:16}, properties:{roles:[\"Lt. Sam Weinberg\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:16}, properties:{roles:[\"Lt. Col. Matthew Andrew Markinson\"]}}, {start: {name:\"James Marshall\"}, end: {_id:16}, properties:{roles:[\"Pfc. Louden Downey\"]}}, {start: {name:\"Christopher Guest\"}, end: {_id:16}, properties:{roles:[\"Dr. Stone\"]}}, {start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{roles:[\"Man in Bar\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:30}, properties:{roles:[\"Maverick\"]}}, {start: {name:\"Kelly McGillis\"}, end: {_id:30}, properties:{roles:[\"Charlie\"]}}, {start: {name:\"Val Kilmer\"}, end: {_id:30}, properties:{roles:[\"Iceman\"]}}, {start: {name:\"Anthony Edwards\"}, end: {_id:30}, properties:{roles:[\"Goose\"]}}, {start: {name:\"Tom Skerritt\"}, end: {_id:30}, properties:{roles:[\"Viper\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:30}, properties:{roles:[\"Carole\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:38}, properties:{roles:[\"Jerry Maguire\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:38}, properties:{roles:[\"Rod Tidwell\"]}}, {start: {name:\"Renee Zellweger\"}, end: {_id:38}, properties:{roles:[\"Dorothy Boyd\"]}}, {start: {name:\"Kelly Preston\"}, end: {_id:38}, properties:{roles:[\"Avery Bishop\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:38}, properties:{roles:[\"Frank Cushman\"]}}, {start: {name:\"Jay Mohr\"}, end: {_id:38}, properties:{roles:[\"Bob Sugar\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Bonnie Hunt\"}, end: {_id:38}, properties:{roles:[\"Laurel Boyd\"]}}, {start: {name:\"Regina King\"}, end: {_id:38}, properties:{roles:[\"Marcee Tidwell\"]}}, {start: {name:\"Jonathan Lipnicki\"}, end: {_id:38}, properties:{roles:[\"Ray Boyd\"]}}, {start: {name:\"Wil Wheaton\"}, end: {_id:47}, properties:{roles:[\"Gordie Lachance\"]}}, {start: {name:\"River Phoenix\"}, end: {_id:47}, properties:{roles:[\"Chris Chambers\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:47}, properties:{roles:[\"Vern Tessio\"]}}, {start: {name:\"Corey Feldman\"}, end: {_id:47}, properties:{roles:[\"Teddy Duchamp\"]}}, {start: {name:\"John Cusack\"}, end: {_id:47}, properties:{roles:[\"Denny Lachance\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:47}, properties:{roles:[\"Ace Merrill\"]}}, {start: {name:\"Marshall Bell\"}, end: {_id:47}, properties:{roles:[\"Mr. Lachance\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:53}, properties:{roles:[\"Melvin Udall\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:53}, properties:{roles:[\"Carol Connelly\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:53}, properties:{roles:[\"Simon Bishop\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:53}, properties:{roles:[\"Frank Sachs\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:57}, properties:{roles:[\"Chris Nielsen\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:57}, properties:{roles:[\"Albert Lewis\"]}}, {start: {name:\"Annabella Sciorra\"}, end: {_id:57}, properties:{roles:[\"Annie Collins-Nielsen\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:57}, properties:{roles:[\"The Tracker\"]}}, {start: {name:\"Werner Herzog\"}, end: {_id:57}, properties:{roles:[\"The Face\"]}}, {start: {name:\"Ethan Hawke\"}, end: {_id:63}, properties:{roles:[\"Ishmael Chambers\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\n\n// ...\n\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:14:38.694",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf those relationships do exist but have properties that need to be updated, we can use cypherFormat: \u0026ldquo;updateStructure\u0026rdquo; to create our import script.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n// we don\u0027t create node indexes/constraints\n\n// we just create rels...\n:begin\nUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:93}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:96}, properties:{}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{}}, {start: {name:\u0026quot;Robert Longo\u0026quot;}, end: {_id:101}, properties:{}}, {start: {name:\u0026quot;Tom Tykwer\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:112}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Frank Darabont\u0026quot;}, end: {_id:131}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:138}, properties:{}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:145}, properties:{}}, {start: {name:\u0026quot;Jan de Bont\u0026quot;}, end: {_id:148}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:151}, properties:{}}, {start: {name:\u0026quot;Milos Forman\u0026quot;}, end: {_id:153}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Chris Columbus\u0026quot;}, end: {_id:158}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:160}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:162}, properties:{}}, {start: {name:\u0026quot;Penny Marshall\u0026quot;}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;James Thompson\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Angela Scope\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Paul Blythe\u0026quot;}, end: {name:\u0026quot;Angela Scope\u0026quot;}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nMERGE (start)-[r:FOLLOWS]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Stefan Arndt\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Franco e Ciccio\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:PRODUCED]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Jim Cash\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;David Mitchell\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:WROTE]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Emil Eifrem\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Emil\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Kevin Lomax\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Mary Ann Lomax\u0026quot;]}}, {start: {name:\u0026quot;Al Pacino\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;John Milton\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Daniel Kaffee\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Col. Nathan R. Jessup\u0026quot;]}}, {start: {name:\u0026quot;Demi Moore\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Cdr. JoAnne Galloway\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Capt. Jack Ross\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Jonathan Kendrick\u0026quot;]}}, {start: {name:\u0026quot;Noah Wyle\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Jeffrey Barnes\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Carl Hammaker\u0026quot;]}}, {start: {name:\u0026quot;Kevin Pollak\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Sam Weinberg\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Col. Matthew Andrew Markinson\u0026quot;]}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Pfc. Louden Downey\u0026quot;]}}, {start: {name:\u0026quot;Christopher Guest\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Dr. Stone\u0026quot;]}}, {start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Man in Bar\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Maverick\u0026quot;]}}, {start: {name:\u0026quot;Kelly McGillis\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Charlie\u0026quot;]}}, {start: {name:\u0026quot;Val Kilmer\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Iceman\u0026quot;]}}, {start: {name:\u0026quot;Anthony Edwards\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Goose\u0026quot;]}}, {start: {name:\u0026quot;Tom Skerritt\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Viper\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Carole\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Jerry Maguire\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Rod Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Renee Zellweger\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Dorothy Boyd\u0026quot;]}}, {start: {name:\u0026quot;Kelly Preston\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Avery Bishop\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Frank Cushman\u0026quot;]}}, {start: {name:\u0026quot;Jay Mohr\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Bob Sugar\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Laurel Boyd\u0026quot;]}}, {start: {name:\u0026quot;Regina King\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Marcee Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Jonathan Lipnicki\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Ray Boyd\u0026quot;]}}, {start: {name:\u0026quot;Wil Wheaton\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Gordie Lachance\u0026quot;]}}, {start: {name:\u0026quot;River Phoenix\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Chris Chambers\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Vern Tessio\u0026quot;]}}, {start: {name:\u0026quot;Corey Feldman\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Teddy Duchamp\u0026quot;]}}, {start: {name:\u0026quot;John Cusack\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Denny Lachance\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Ace Merrill\u0026quot;]}}, {start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Mr. Lachance\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Melvin Udall\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Carol Connelly\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Simon Bishop\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Frank Sachs\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Chris Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Albert Lewis\u0026quot;]}}, {start: {name:\u0026quot;Annabella Sciorra\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Annie Collins-Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Tracker\u0026quot;]}}, {start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Face\u0026quot;]}}, {start: {name:\u0026quot;Ethan Hawke\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Ishmael Chambers\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nMERGE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\n\n// ...\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567389271_953557370",
      "id": "paragraph_1667567389271_953557370",
      "dateCreated": "2022-11-04 13:09:49.271",
      "dateStarted": "2022-11-04 13:14:38.695",
      "dateFinished": "2022-11-04 13:14:38.734",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.cypher.all(\"testAddStructure.cypher\", {cypherFormat: \u0027addStructure\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:13:57.274",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"testAddStructure.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t67\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567050685_153104786",
      "id": "paragraph_1667567050685_153104786",
      "dateCreated": "2022-11-04 13:04:10.685",
      "dateStarted": "2022-11-04 13:13:36.234",
      "dateFinished": "2022-11-04 13:13:36.370",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nIf we already have the nodes in our destination database, we can use cypherFormat: \"addStructure\" to create Cypher CREATE statements for just the relationships.\n\n\n```\n\n// we don\u0027t create node indexes/constraints\n\n:begin\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:98, properties:{tagline:\"It\u0027s a hell of a thing, killing a man\", title:\"Unforgiven\", released:1992}}, {_id:101, properties:{tagline:\"The hottest data on earth. In the coolest head in town\", title:\"Johnny Mnemonic\", released:1995}}, {_id:106, properties:{tagline:\"Everything is connected\", title:\"Cloud Atlas\", released:2012}}, {_id:112, properties:{tagline:\"Break The Codes\", title:\"The Da Vinci Code\", released:2006}}, {_id:117, properties:{tagline:\"Freedom! Forever!\", title:\"V for Vendetta\", released:2006}}, {_id:122, properties:{tagline:\"Speed has no limits\", title:\"Speed Racer\", released:2008}}, {_id:129, properties:{tagline:\"Prepare to enter a secret world of assassins\", title:\"Ninja Assassin\", released:2009}}, {_id:131, properties:{tagline:\"Walk a mile you\u0027ll never forget.\", title:\"The Green Mile\", released:1999}}, {_id:138, properties:{tagline:\"400 million people were waiting for the truth.\", title:\"Frost/Nixon\", released:2008}}, {_id:142, properties:{tagline:\"He didn\u0027t want law. He wanted justice.\", title:\"Hoffa\", released:1992}}, {_id:145, properties:{tagline:\"Houston, we have a problem.\", title:\"Apollo 13\", released:1995}}, {_id:148, properties:{tagline:\"Don\u0027t Breathe. Don\u0027t Look Back.\", title:\"Twister\", released:1996}}, {_id:151, properties:{tagline:\"At the edge of the world, his journey begins.\", title:\"Cast Away\", released:2000}}, {_id:153, properties:{tagline:\"If he\u0027s crazy, what does that make you?\", title:\"One Flew Over the Cuckoo\u0027s Nest\", released:1975}}, {_id:155, properties:{title:\"Something\u0027s Gotta Give\", released:2003}}, {_id:158, properties:{tagline:\"One robot\u0027s 200 year journey to become an ordinary man.\", title:\"Bicentennial Man\", released:1999}}, {_id:160, properties:{tagline:\"A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\", title:\"Charlie Wilson\u0027s War\", released:2007}}, {_id:162, properties:{tagline:\"This Holiday Season... Believe\", title:\"The Polar Express\", released:2004}}, {_id:163, properties:{tagline:\"Once in a lifetime you get a chance to do something different.\", title:\"A League of Their Own\", released:1992}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\n\n\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:93}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:96}, properties:{}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{}}, {start: {name:\"Robert Longo\"}, end: {_id:101}, properties:{}}, {start: {name:\"Tom Tykwer\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:106}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:112}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:117}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:122}, properties:{}}, {start: {name:\"James Marshall\"}, end: {_id:129}, properties:{}}, {start: {name:\"Frank Darabont\"}, end: {_id:131}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:138}, properties:{}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{}}, {start: {name:\"Ron Howard\"}, end: {_id:145}, properties:{}}, {start: {name:\"Jan de Bont\"}, end: {_id:148}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:151}, properties:{}}, {start: {name:\"Milos Forman\"}, end: {_id:153}, properties:{}}, {start: {name:\"Nancy Meyers\"}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Chris Columbus\"}, end: {_id:158}, properties:{}}, {start: {name:\"Mike Nichols\"}, end: {_id:160}, properties:{}}, {start: {name:\"Robert Zemeckis\"}, end: {_id:162}, properties:{}}, {start: {name:\"Penny Marshall\"}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\"James Thompson\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Angela Scope\"}, end: {name:\"Jessica Thompson\"}, properties:{}}, {start: {name:\"Paul Blythe\"}, end: {name:\"Angela Scope\"}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nCREATE (start)-[r:FOLLOWS]-\u003e(end)  SET r +\u003d row.properties;\n// ..\nUNWIND [{start: {name:\"Jessica Thompson\"}, end: {_id:106}, properties:{summary:\"An amazing journey\", rating:95}}, {start: {name:\"Jessica Thompson\"}, end: {_id:88}, properties:{summary:\"Silly, but fun\", rating:65}}, {start: {name:\"James Thompson\"}, end: {_id:88}, properties:{summary:\"The coolest football movie ever\", rating:100}}, {start: {name:\"Angela Scope\"}, end: {_id:88}, properties:{summary:\"Pretty funny at times\", rating:62}}, {start: {name:\"Jessica Thompson\"}, end: {_id:98}, properties:{summary:\"Dark, but compelling\", rating:85}}, {start: {name:\"Jessica Thompson\"}, end: {_id:96}, properties:{summary:\"Slapstick redeemed only by the Robin Williams and Gene Hackman\u0027s stellar performances\", rating:45}}, {start: {name:\"Jessica Thompson\"}, end: {_id:112}, properties:{summary:\"A solid romp\", rating:68}}, {start: {name:\"James Thompson\"}, end: {_id:112}, properties:{summary:\"Fun, but a little far fetched\", rating:65}}, {start: {name:\"Jessica Thompson\"}, end: {_id:38}, properties:{summary:\"You had me at Jerry\", rating:92}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:REVIEWED]-\u003e(end)  SET r +\u003d row.properties;\n:commit\n\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:21:12.593",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIf we already have the nodes in our destination database, we can use cypherFormat: \u0026ldquo;addStructure\u0026rdquo; to create Cypher CREATE statements for just the relationships.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n// we don\u0027t create node indexes/constraints\n\n:begin\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:98, properties:{tagline:\u0026quot;It\u0027s a hell of a thing, killing a man\u0026quot;, title:\u0026quot;Unforgiven\u0026quot;, released:1992}}, {_id:101, properties:{tagline:\u0026quot;The hottest data on earth. In the coolest head in town\u0026quot;, title:\u0026quot;Johnny Mnemonic\u0026quot;, released:1995}}, {_id:106, properties:{tagline:\u0026quot;Everything is connected\u0026quot;, title:\u0026quot;Cloud Atlas\u0026quot;, released:2012}}, {_id:112, properties:{tagline:\u0026quot;Break The Codes\u0026quot;, title:\u0026quot;The Da Vinci Code\u0026quot;, released:2006}}, {_id:117, properties:{tagline:\u0026quot;Freedom! Forever!\u0026quot;, title:\u0026quot;V for Vendetta\u0026quot;, released:2006}}, {_id:122, properties:{tagline:\u0026quot;Speed has no limits\u0026quot;, title:\u0026quot;Speed Racer\u0026quot;, released:2008}}, {_id:129, properties:{tagline:\u0026quot;Prepare to enter a secret world of assassins\u0026quot;, title:\u0026quot;Ninja Assassin\u0026quot;, released:2009}}, {_id:131, properties:{tagline:\u0026quot;Walk a mile you\u0027ll never forget.\u0026quot;, title:\u0026quot;The Green Mile\u0026quot;, released:1999}}, {_id:138, properties:{tagline:\u0026quot;400 million people were waiting for the truth.\u0026quot;, title:\u0026quot;Frost/Nixon\u0026quot;, released:2008}}, {_id:142, properties:{tagline:\u0026quot;He didn\u0027t want law. He wanted justice.\u0026quot;, title:\u0026quot;Hoffa\u0026quot;, released:1992}}, {_id:145, properties:{tagline:\u0026quot;Houston, we have a problem.\u0026quot;, title:\u0026quot;Apollo 13\u0026quot;, released:1995}}, {_id:148, properties:{tagline:\u0026quot;Don\u0027t Breathe. Don\u0027t Look Back.\u0026quot;, title:\u0026quot;Twister\u0026quot;, released:1996}}, {_id:151, properties:{tagline:\u0026quot;At the edge of the world, his journey begins.\u0026quot;, title:\u0026quot;Cast Away\u0026quot;, released:2000}}, {_id:153, properties:{tagline:\u0026quot;If he\u0027s crazy, what does that make you?\u0026quot;, title:\u0026quot;One Flew Over the Cuckoo\u0027s Nest\u0026quot;, released:1975}}, {_id:155, properties:{title:\u0026quot;Something\u0027s Gotta Give\u0026quot;, released:2003}}, {_id:158, properties:{tagline:\u0026quot;One robot\u0027s 200 year journey to become an ordinary man.\u0026quot;, title:\u0026quot;Bicentennial Man\u0026quot;, released:1999}}, {_id:160, properties:{tagline:\u0026quot;A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\u0026quot;, title:\u0026quot;Charlie Wilson\u0027s War\u0026quot;, released:2007}}, {_id:162, properties:{tagline:\u0026quot;This Holiday Season... Believe\u0026quot;, title:\u0026quot;The Polar Express\u0026quot;, released:2004}}, {_id:163, properties:{tagline:\u0026quot;Once in a lifetime you get a chance to do something different.\u0026quot;, title:\u0026quot;A League of Their Own\u0026quot;, released:1992}}] AS row\nMERGE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) ON CREATE SET n +\u003d row.properties SET n:Movie;\n\n\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:93}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:96}, properties:{}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{}}, {start: {name:\u0026quot;Robert Longo\u0026quot;}, end: {_id:101}, properties:{}}, {start: {name:\u0026quot;Tom Tykwer\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:106}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:112}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:117}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:122}, properties:{}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:129}, properties:{}}, {start: {name:\u0026quot;Frank Darabont\u0026quot;}, end: {_id:131}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:138}, properties:{}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{}}, {start: {name:\u0026quot;Ron Howard\u0026quot;}, end: {_id:145}, properties:{}}, {start: {name:\u0026quot;Jan de Bont\u0026quot;}, end: {_id:148}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:151}, properties:{}}, {start: {name:\u0026quot;Milos Forman\u0026quot;}, end: {_id:153}, properties:{}}, {start: {name:\u0026quot;Nancy Meyers\u0026quot;}, end: {_id:155}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Chris Columbus\u0026quot;}, end: {_id:158}, properties:{}}, {start: {name:\u0026quot;Mike Nichols\u0026quot;}, end: {_id:160}, properties:{}}, {start: {name:\u0026quot;Robert Zemeckis\u0026quot;}, end: {_id:162}, properties:{}}, {start: {name:\u0026quot;Penny Marshall\u0026quot;}, end: {_id:163}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end)  SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;James Thompson\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Angela Scope\u0026quot;}, end: {name:\u0026quot;Jessica Thompson\u0026quot;}, properties:{}}, {start: {name:\u0026quot;Paul Blythe\u0026quot;}, end: {name:\u0026quot;Angela Scope\u0026quot;}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:Person{name: row.end.name})\nCREATE (start)-[r:FOLLOWS]-\u0026gt;(end)  SET r +\u003d row.properties;\n// ..\nUNWIND [{start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:106}, properties:{summary:\u0026quot;An amazing journey\u0026quot;, rating:95}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:88}, properties:{summary:\u0026quot;Silly, but fun\u0026quot;, rating:65}}, {start: {name:\u0026quot;James Thompson\u0026quot;}, end: {_id:88}, properties:{summary:\u0026quot;The coolest football movie ever\u0026quot;, rating:100}}, {start: {name:\u0026quot;Angela Scope\u0026quot;}, end: {_id:88}, properties:{summary:\u0026quot;Pretty funny at times\u0026quot;, rating:62}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:98}, properties:{summary:\u0026quot;Dark, but compelling\u0026quot;, rating:85}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:96}, properties:{summary:\u0026quot;Slapstick redeemed only by the Robin Williams and Gene Hackman\u0027s stellar performances\u0026quot;, rating:45}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:112}, properties:{summary:\u0026quot;A solid romp\u0026quot;, rating:68}}, {start: {name:\u0026quot;James Thompson\u0026quot;}, end: {_id:112}, properties:{summary:\u0026quot;Fun, but a little far fetched\u0026quot;, rating:65}}, {start: {name:\u0026quot;Jessica Thompson\u0026quot;}, end: {_id:38}, properties:{summary:\u0026quot;You had me at Jerry\u0026quot;, rating:92}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:REVIEWED]-\u0026gt;(end)  SET r +\u003d row.properties;\n:commit\n\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567584359_101443064",
      "id": "paragraph_1667567584359_101443064",
      "dateCreated": "2022-11-04 13:13:04.359",
      "dateStarted": "2022-11-10 22:21:12.592",
      "dateFinished": "2022-11-10 22:21:12.618",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nMATCH (person)-[r:ACTED_IN]-\u003e(movie)\nWITH collect(DISTINCT person) + collect(DISTINCT  movie) AS importNodes, collect(r) AS importRels\n\nCALL apoc.export.cypher.data(importNodes, importRels,\n  \"exportData.cypher\")\n  \n\nYIELD file, batches, source, format, nodes, relationships, properties, time, rows, batchSize\nRETURN file, batches, source, format, nodes, relationships, properties, time, rows, batchSize\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:18:06.067",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\n\"exportData.cypher\"\t1\t\"data: nodes(140), rels(172)\"\t\"cypher\"\t140\t172\t490\t33\t312\t20000\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667567825849_1440302535",
      "id": "paragraph_1667567825849_1440302535",
      "dateCreated": "2022-11-04 13:17:05.849",
      "dateStarted": "2022-11-04 13:18:06.086",
      "dateFinished": "2022-11-04 13:18:06.211",
      "status": "FINISHED"
    },
    {
      "text": "%md\n```\n:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n:begin\nUNWIND [{_id:131, properties:{tagline:\"Walk a mile you\u0027ll never forget.\", title:\"The Green Mile\", released:1999}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:151, properties:{tagline:\"At the edge of the world, his journey begins.\", title:\"Cast Away\", released:2000}}, {_id:148, properties:{tagline:\"Don\u0027t Breathe. Don\u0027t Look Back.\", title:\"Twister\", released:1996}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:112, properties:{tagline:\"Break The Codes\", title:\"The Da Vinci Code\", released:2006}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:129, properties:{tagline:\"Prepare to enter a secret world of assassins\", title:\"Ninja Assassin\", released:2009}}, {_id:153, properties:{tagline:\"If he\u0027s crazy, what does that make you?\", title:\"One Flew Over the Cuckoo\u0027s Nest\", released:1975}}, {_id:162, properties:{tagline:\"This Holiday Season... Believe\", title:\"The Polar Express\", released:2004}}, {_id:163, properties:{tagline:\"Once in a lifetime you get a chance to do something different.\", title:\"A League of Their Own\", released:1992}}, {_id:160, properties:{tagline:\"A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\", title:\"Charlie Wilson\u0027s War\", released:2007}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:158, properties:{tagline:\"One robot\u0027s 200 year journey to become an ordinary man.\", title:\"Bicentennial Man\", released:1999}}, {_id:155, properties:{title:\"Something\u0027s Gotta Give\", released:2003}}, {_id:98, properties:{tagline:\"It\u0027s a hell of a thing, killing a man\", title:\"Unforgiven\", released:1992}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:106, properties:{tagline:\"Everything is connected\", title:\"Cloud Atlas\", released:2012}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:122, properties:{tagline:\"Speed has no limits\", title:\"Speed Racer\", released:2008}}, {_id:138, properties:{tagline:\"400 million people were waiting for the truth.\", title:\"Frost/Nixon\", released:2008}}, {_id:117, properties:{tagline:\"Freedom! Forever!\", title:\"V for Vendetta\", released:2006}}, {_id:101, properties:{tagline:\"The hottest data on earth. In the coolest head in town\", title:\"Johnny Mnemonic\", released:1995}}, {_id:142, properties:{tagline:\"He didn\u0027t want law. He wanted justice.\", title:\"Hoffa\", released:1992}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:145, properties:{tagline:\"Houston, we have a problem.\", title:\"Apollo 13\", released:1995}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{name:\"Max von Sydow\", properties:{born:1929}}, {name:\"Kevin Bacon\", properties:{born:1958}}, {name:\"Parker Posey\", properties:{born:1968}}, {name:\"Robin Williams\", properties:{born:1951}}, {name:\"Greg Kinnear\", properties:{born:1963}}, {name:\"Richard Harris\", properties:{born:1930}}, {name:\"Rita Wilson\", properties:{born:1956}}, {name:\"Kiefer Sutherland\", properties:{born:1966}}, {name:\"Dave Chappelle\", properties:{born:1973}}, {name:\"Ethan Hawke\", properties:{born:1970}}, {name:\"Clint Eastwood\", properties:{born:1930}}, {name:\"Bill Pullman\", properties:{born:1953}}, {name:\"Annabella Sciorra\", properties:{born:1960}}, {name:\"Jack Nicholson\", properties:{born:1937}}, {name:\"Victor Garber\", properties:{born:1949}}, {name:\"Jonathan Lipnicki\", properties:{born:1996}}, {name:\"Christian Bale\", properties:{born:1974}}, {name:\"Marshall Bell\", properties:{born:1942}}, {name:\"Rick Yune\", properties:{born:1971}}, {name:\"Demi Moore\", properties:{born:1962}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Helen Hunt\", properties:{born:1963}}, {name:\"Steve Zahn\", properties:{born:1967}}, {name:\"Zach Grenier\", properties:{born:1954}}, {name:\"River Phoenix\", properties:{born:1970}}, {name:\"James Cromwell\", properties:{born:1940}}, {name:\"Tom Hanks\", properties:{born:1956}}, {name:\"Kevin Pollak\", properties:{born:1957}}, {name:\"Ice-T\", properties:{born:1958}}, {name:\"Corey Feldman\", properties:{born:1971}}, {name:\"Matthew Fox\", properties:{born:1966}}, {name:\"Bonnie Hunt\", properties:{born:1961}}, {name:\"Stephen Rea\", properties:{born:1946}}, {name:\"J.T. Walsh\", properties:{born:1943}}, {name:\"Wil Wheaton\", properties:{born:1972}}, {name:\"Christina Ricci\", properties:{born:1980}}, {name:\"Halle Berry\", properties:{born:1966}}, {name:\"Regina King\", properties:{born:1971}}, {name:\"Oliver Platt\", properties:{born:1960}}, {name:\"John Hurt\", properties:{born:1940}}, {name:\"James Marshall\", properties:{born:1967}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"John Cusack\", properties:{born:1966}}, {name:\"John Goodman\", properties:{born:1960}}, {name:\"Jim Broadbent\", properties:{born:1949}}, {name:\"Jerry O\u0027Connell\", properties:{born:1974}}, {name:\"Danny DeVito\", properties:{born:1944}}, {name:\"Anthony Edwards\", properties:{born:1962}}, {name:\"Kelly McGillis\", properties:{born:1957}}, {name:\"Ben Miles\", properties:{born:1967}}, {name:\"Susan Sarandon\", properties:{born:1946}}, {name:\"Noah Wyle\", properties:{born:1971}}, {name:\"Jay Mohr\", properties:{born:1970}}, {name:\"Takeshi Kitano\", properties:{born:1947}}, {name:\"Tom Skerritt\", properties:{born:1933}}, {name:\"John C. Reilly\", properties:{born:1965}}, {name:\"Val Kilmer\", properties:{born:1959}}, {name:\"Emile Hirsch\", properties:{born:1985}}, {name:\"Christopher Guest\", properties:{born:1948}}, {name:\"Michael Clarke Duncan\", properties:{born:1957}}, {name:\"Cuba Gooding Jr.\", properties:{born:1968}}, {name:\"Dina Meyer\", properties:{born:1968}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Ed Harris\", properties:{born:1950}}, {name:\"Meg Ryan\", properties:{born:1961}}, {name:\"Emil Eifrem\", properties:{born:1978}}, {name:\"David Morse\", properties:{born:1953}}, {name:\"Rain\", properties:{born:1982}}, {name:\"Paul Bettany\", properties:{born:1971}}, {name:\"Bill Paxton\", properties:{born:1955}}, {name:\"Bruno Kirby\", properties:{born:1949}}, {name:\"Aaron Sorkin\", properties:{born:1961}}, {name:\"Charlize Theron\", properties:{born:1975}}, {name:\"Renee Zellweger\", properties:{born:1969}}, {name:\"Natalie Portman\", properties:{born:1981}}, {name:\"Liv Tyler\", properties:{born:1977}}, {name:\"Naomie Harris\", properties:{}}, {name:\"Frank Langella\", properties:{born:1938}}, {name:\"Sam Rockwell\", properties:{born:1968}}, {name:\"Al Pacino\", properties:{born:1940}}, {name:\"Brooke Langton\", properties:{born:1970}}, {name:\"Kelly Preston\", properties:{born:1962}}, {name:\"Ian McKellen\", properties:{born:1939}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Michael Sheen\", properties:{born:1969}}, {name:\"Geena Davis\", properties:{born:1956}}, {name:\"Tom Cruise\", properties:{born:1962}}, {name:\"Julia Roberts\", properties:{born:1967}}, {name:\"Audrey Tautou\", properties:{born:1976}}, {name:\"Gene Hackman\", properties:{born:1929}}, {name:\"Gary Sinise\", properties:{born:1955}}, {name:\"Lori Petty\", properties:{born:1963}}, {name:\"Laurence Fishburne\", properties:{children:[\"Naruto\", \"Sasuke\", \"Sakura\"], born:1961}}, {name:\"Madonna\", properties:{born:1954}}, {name:\"Patricia Clarkson\", properties:{born:1959}}, {name:\"Orlando Jones\", properties:{born:1968}}, {name:\"Hugo Weaving\", properties:{born:1960}}, {name:\"Philip Seymour Hoffman\", properties:{born:1967}}, {name:\"Billy Crystal\", properties:{born:1948}}, {name:\"Giandomenico Fracchia\", properties:{born:1964}}, {name:\"Rosie O\u0027Donnell\", properties:{born:1962}}, {name:\"Werner Herzog\", properties:{born:1942}}, {name:\"Carrie Fisher\", properties:{born:1956}}, {name:\"Diane Keaton\", properties:{born:1946}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\"Carrie-Anne Moss\", properties:{children:[\"Al\", \"John\", \"Jack\"], born:1967}}, {name:\"Nathan Lane\", properties:{born:1956}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\n:commit\n:begin\nUNWIND [{start: {name:\"Tom Hanks\"}, end: {_id:162}, properties:{roles:[\"Hero Boy\", \"Father\", \"Conductor\", \"Hobo\", \"Scrooge\", \"Santa Claus\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:30}, properties:{roles:[\"Maverick\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:68}, properties:{roles:[\"Joe Fox\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:88}, properties:{roles:[\"Jimmy McGinty\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:12}, properties:{roles:[\"Kevin Lomax\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:151}, properties:{roles:[\"Chuck Noland\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:57}, properties:{roles:[\"Chris Nielsen\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:160}, properties:{roles:[\"Rep. Charlie Wilson\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:74}, properties:{roles:[\"Annie Reed\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:163}, properties:{roles:[\"Jimmy Dugan\"]}}, {start: {name:\"Orlando Jones\"}, end: {_id:88}, properties:{roles:[\"Clifford Franklin\"]}}, {start: {name:\"Kelly McGillis\"}, end: {_id:30}, properties:{roles:[\"Charlie\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:68}, properties:{roles:[\"Kathleen Kelly\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:12}, properties:{roles:[\"Mary Ann Lomax\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:151}, properties:{roles:[\"Kelly Frears\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:57}, properties:{roles:[\"Albert Lewis\"]}}, {start: {name:\"Julia Roberts\"}, end: {_id:160}, properties:{roles:[\"Joanne Herring\"]}}, {start: {name:\"Rita Wilson\"}, end: {_id:74}, properties:{roles:[\"Suzy\"]}}, {start: {name:\"Val Kilmer\"}, end: {_id:30}, properties:{roles:[\"Iceman\"]}}, {start: {name:\"Geena Davis\"}, end: {_id:163}, properties:{roles:[\"Dottie Hinson\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Marshall Bell\"}, end: {_id:93}, properties:{roles:[\"Admiral\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:68}, properties:{roles:[\"Frank Navasky\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:11}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Annabella Sciorra\"}, end: {_id:57}, properties:{roles:[\"Annie Collins-Nielsen\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:148}, properties:{roles:[\"Bill Harding\"]}}, {start: {name:\"Philip Seymour Hoffman\"}, end: {_id:160}, properties:{roles:[\"Gust Avrakotos\"]}}, {start: {name:\"Bill Pullman\"}, end: {_id:74}, properties:{roles:[\"Walter\"]}}, {start: {name:\"Anthony Edwards\"}, end: {_id:30}, properties:{roles:[\"Goose\"]}}, {start: {name:\"Lori Petty\"}, end: {_id:163}, properties:{roles:[\"Kit Keller\"]}}, {start: {name:\"Charlize Theron\"}, end: {_id:86}, properties:{roles:[\"Tina\"]}}, {start: {name:\"Parker Posey\"}, end: {_id:68}, properties:{roles:[\"Patricia Eden\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:148}, properties:{roles:[\"Dr. Jo Harding\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:11}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:57}, properties:{roles:[\"The Tracker\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:88}, properties:{roles:[\"Shane Falco\"]}}, {start: {name:\"Tom Skerritt\"}, end: {_id:30}, properties:{roles:[\"Viper\"]}}, {start: {name:\"Rosie O\u0027Donnell\"}, end: {_id:163}, properties:{roles:[\"Doris Murphy\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:158}, properties:{roles:[\"Andrew Marin\"]}}, {start: {name:\"Rick Yune\"}, end: {_id:63}, properties:{roles:[\"Kazuo Miyamoto\"]}}, {start: {name:\"Victor Garber\"}, end: {_id:74}, properties:{roles:[\"Greg\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Werner Herzog\"}, end: {_id:57}, properties:{roles:[\"The Face\"]}}, {start: {name:\"Zach Grenier\"}, end: {_id:148}, properties:{roles:[\"Eddie\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:30}, properties:{roles:[\"Carole\"]}}, {start: {name:\"Brooke Langton\"}, end: {_id:88}, properties:{roles:[\"Annabelle Farrell\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:11}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Madonna\"}, end: {_id:163}, properties:{roles:[\"\\\"All the Way\\\" Mae Mordabito\"]}}, {start: {name:\"Oliver Platt\"}, end: {_id:158}, properties:{roles:[\"Rupert Burns\"]}}, {start: {name:\"Max von Sydow\"}, end: {_id:63}, properties:{roles:[\"Nels Gudmundsson\"]}}, {start: {name:\"Ethan Hawke\"}, end: {_id:63}, properties:{roles:[\"Ishmael Chambers\"]}}, {start: {name:\"Dave Chappelle\"}, end: {_id:68}, properties:{roles:[\"Kevin Jackson\"]}}, {start: {name:\"Philip Seymour Hoffman\"}, end: {_id:148}, properties:{roles:[\"Dustin \\\"Dusty\\\" Davis\"]}}, {start: {name:\"Christopher Guest\"}, end: {_id:16}, properties:{roles:[\"Dr. Stone\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:163}, properties:{roles:[\"Bob Hinson\"]}}, {start: {name:\"Robin Williams\"}, end: {_id:96}, properties:{roles:[\"Armand Goldman\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:10}, properties:{roles:[\"Neo\"]}}, {start: {name:\"James Cromwell\"}, end: {_id:63}, properties:{roles:[\"Judge Fielding\"]}}, {start: {name:\"Demi Moore\"}, end: {_id:16}, properties:{roles:[\"Lt. Cdr. JoAnne Galloway\"]}}, {start: {name:\"Steve Zahn\"}, end: {_id:68}, properties:{roles:[\"George Pappas\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:53}, properties:{roles:[\"Melvin Udall\"]}}, {start: {name:\"Aaron Sorkin\"}, end: {_id:16}, properties:{roles:[\"Man in Bar\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Diane Keaton\"}, end: {_id:155}, properties:{roles:[\"Erica Barry\"]}}, {start: {name:\"Nathan Lane\"}, end: {_id:96}, properties:{roles:[\"Albert Goldman\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:10}, properties:{roles:[\"Trinity\"]}}, {start: {name:\"Audrey Tautou\"}, end: {_id:112}, properties:{roles:[\"Sophie Neveu\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:16}, properties:{roles:[\"Capt. Jack Ross\"]}}, {start: {name:\"David Morse\"}, end: {_id:131}, properties:{roles:[\"Brutus \\\"Brutal\\\" Howell\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:74}, properties:{roles:[\"Sam Baldwin\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:16}, properties:{roles:[\"Cpl. Carl Hammaker\"]}}, {start: {name:\"Helen Hunt\"}, end: {_id:53}, properties:{roles:[\"Carol Connelly\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:10}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:155}, properties:{roles:[\"Julian Mercer\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:96}, properties:{roles:[\"Sen. Kevin Keeley\"]}}, {start: {name:\"Paul Bettany\"}, end: {_id:112}, properties:{roles:[\"Silas\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:16}, properties:{roles:[\"Lt. Jonathan Kendrick\"]}}, {start: {name:\"Bonnie Hunt\"}, end: {_id:131}, properties:{roles:[\"Jan Edgecomb\"]}}, {start: {name:\"Kevin Pollak\"}, end: {_id:16}, properties:{roles:[\"Lt. Sam Weinberg\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:131}, properties:{roles:[\"Paul Edgecomb\"]}}, {start: {name:\"Greg Kinnear\"}, end: {_id:53}, properties:{roles:[\"Simon Bishop\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:10}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Christian Bale\"}, end: {_id:93}, properties:{roles:[\"Dieter Dengler\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Jack Nicholson\"}, end: {_id:153}, properties:{roles:[\"Randle McMurphy\"]}}, {start: {name:\"Noah Wyle\"}, end: {_id:16}, properties:{roles:[\"Cpl. Jeffrey Barnes\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:117}, properties:{roles:[\"V\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:16}, properties:{roles:[\"Lt. Col. Matthew Andrew Markinson\"]}}, {start: {name:\"Michael Clarke Duncan\"}, end: {_id:131}, properties:{roles:[\"John Coffey\"]}}, {start: {name:\"James Cromwell\"}, end: {_id:131}, properties:{roles:[\"Warden Hal Moores\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:53}, properties:{roles:[\"Frank Sachs\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:11}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Zach Grenier\"}, end: {_id:93}, properties:{roles:[\"Squad Leader\"]}}, {start: {name:\"Danny DeVito\"}, end: {_id:153}, properties:{roles:[\"Martini\"]}}, {start: {name:\"Al Pacino\"}, end: {_id:12}, properties:{roles:[\"John Milton\"]}}, {start: {name:\"James Marshall\"}, end: {_id:16}, properties:{roles:[\"Pfc. Louden Downey\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:112}, properties:{roles:[\"Dr. Robert Langdon\"]}}, {start: {name:\"Rick Yune\"}, end: {_id:129}, properties:{roles:[\"Takeshi\"]}}, {start: {name:\"Sam Rockwell\"}, end: {_id:131}, properties:{roles:[\"\\\"Wild Bill\\\" Wharton\"]}}, {start: {name:\"Steve Zahn\"}, end: {_id:93}, properties:{roles:[\"Duane\"]}}, {start: {name:\"Emil Eifrem\"}, end: {_id:1}, properties:{roles:[\"Emil\"]}}, {start: {name:\"John Cusack\"}, end: {_id:47}, properties:{roles:[\"Denny Lachance\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:16}, properties:{roles:[\"Lt. Daniel Kaffee\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:155}, properties:{roles:[\"Harry Sanborn\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Jonathan Lipnicki\"}, end: {_id:38}, properties:{roles:[\"Ray Boyd\"]}}, {start: {name:\"Ian McKellen\"}, end: {_id:112}, properties:{roles:[\"Sir Leight Teabing\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:129}, properties:{roles:[\"Ryan Maslow\"]}}, {start: {name:\"Gary Sinise\"}, end: {_id:131}, properties:{roles:[\"Burt Hammersmith\"]}}, {start: {name:\"Wil Wheaton\"}, end: {_id:47}, properties:{roles:[\"Gordie Lachance\"]}}, {start: {name:\"Carrie Fisher\"}, end: {_id:82}, properties:{roles:[\"Marie\"]}}, {start: {name:\"Kiefer Sutherland\"}, end: {_id:47}, properties:{roles:[\"Ace Merrill\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:16}, properties:{roles:[\"Col. Nathan R. Jessup\"]}}, {start: {name:\"John C. Reilly\"}, end: {_id:142}, properties:{roles:[\"Peter \\\"Pete\\\" Connelly\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:1}, properties:{roles:[\"Neo\"]}}, {start: {name:\"Natalie Portman\"}, end: {_id:117}, properties:{roles:[\"Evey Hammond\"]}}, {start: {name:\"River Phoenix\"}, end: {_id:47}, properties:{roles:[\"Chris Chambers\"]}}, {start: {name:\"Patricia Clarkson\"}, end: {_id:131}, properties:{roles:[\"Melinda Moores\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:38}, properties:{roles:[\"Frank Cushman\"]}}, {start: {name:\"Bruno Kirby\"}, end: {_id:82}, properties:{roles:[\"Jess\"]}}, {start: {name:\"Marshall Bell\"}, end: {_id:47}, properties:{roles:[\"Mr. Lachance\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:145}, properties:{roles:[\"Jim Lovell\"]}}, {start: {name:\"Tom Cruise\"}, end: {_id:38}, properties:{roles:[\"Jerry Maguire\"]}}, {start: {name:\"Jerry O\u0027Connell\"}, end: {_id:47}, properties:{roles:[\"Vern Tessio\"]}}, {start: {name:\"Carrie-Anne Moss\"}, end: {_id:1}, properties:{roles:[\"Trinity\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Stephen Rea\"}, end: {_id:117}, properties:{roles:[\"Eric Finch\"]}}, {start: {name:\"Jay Mohr\"}, end: {_id:38}, properties:{roles:[\"Bob Sugar\"]}}, {start: {name:\"Frank Langella\"}, end: {_id:138}, properties:{roles:[\"Richard Nixon\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{roles:[\"Mr. White\"]}}, {start: {name:\"Corey Feldman\"}, end: {_id:47}, properties:{roles:[\"Teddy Duchamp\"]}}, {start: {name:\"Cuba Gooding Jr.\"}, end: {_id:38}, properties:{roles:[\"Rod Tidwell\"]}}, {start: {name:\"Laurence Fishburne\"}, end: {_id:1}, properties:{roles:[\"Morpheus\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:145}, properties:{roles:[\"Jack Swigert\"]}}, {start: {name:\"John Hurt\"}, end: {_id:117}, properties:{roles:[\"High Chancellor Adam Sutler\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:106}, properties:{roles:[\"Zachry\", \"Dr. Henry Goose\", \"Isaac Sachs\", \"Dermot Hoggins\"]}}, {start: {name:\"Bonnie Hunt\"}, end: {_id:38}, properties:{roles:[\"Laurel Boyd\"]}}, {start: {name:\"Susan Sarandon\"}, end: {_id:122}, properties:{roles:[\"Mom\"]}}, {start: {name:\"Liv Tyler\"}, end: {_id:86}, properties:{roles:[\"Faye Dolan\"]}}, {start: {name:\"Emile Hirsch\"}, end: {_id:122}, properties:{roles:[\"Speed Racer\"]}}, {start: {name:\"Renee Zellweger\"}, end: {_id:38}, properties:{roles:[\"Dorothy Boyd\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:1}, properties:{roles:[\"Agent Smith\"]}}, {start: {name:\"Hugo Weaving\"}, end: {_id:106}, properties:{roles:[\"Bill Smoke\", \"Haskell Moore\", \"Tadeusz Kesselring\", \"Nurse Noakes\", \"Boardman Mephi\", \"Old Georgie\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:117}, properties:{roles:[\"Dascomb\"]}}, {start: {name:\"Matthew Fox\"}, end: {_id:122}, properties:{roles:[\"Racer X\"]}}, {start: {name:\"Regina King\"}, end: {_id:38}, properties:{roles:[\"Marcee Tidwell\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Ed Harris\"}, end: {_id:145}, properties:{roles:[\"Gene Kranz\"]}}, {start: {name:\"Nathan Lane\"}, end: {_id:79}, properties:{roles:[\"Baw\"]}}, {start: {name:\"John Goodman\"}, end: {_id:122}, properties:{roles:[\"Pops\"]}}, {start: {name:\"Kelly Preston\"}, end: {_id:38}, properties:{roles:[\"Avery Bishop\"]}}, {start: {name:\"Jack Nicholson\"}, end: {_id:142}, properties:{roles:[\"Hoffa\"]}}, {start: {name:\"Halle Berry\"}, end: {_id:106}, properties:{roles:[\"Luisa Rey\", \"Jocasta Ayrs\", \"Ovid\", \"Meronym\"]}}, {start: {name:\"Rain\"}, end: {_id:129}, properties:{roles:[\"Raizo\"]}}, {start: {name:\"Rosie O\u0027Donnell\"}, end: {_id:74}, properties:{roles:[\"Becky\"]}}, {start: {name:\"Christina Ricci\"}, end: {_id:122}, properties:{roles:[\"Trixie\"]}}, {start: {name:\"Billy Crystal\"}, end: {_id:82}, properties:{roles:[\"Harry Burns\"]}}, {start: {name:\"Bill Paxton\"}, end: {_id:145}, properties:{roles:[\"Fred Haise\"]}}, {start: {name:\"Giandomenico Fracchia\"}, end: {_id:101}, properties:{roles:[\"Johnny Mnemonic\"]}}, {start: {name:\"Jim Broadbent\"}, end: {_id:106}, properties:{roles:[\"Vyvyan Ayrs\", \"Captain Molyneux\", \"Timothy Cavendish\"]}}, {start: {name:\"Danny DeVito\"}, end: {_id:142}, properties:{roles:[\"Robert \\\"Bobby\\\" Ciaro\"]}}, {start: {name:\"Michael Sheen\"}, end: {_id:138}, properties:{roles:[\"David Frost\"]}}, {start: {name:\"Naomie Harris\"}, end: {_id:129}, properties:{roles:[\"Mika Coretti\"]}}, {start: {name:\"Tom Hanks\"}, end: {_id:79}, properties:{roles:[\"Joe Banks\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:82}, properties:{roles:[\"Sally Albright\"]}}, {start: {name:\"Rain\"}, end: {_id:122}, properties:{roles:[\"Taejo Togokahn\"]}}, {start: {name:\"Takeshi Kitano\"}, end: {_id:101}, properties:{roles:[\"Takahashi\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\"Gary Sinise\"}, end: {_id:145}, properties:{roles:[\"Ken Mattingly\"]}}, {start: {name:\"Ben Miles\"}, end: {_id:122}, properties:{roles:[\"Cass Jones\"]}}, {start: {name:\"Richard Harris\"}, end: {_id:98}, properties:{roles:[\"English Bob\"]}}, {start: {name:\"J.T. Walsh\"}, end: {_id:142}, properties:{roles:[\"Frank Fitzsimmons\"]}}, {start: {name:\"Dina Meyer\"}, end: {_id:101}, properties:{roles:[\"Jane\"]}}, {start: {name:\"Kevin Bacon\"}, end: {_id:138}, properties:{roles:[\"Jack Brennan\"]}}, {start: {name:\"Meg Ryan\"}, end: {_id:79}, properties:{roles:[\"DeDe\", \"Angelica Graynamore\", \"Patricia Graynamore\"]}}, {start: {name:\"Ice-T\"}, end: {_id:101}, properties:{roles:[\"J-Bone\"]}}, {start: {name:\"Clint Eastwood\"}, end: {_id:98}, properties:{roles:[\"Bill Munny\"]}}, {start: {name:\"Oliver Platt\"}, end: {_id:138}, properties:{roles:[\"Bob Zelnick\"]}}, {start: {name:\"Sam Rockwell\"}, end: {_id:138}, properties:{roles:[\"James Reston, Jr.\"]}}, {start: {name:\"Gene Hackman\"}, end: {_id:98}, properties:{roles:[\"Little Bill Daggett\"]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u003e(end) SET r +\u003d row.properties;\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:18:52.126",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e:begin\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\nCALL db.awaitIndexes(300);\n:begin\nUNWIND [{_id:131, properties:{tagline:\u0026quot;Walk a mile you\u0027ll never forget.\u0026quot;, title:\u0026quot;The Green Mile\u0026quot;, released:1999}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:151, properties:{tagline:\u0026quot;At the edge of the world, his journey begins.\u0026quot;, title:\u0026quot;Cast Away\u0026quot;, released:2000}}, {_id:148, properties:{tagline:\u0026quot;Don\u0027t Breathe. Don\u0027t Look Back.\u0026quot;, title:\u0026quot;Twister\u0026quot;, released:1996}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:112, properties:{tagline:\u0026quot;Break The Codes\u0026quot;, title:\u0026quot;The Da Vinci Code\u0026quot;, released:2006}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:129, properties:{tagline:\u0026quot;Prepare to enter a secret world of assassins\u0026quot;, title:\u0026quot;Ninja Assassin\u0026quot;, released:2009}}, {_id:153, properties:{tagline:\u0026quot;If he\u0027s crazy, what does that make you?\u0026quot;, title:\u0026quot;One Flew Over the Cuckoo\u0027s Nest\u0026quot;, released:1975}}, {_id:162, properties:{tagline:\u0026quot;This Holiday Season... Believe\u0026quot;, title:\u0026quot;The Polar Express\u0026quot;, released:2004}}, {_id:163, properties:{tagline:\u0026quot;Once in a lifetime you get a chance to do something different.\u0026quot;, title:\u0026quot;A League of Their Own\u0026quot;, released:1992}}, {_id:160, properties:{tagline:\u0026quot;A stiff drink. A little mascara. A lot of nerve. Who said they couldn\u0027t bring down the Soviet empire.\u0026quot;, title:\u0026quot;Charlie Wilson\u0027s War\u0026quot;, released:2007}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:158, properties:{tagline:\u0026quot;One robot\u0027s 200 year journey to become an ordinary man.\u0026quot;, title:\u0026quot;Bicentennial Man\u0026quot;, released:1999}}, {_id:155, properties:{title:\u0026quot;Something\u0027s Gotta Give\u0026quot;, released:2003}}, {_id:98, properties:{tagline:\u0026quot;It\u0027s a hell of a thing, killing a man\u0026quot;, title:\u0026quot;Unforgiven\u0026quot;, released:1992}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:106, properties:{tagline:\u0026quot;Everything is connected\u0026quot;, title:\u0026quot;Cloud Atlas\u0026quot;, released:2012}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:122, properties:{tagline:\u0026quot;Speed has no limits\u0026quot;, title:\u0026quot;Speed Racer\u0026quot;, released:2008}}, {_id:138, properties:{tagline:\u0026quot;400 million people were waiting for the truth.\u0026quot;, title:\u0026quot;Frost/Nixon\u0026quot;, released:2008}}, {_id:117, properties:{tagline:\u0026quot;Freedom! Forever!\u0026quot;, title:\u0026quot;V for Vendetta\u0026quot;, released:2006}}, {_id:101, properties:{tagline:\u0026quot;The hottest data on earth. In the coolest head in town\u0026quot;, title:\u0026quot;Johnny Mnemonic\u0026quot;, released:1995}}, {_id:142, properties:{tagline:\u0026quot;He didn\u0027t want law. He wanted justice.\u0026quot;, title:\u0026quot;Hoffa\u0026quot;, released:1992}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:145, properties:{tagline:\u0026quot;Houston, we have a problem.\u0026quot;, title:\u0026quot;Apollo 13\u0026quot;, released:1995}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{name:\u0026quot;Max von Sydow\u0026quot;, properties:{born:1929}}, {name:\u0026quot;Kevin Bacon\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Parker Posey\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Robin Williams\u0026quot;, properties:{born:1951}}, {name:\u0026quot;Greg Kinnear\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Richard Harris\u0026quot;, properties:{born:1930}}, {name:\u0026quot;Rita Wilson\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Kiefer Sutherland\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Dave Chappelle\u0026quot;, properties:{born:1973}}, {name:\u0026quot;Ethan Hawke\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Clint Eastwood\u0026quot;, properties:{born:1930}}, {name:\u0026quot;Bill Pullman\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Annabella Sciorra\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Jack Nicholson\u0026quot;, properties:{born:1937}}, {name:\u0026quot;Victor Garber\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Jonathan Lipnicki\u0026quot;, properties:{born:1996}}, {name:\u0026quot;Christian Bale\u0026quot;, properties:{born:1974}}, {name:\u0026quot;Marshall Bell\u0026quot;, properties:{born:1942}}, {name:\u0026quot;Rick Yune\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Demi Moore\u0026quot;, properties:{born:1962}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Helen Hunt\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Steve Zahn\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Zach Grenier\u0026quot;, properties:{born:1954}}, {name:\u0026quot;River Phoenix\u0026quot;, properties:{born:1970}}, {name:\u0026quot;James Cromwell\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Tom Hanks\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Kevin Pollak\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Ice-T\u0026quot;, properties:{born:1958}}, {name:\u0026quot;Corey Feldman\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Matthew Fox\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Bonnie Hunt\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Stephen Rea\u0026quot;, properties:{born:1946}}, {name:\u0026quot;J.T. Walsh\u0026quot;, properties:{born:1943}}, {name:\u0026quot;Wil Wheaton\u0026quot;, properties:{born:1972}}, {name:\u0026quot;Christina Ricci\u0026quot;, properties:{born:1980}}, {name:\u0026quot;Halle Berry\u0026quot;, properties:{born:1966}}, {name:\u0026quot;Regina King\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Oliver Platt\u0026quot;, properties:{born:1960}}, {name:\u0026quot;John Hurt\u0026quot;, properties:{born:1940}}, {name:\u0026quot;James Marshall\u0026quot;, properties:{born:1967}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;John Cusack\u0026quot;, properties:{born:1966}}, {name:\u0026quot;John Goodman\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Jim Broadbent\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Jerry O\u0027Connell\u0026quot;, properties:{born:1974}}, {name:\u0026quot;Danny DeVito\u0026quot;, properties:{born:1944}}, {name:\u0026quot;Anthony Edwards\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Kelly McGillis\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Ben Miles\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Susan Sarandon\u0026quot;, properties:{born:1946}}, {name:\u0026quot;Noah Wyle\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Jay Mohr\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Takeshi Kitano\u0026quot;, properties:{born:1947}}, {name:\u0026quot;Tom Skerritt\u0026quot;, properties:{born:1933}}, {name:\u0026quot;John C. Reilly\u0026quot;, properties:{born:1965}}, {name:\u0026quot;Val Kilmer\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Emile Hirsch\u0026quot;, properties:{born:1985}}, {name:\u0026quot;Christopher Guest\u0026quot;, properties:{born:1948}}, {name:\u0026quot;Michael Clarke Duncan\u0026quot;, properties:{born:1957}}, {name:\u0026quot;Cuba Gooding Jr.\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Dina Meyer\u0026quot;, properties:{born:1968}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Ed Harris\u0026quot;, properties:{born:1950}}, {name:\u0026quot;Meg Ryan\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Emil Eifrem\u0026quot;, properties:{born:1978}}, {name:\u0026quot;David Morse\u0026quot;, properties:{born:1953}}, {name:\u0026quot;Rain\u0026quot;, properties:{born:1982}}, {name:\u0026quot;Paul Bettany\u0026quot;, properties:{born:1971}}, {name:\u0026quot;Bill Paxton\u0026quot;, properties:{born:1955}}, {name:\u0026quot;Bruno Kirby\u0026quot;, properties:{born:1949}}, {name:\u0026quot;Aaron Sorkin\u0026quot;, properties:{born:1961}}, {name:\u0026quot;Charlize Theron\u0026quot;, properties:{born:1975}}, {name:\u0026quot;Renee Zellweger\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Natalie Portman\u0026quot;, properties:{born:1981}}, {name:\u0026quot;Liv Tyler\u0026quot;, properties:{born:1977}}, {name:\u0026quot;Naomie Harris\u0026quot;, properties:{}}, {name:\u0026quot;Frank Langella\u0026quot;, properties:{born:1938}}, {name:\u0026quot;Sam Rockwell\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Al Pacino\u0026quot;, properties:{born:1940}}, {name:\u0026quot;Brooke Langton\u0026quot;, properties:{born:1970}}, {name:\u0026quot;Kelly Preston\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Ian McKellen\u0026quot;, properties:{born:1939}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Michael Sheen\u0026quot;, properties:{born:1969}}, {name:\u0026quot;Geena Davis\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Tom Cruise\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Julia Roberts\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Audrey Tautou\u0026quot;, properties:{born:1976}}, {name:\u0026quot;Gene Hackman\u0026quot;, properties:{born:1929}}, {name:\u0026quot;Gary Sinise\u0026quot;, properties:{born:1955}}, {name:\u0026quot;Lori Petty\u0026quot;, properties:{born:1963}}, {name:\u0026quot;Laurence Fishburne\u0026quot;, properties:{children:[\u0026quot;Naruto\u0026quot;, \u0026quot;Sasuke\u0026quot;, \u0026quot;Sakura\u0026quot;], born:1961}}, {name:\u0026quot;Madonna\u0026quot;, properties:{born:1954}}, {name:\u0026quot;Patricia Clarkson\u0026quot;, properties:{born:1959}}, {name:\u0026quot;Orlando Jones\u0026quot;, properties:{born:1968}}, {name:\u0026quot;Hugo Weaving\u0026quot;, properties:{born:1960}}, {name:\u0026quot;Philip Seymour Hoffman\u0026quot;, properties:{born:1967}}, {name:\u0026quot;Billy Crystal\u0026quot;, properties:{born:1948}}, {name:\u0026quot;Giandomenico Fracchia\u0026quot;, properties:{born:1964}}, {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;, properties:{born:1962}}, {name:\u0026quot;Werner Herzog\u0026quot;, properties:{born:1942}}, {name:\u0026quot;Carrie Fisher\u0026quot;, properties:{born:1956}}, {name:\u0026quot;Diane Keaton\u0026quot;, properties:{born:1946}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\nUNWIND [{name:\u0026quot;Carrie-Anne Moss\u0026quot;, properties:{children:[\u0026quot;Al\u0026quot;, \u0026quot;John\u0026quot;, \u0026quot;Jack\u0026quot;], born:1967}}, {name:\u0026quot;Nathan Lane\u0026quot;, properties:{born:1956}}] AS row\nCREATE (n:Person{name: row.name}) SET n +\u003d row.properties;\n:commit\n:begin\nUNWIND [{start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:162}, properties:{roles:[\u0026quot;Hero Boy\u0026quot;, \u0026quot;Father\u0026quot;, \u0026quot;Conductor\u0026quot;, \u0026quot;Hobo\u0026quot;, \u0026quot;Scrooge\u0026quot;, \u0026quot;Santa Claus\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Maverick\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Joe Fox\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Jimmy McGinty\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Kevin Lomax\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:151}, properties:{roles:[\u0026quot;Chuck Noland\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Chris Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Rep. Charlie Wilson\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Annie Reed\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Jimmy Dugan\u0026quot;]}}, {start: {name:\u0026quot;Orlando Jones\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Clifford Franklin\u0026quot;]}}, {start: {name:\u0026quot;Kelly McGillis\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Charlie\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Kathleen Kelly\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;Mary Ann Lomax\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:151}, properties:{roles:[\u0026quot;Kelly Frears\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Albert Lewis\u0026quot;]}}, {start: {name:\u0026quot;Julia Roberts\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Joanne Herring\u0026quot;]}}, {start: {name:\u0026quot;Rita Wilson\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Suzy\u0026quot;]}}, {start: {name:\u0026quot;Val Kilmer\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Iceman\u0026quot;]}}, {start: {name:\u0026quot;Geena Davis\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Dottie Hinson\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Admiral\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Frank Navasky\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Annabella Sciorra\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;Annie Collins-Nielsen\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Bill Harding\u0026quot;]}}, {start: {name:\u0026quot;Philip Seymour Hoffman\u0026quot;}, end: {_id:160}, properties:{roles:[\u0026quot;Gust Avrakotos\u0026quot;]}}, {start: {name:\u0026quot;Bill Pullman\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Walter\u0026quot;]}}, {start: {name:\u0026quot;Anthony Edwards\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Goose\u0026quot;]}}, {start: {name:\u0026quot;Lori Petty\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Kit Keller\u0026quot;]}}, {start: {name:\u0026quot;Charlize Theron\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Tina\u0026quot;]}}, {start: {name:\u0026quot;Parker Posey\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Patricia Eden\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Dr. Jo Harding\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Tracker\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Shane Falco\u0026quot;]}}, {start: {name:\u0026quot;Tom Skerritt\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Viper\u0026quot;]}}, {start: {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Doris Murphy\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:158}, properties:{roles:[\u0026quot;Andrew Marin\u0026quot;]}}, {start: {name:\u0026quot;Rick Yune\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Kazuo Miyamoto\u0026quot;]}}, {start: {name:\u0026quot;Victor Garber\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Greg\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Werner Herzog\u0026quot;}, end: {_id:57}, properties:{roles:[\u0026quot;The Face\u0026quot;]}}, {start: {name:\u0026quot;Zach Grenier\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Eddie\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:30}, properties:{roles:[\u0026quot;Carole\u0026quot;]}}, {start: {name:\u0026quot;Brooke Langton\u0026quot;}, end: {_id:88}, properties:{roles:[\u0026quot;Annabelle Farrell\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Madonna\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;\\\u0026quot;All the Way\\\u0026quot; Mae Mordabito\u0026quot;]}}, {start: {name:\u0026quot;Oliver Platt\u0026quot;}, end: {_id:158}, properties:{roles:[\u0026quot;Rupert Burns\u0026quot;]}}, {start: {name:\u0026quot;Max von Sydow\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Nels Gudmundsson\u0026quot;]}}, {start: {name:\u0026quot;Ethan Hawke\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Ishmael Chambers\u0026quot;]}}, {start: {name:\u0026quot;Dave Chappelle\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;Kevin Jackson\u0026quot;]}}, {start: {name:\u0026quot;Philip Seymour Hoffman\u0026quot;}, end: {_id:148}, properties:{roles:[\u0026quot;Dustin \\\u0026quot;Dusty\\\u0026quot; Davis\u0026quot;]}}, {start: {name:\u0026quot;Christopher Guest\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Dr. Stone\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:163}, properties:{roles:[\u0026quot;Bob Hinson\u0026quot;]}}, {start: {name:\u0026quot;Robin Williams\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Armand Goldman\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;James Cromwell\u0026quot;}, end: {_id:63}, properties:{roles:[\u0026quot;Judge Fielding\u0026quot;]}}, {start: {name:\u0026quot;Demi Moore\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Cdr. JoAnne Galloway\u0026quot;]}}, {start: {name:\u0026quot;Steve Zahn\u0026quot;}, end: {_id:68}, properties:{roles:[\u0026quot;George Pappas\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Melvin Udall\u0026quot;]}}, {start: {name:\u0026quot;Aaron Sorkin\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Man in Bar\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Diane Keaton\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Erica Barry\u0026quot;]}}, {start: {name:\u0026quot;Nathan Lane\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Albert Goldman\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}, {start: {name:\u0026quot;Audrey Tautou\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Sophie Neveu\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Capt. Jack Ross\u0026quot;]}}, {start: {name:\u0026quot;David Morse\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Brutus \\\u0026quot;Brutal\\\u0026quot; Howell\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Sam Baldwin\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Carl Hammaker\u0026quot;]}}, {start: {name:\u0026quot;Helen Hunt\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Carol Connelly\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Julian Mercer\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:96}, properties:{roles:[\u0026quot;Sen. Kevin Keeley\u0026quot;]}}, {start: {name:\u0026quot;Paul Bettany\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Silas\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Jonathan Kendrick\u0026quot;]}}, {start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Jan Edgecomb\u0026quot;]}}, {start: {name:\u0026quot;Kevin Pollak\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Sam Weinberg\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Paul Edgecomb\u0026quot;]}}, {start: {name:\u0026quot;Greg Kinnear\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Simon Bishop\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:10}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Christian Bale\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Dieter Dengler\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:153}, properties:{roles:[\u0026quot;Randle McMurphy\u0026quot;]}}, {start: {name:\u0026quot;Noah Wyle\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Cpl. Jeffrey Barnes\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;V\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Col. Matthew Andrew Markinson\u0026quot;]}}, {start: {name:\u0026quot;Michael Clarke Duncan\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;John Coffey\u0026quot;]}}, {start: {name:\u0026quot;James Cromwell\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Warden Hal Moores\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:53}, properties:{roles:[\u0026quot;Frank Sachs\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:11}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Zach Grenier\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Squad Leader\u0026quot;]}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:153}, properties:{roles:[\u0026quot;Martini\u0026quot;]}}, {start: {name:\u0026quot;Al Pacino\u0026quot;}, end: {_id:12}, properties:{roles:[\u0026quot;John Milton\u0026quot;]}}, {start: {name:\u0026quot;James Marshall\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Pfc. Louden Downey\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Dr. Robert Langdon\u0026quot;]}}, {start: {name:\u0026quot;Rick Yune\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Takeshi\u0026quot;]}}, {start: {name:\u0026quot;Sam Rockwell\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;\\\u0026quot;Wild Bill\\\u0026quot; Wharton\u0026quot;]}}, {start: {name:\u0026quot;Steve Zahn\u0026quot;}, end: {_id:93}, properties:{roles:[\u0026quot;Duane\u0026quot;]}}, {start: {name:\u0026quot;Emil Eifrem\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Emil\u0026quot;]}}, {start: {name:\u0026quot;John Cusack\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Denny Lachance\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Lt. Daniel Kaffee\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:155}, properties:{roles:[\u0026quot;Harry Sanborn\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Jonathan Lipnicki\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Ray Boyd\u0026quot;]}}, {start: {name:\u0026quot;Ian McKellen\u0026quot;}, end: {_id:112}, properties:{roles:[\u0026quot;Sir Leight Teabing\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Ryan Maslow\u0026quot;]}}, {start: {name:\u0026quot;Gary Sinise\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Burt Hammersmith\u0026quot;]}}, {start: {name:\u0026quot;Wil Wheaton\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Gordie Lachance\u0026quot;]}}, {start: {name:\u0026quot;Carrie Fisher\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Marie\u0026quot;]}}, {start: {name:\u0026quot;Kiefer Sutherland\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Ace Merrill\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:16}, properties:{roles:[\u0026quot;Col. Nathan R. Jessup\u0026quot;]}}, {start: {name:\u0026quot;John C. Reilly\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Peter \\\u0026quot;Pete\\\u0026quot; Connelly\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Neo\u0026quot;]}}, {start: {name:\u0026quot;Natalie Portman\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Evey Hammond\u0026quot;]}}, {start: {name:\u0026quot;River Phoenix\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Chris Chambers\u0026quot;]}}, {start: {name:\u0026quot;Patricia Clarkson\u0026quot;}, end: {_id:131}, properties:{roles:[\u0026quot;Melinda Moores\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Frank Cushman\u0026quot;]}}, {start: {name:\u0026quot;Bruno Kirby\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Jess\u0026quot;]}}, {start: {name:\u0026quot;Marshall Bell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Mr. Lachance\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Jim Lovell\u0026quot;]}}, {start: {name:\u0026quot;Tom Cruise\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Jerry Maguire\u0026quot;]}}, {start: {name:\u0026quot;Jerry O\u0027Connell\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Vern Tessio\u0026quot;]}}, {start: {name:\u0026quot;Carrie-Anne Moss\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Trinity\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Stephen Rea\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Eric Finch\u0026quot;]}}, {start: {name:\u0026quot;Jay Mohr\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Bob Sugar\u0026quot;]}}, {start: {name:\u0026quot;Frank Langella\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Richard Nixon\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Mr. White\u0026quot;]}}, {start: {name:\u0026quot;Corey Feldman\u0026quot;}, end: {_id:47}, properties:{roles:[\u0026quot;Teddy Duchamp\u0026quot;]}}, {start: {name:\u0026quot;Cuba Gooding Jr.\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Rod Tidwell\u0026quot;]}}, {start: {name:\u0026quot;Laurence Fishburne\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Morpheus\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Jack Swigert\u0026quot;]}}, {start: {name:\u0026quot;John Hurt\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;High Chancellor Adam Sutler\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Zachry\u0026quot;, \u0026quot;Dr. Henry Goose\u0026quot;, \u0026quot;Isaac Sachs\u0026quot;, \u0026quot;Dermot Hoggins\u0026quot;]}}, {start: {name:\u0026quot;Bonnie Hunt\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Laurel Boyd\u0026quot;]}}, {start: {name:\u0026quot;Susan Sarandon\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Mom\u0026quot;]}}, {start: {name:\u0026quot;Liv Tyler\u0026quot;}, end: {_id:86}, properties:{roles:[\u0026quot;Faye Dolan\u0026quot;]}}, {start: {name:\u0026quot;Emile Hirsch\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Speed Racer\u0026quot;]}}, {start: {name:\u0026quot;Renee Zellweger\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Dorothy Boyd\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:1}, properties:{roles:[\u0026quot;Agent Smith\u0026quot;]}}, {start: {name:\u0026quot;Hugo Weaving\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Bill Smoke\u0026quot;, \u0026quot;Haskell Moore\u0026quot;, \u0026quot;Tadeusz Kesselring\u0026quot;, \u0026quot;Nurse Noakes\u0026quot;, \u0026quot;Boardman Mephi\u0026quot;, \u0026quot;Old Georgie\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:117}, properties:{roles:[\u0026quot;Dascomb\u0026quot;]}}, {start: {name:\u0026quot;Matthew Fox\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Racer X\u0026quot;]}}, {start: {name:\u0026quot;Regina King\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Marcee Tidwell\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Ed Harris\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Gene Kranz\u0026quot;]}}, {start: {name:\u0026quot;Nathan Lane\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;Baw\u0026quot;]}}, {start: {name:\u0026quot;John Goodman\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Pops\u0026quot;]}}, {start: {name:\u0026quot;Kelly Preston\u0026quot;}, end: {_id:38}, properties:{roles:[\u0026quot;Avery Bishop\u0026quot;]}}, {start: {name:\u0026quot;Jack Nicholson\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Hoffa\u0026quot;]}}, {start: {name:\u0026quot;Halle Berry\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Luisa Rey\u0026quot;, \u0026quot;Jocasta Ayrs\u0026quot;, \u0026quot;Ovid\u0026quot;, \u0026quot;Meronym\u0026quot;]}}, {start: {name:\u0026quot;Rain\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Raizo\u0026quot;]}}, {start: {name:\u0026quot;Rosie O\u0027Donnell\u0026quot;}, end: {_id:74}, properties:{roles:[\u0026quot;Becky\u0026quot;]}}, {start: {name:\u0026quot;Christina Ricci\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Trixie\u0026quot;]}}, {start: {name:\u0026quot;Billy Crystal\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Harry Burns\u0026quot;]}}, {start: {name:\u0026quot;Bill Paxton\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Fred Haise\u0026quot;]}}, {start: {name:\u0026quot;Giandomenico Fracchia\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Johnny Mnemonic\u0026quot;]}}, {start: {name:\u0026quot;Jim Broadbent\u0026quot;}, end: {_id:106}, properties:{roles:[\u0026quot;Vyvyan Ayrs\u0026quot;, \u0026quot;Captain Molyneux\u0026quot;, \u0026quot;Timothy Cavendish\u0026quot;]}}, {start: {name:\u0026quot;Danny DeVito\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Robert \\\u0026quot;Bobby\\\u0026quot; Ciaro\u0026quot;]}}, {start: {name:\u0026quot;Michael Sheen\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;David Frost\u0026quot;]}}, {start: {name:\u0026quot;Naomie Harris\u0026quot;}, end: {_id:129}, properties:{roles:[\u0026quot;Mika Coretti\u0026quot;]}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;Joe Banks\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:82}, properties:{roles:[\u0026quot;Sally Albright\u0026quot;]}}, {start: {name:\u0026quot;Rain\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Taejo Togokahn\u0026quot;]}}, {start: {name:\u0026quot;Takeshi Kitano\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Takahashi\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\nUNWIND [{start: {name:\u0026quot;Gary Sinise\u0026quot;}, end: {_id:145}, properties:{roles:[\u0026quot;Ken Mattingly\u0026quot;]}}, {start: {name:\u0026quot;Ben Miles\u0026quot;}, end: {_id:122}, properties:{roles:[\u0026quot;Cass Jones\u0026quot;]}}, {start: {name:\u0026quot;Richard Harris\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;English Bob\u0026quot;]}}, {start: {name:\u0026quot;J.T. Walsh\u0026quot;}, end: {_id:142}, properties:{roles:[\u0026quot;Frank Fitzsimmons\u0026quot;]}}, {start: {name:\u0026quot;Dina Meyer\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;Jane\u0026quot;]}}, {start: {name:\u0026quot;Kevin Bacon\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Jack Brennan\u0026quot;]}}, {start: {name:\u0026quot;Meg Ryan\u0026quot;}, end: {_id:79}, properties:{roles:[\u0026quot;DeDe\u0026quot;, \u0026quot;Angelica Graynamore\u0026quot;, \u0026quot;Patricia Graynamore\u0026quot;]}}, {start: {name:\u0026quot;Ice-T\u0026quot;}, end: {_id:101}, properties:{roles:[\u0026quot;J-Bone\u0026quot;]}}, {start: {name:\u0026quot;Clint Eastwood\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;Bill Munny\u0026quot;]}}, {start: {name:\u0026quot;Oliver Platt\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;Bob Zelnick\u0026quot;]}}, {start: {name:\u0026quot;Sam Rockwell\u0026quot;}, end: {_id:138}, properties:{roles:[\u0026quot;James Reston, Jr.\u0026quot;]}}, {start: {name:\u0026quot;Gene Hackman\u0026quot;}, end: {_id:98}, properties:{roles:[\u0026quot;Little Bill Daggett\u0026quot;]}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:ACTED_IN]-\u0026gt;(end) SET r +\u003d row.properties;\n:commit\n:begin\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\n:commit\n:begin\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n:commit\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972398580_194574309",
      "id": "paragraph_1666972398580_194574309",
      "dateCreated": "2022-10-28 15:53:18.582",
      "dateStarted": "2022-11-04 13:18:52.125",
      "dateFinished": "2022-11-04 13:18:52.154",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// object of {nodes: [listOfNodes], relationships: [listOfRelationships]}\n\nMATCH path \u003d (person:Person)-[r:PRODUCED]-\u003e(movie:Movie)\nWITH { nodes: collect(person) + collect(movie), relationships: collect(r) } as graph\nCALL apoc.export.cypher.graph(g, \"exportGraph.cypher\")\nYIELD file, nodes, relationships\nRETURN file, nodes, relationships;\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 20:46:55.496",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667568222786_2134536035",
      "id": "paragraph_1667568222786_2134536035",
      "dateCreated": "2022-11-04 13:23:42.786",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n// object of {nodes: [listOfNodes], relationships: [listOfRelationships]}\n\nMATCH path \u003d (person:Person)-[r:PRODUCED]-\u003e(movie:Movie)\nWITH collect(person) + collect(movie) as nodes, collect(r)  as rels\nCALL apoc.export.cypher.data(nodes, rels, \"exportData.cypher\")\nYIELD file, nodes, relationships\nRETURN file, nodes, relationships;\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 20:48:39.163",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972496852_1944280219",
      "id": "paragraph_1666972496852_1944280219",
      "dateCreated": "2022-10-28 15:54:56.852",
      "status": "READY"
    },
    {
      "text": "%neo4j\nCALL apoc.export.cypher.query(\"MATCH (n:Movie) WHERE n.released \u003e 1996 RETURN n\", \"exportQuery.cypher\", {})",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:22:59.728",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"exportQuery.cypher\"\t1\t\"statement: nodes(24), rels(0)\"\t\"cypher\"\t24\t0\t71\t14\t24\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668113227757_762252665",
      "id": "paragraph_1668113227757_762252665",
      "dateCreated": "2022-11-10 20:47:07.757",
      "dateStarted": "2022-11-10 22:22:59.756",
      "dateFinished": "2022-11-10 22:22:59.867",
      "status": "FINISHED"
    },
    {
      "title": "Separated files",
      "text": "%neo4j\nCALL apoc.export.cypher.all(\"myFile.cypher\", {format: \"plain\", separateFiles: true })",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:52:45.623",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"separated.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t270\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569194567_623600384",
      "id": "paragraph_1667569194567_623600384",
      "dateCreated": "2022-11-04 13:39:54.567",
      "dateStarted": "2022-11-04 13:51:52.808",
      "dateFinished": "2022-11-04 13:51:53.374",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`myFile.nodes.cypher`:\n```\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n```\n\n\n`myFile.relationships.cypher`:\n\n```\nUNWIND [{start: {name:\"Lilly Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:1}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:10}, properties:{}}, {start: {name:\"Lilly Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Lana Wachowski\"}, end: {_id:11}, properties:{}}, {start: {name:\"Taylor Hackford\"}, end: {_id:12}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:16}, properties:{}}, {start: {name:\"Tony Scott\"}, end: {_id:30}, properties:{}}, {start: {name:\"Cameron Crowe\"}, end: {_id:38}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:47}, properties:{}}, {start: {name:\"James L. Brooks\"}, end: {_id:53}, properties:{}}, {start: {name:\"Vincent Ward\"}, end: {_id:57}, properties:{}}, {start: {name:\"Scott Hicks\"}, end: {_id:63}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:68}, properties:{}}, {start: {name:\"Nora Ephron\"}, end: {_id:74}, properties:{}}, {start: {name:\"John Patrick Stanley\"}, end: {_id:79}, properties:{}}, {start: {name:\"Rob Reiner\"}, end: {_id:82}, properties:{}}, {start: {name:\"Tom Hanks\"}, end: {_id:86}, properties:{}}, {start: {name:\"Howard Deutch\"}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u003e(end) SET r +\u003d row.properties;\n\n// ...\n```\n\n`myFile.schema.cypher`:\n\n```\nCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n```\n\n`myFile.cleanup.cypher` to remove \"internal\" stuff:\n\n```\nMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 13:55:30.239",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003emyFile.nodes.cypher\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003emyFile.relationships.cypher\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUNWIND [{start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:1}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:10}, properties:{}}, {start: {name:\u0026quot;Lilly Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Lana Wachowski\u0026quot;}, end: {_id:11}, properties:{}}, {start: {name:\u0026quot;Taylor Hackford\u0026quot;}, end: {_id:12}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:16}, properties:{}}, {start: {name:\u0026quot;Tony Scott\u0026quot;}, end: {_id:30}, properties:{}}, {start: {name:\u0026quot;Cameron Crowe\u0026quot;}, end: {_id:38}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:47}, properties:{}}, {start: {name:\u0026quot;James L. Brooks\u0026quot;}, end: {_id:53}, properties:{}}, {start: {name:\u0026quot;Vincent Ward\u0026quot;}, end: {_id:57}, properties:{}}, {start: {name:\u0026quot;Scott Hicks\u0026quot;}, end: {_id:63}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:68}, properties:{}}, {start: {name:\u0026quot;Nora Ephron\u0026quot;}, end: {_id:74}, properties:{}}, {start: {name:\u0026quot;John Patrick Stanley\u0026quot;}, end: {_id:79}, properties:{}}, {start: {name:\u0026quot;Rob Reiner\u0026quot;}, end: {_id:82}, properties:{}}, {start: {name:\u0026quot;Tom Hanks\u0026quot;}, end: {_id:86}, properties:{}}, {start: {name:\u0026quot;Howard Deutch\u0026quot;}, end: {_id:88}, properties:{}}] AS row\nMATCH (start:Person{name: row.start.name})\nMATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})\nCREATE (start)-[r:DIRECTED]-\u0026gt;(end) SET r +\u003d row.properties;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003emyFile.schema.cypher\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCREATE INDEX ON :Movie(title);\nCREATE CONSTRAINT ON (node:Person) ASSERT (node.name) IS UNIQUE;\nCREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003emyFile.cleanup.cypher\u003c/code\u003e to remove \u0026ldquo;internal\u0026rdquo; stuff:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eMATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;\nDROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569249832_1330047333",
      "id": "paragraph_1667569249832_1330047333",
      "dateCreated": "2022-11-04 13:40:49.832",
      "dateStarted": "2022-11-04 13:55:30.239",
      "dateFinished": "2022-11-04 13:55:30.273",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### `useOptimizations` config\n\nIt\u0027s a map of `{type: \"\u003cTYPE\u003e\", unwindBatchSize: \u003cINTEGER\u003e}`,\nwhere TYPE can be \n- `NONE`\n- `UNWIND_BATCH` (default)\n- `UNWIND_BATCH_PARAMS`, which can be used only in combination with `format: \u0027CYPHER_SHELL\u0027 (default)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 02:07:29.123",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e\u003ccode\u003euseOptimizations\u003c/code\u003e config\u003c/h3\u003e\n\u003cp\u003eIt\u0026rsquo;s a map of \u003ccode\u003e{type: \u0026quot;\u0026lt;TYPE\u0026gt;\u0026quot;, unwindBatchSize: \u0026lt;INTEGER\u0026gt;}\u003c/code\u003e,\u003cbr /\u003e\nwhere TYPE can be\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNONE\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eUNWIND_BATCH\u003c/code\u003e (default)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eUNWIND_BATCH_PARAMS\u003c/code\u003e, which can be used only in combination with `format: \u0026lsquo;CYPHER_SHELL\u0026rsquo; (default)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569799866_872787664",
      "id": "paragraph_1667569799866_872787664",
      "dateCreated": "2022-11-04 13:49:59.866",
      "dateStarted": "2022-11-11 02:07:29.128",
      "dateFinished": "2022-11-11 02:07:29.145",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\"smallBatch.cypher\", {useOptimizations: {type: \"UNWIND_BATCH\", unwindBatchSize: 2}})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 01:25:23.760",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 154.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"smallBatch.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t216\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570538891_1844109034",
      "id": "paragraph_1667570538891_1844109034",
      "dateCreated": "2022-11-04 14:02:18.891",
      "dateStarted": "2022-11-04 14:02:47.750",
      "dateFinished": "2022-11-04 14:02:48.668",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\n```\n// ...\n\n\nUNWIND [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:23:34.971",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e// ...\n\n\nUNWIND [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\nUNWIND [{_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}] AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570551432_299927799",
      "id": "paragraph_1667570551432_299927799",
      "dateCreated": "2022-11-04 14:02:31.432",
      "dateStarted": "2022-11-10 22:23:34.972",
      "dateFinished": "2022-11-10 22:23:34.982",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\"unwindParams.cypher\", {useOptimizations: {type: \"UNWIND_BATCH_PARAMS\", unwindBatchSize: 20}})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:03:53.689",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"unwindParams.cypher\"\t1\t\"database: nodes(172), rels(253)\"\t\"cypher\"\t172\t253\t569\t71\t425\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570494533_1195233763",
      "id": "paragraph_1667570494533_1195233763",
      "dateCreated": "2022-11-04 14:01:34.544",
      "dateStarted": "2022-11-04 14:03:52.638",
      "dateFinished": "2022-11-04 14:03:52.818",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\n```\n// ...\n\n\n:param rows \u003d\u003e [{_id:0, properties:{tagline:\"My carpenter with 30 thousand lire did it better\", title:\"3 men and 1 leg\", released:0}}, {_id:1, properties:{tagline:\"Welcome to the Real World\", title:\"The Matrix\", released:1999}}, {_id:10, properties:{tagline:\"Free your mind\", title:\"The Matrix Reloaded\", released:2003}}, {_id:11, properties:{tagline:\"Everything that has a beginning has an end\", title:\"The Matrix Revolutions\", released:2003}}, {_id:12, properties:{tagline:\"Evil has its winning ways\", title:\"The Devil\u0027s Advocate\", released:1997}}, {_id:16, properties:{tagline:\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\", title:\"A Few Good Men\", released:1992}}, {_id:30, properties:{tagline:\"I feel the need, the need for speed.\", title:\"Top Gun\", released:1986}}, {_id:38, properties:{tagline:\"The rest of his life begins now.\", title:\"Jerry Maguire\", released:2000}}, {_id:47, properties:{tagline:\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\", title:\"Stand By Me\", released:1986}}, {_id:53, properties:{tagline:\"A comedy from the heart that goes for the throat.\", title:\"As Good as It Gets\", released:1997}}, {_id:57, properties:{tagline:\"After life there is more. The end is just the beginning.\", title:\"What Dreams May Come\", released:1998}}, {_id:63, properties:{tagline:\"First loves last. Forever.\", title:\"Snow Falling on Cedars\", released:1999}}, {_id:68, properties:{tagline:\"At odds in life... in love on-line.\", title:\"You\u0027ve Got Mail\", released:1998}}, {_id:74, properties:{tagline:\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\", title:\"Sleepless in Seattle\", released:1993}}, {_id:79, properties:{tagline:\"A story of love, lava and burning desire.\", title:\"Joe Versus the Volcano\", released:1990}}, {_id:82, properties:{tagline:\"Can two friends sleep together and still love each other in the morning?\", title:\"When Herry Met Sally\", released:1998}}, {_id:86, properties:{tagline:\"In every life there comes a time when that thing you dream becomes that thing you do\", title:\"That Thing You Do\", released:1996}}, {_id:88, properties:{tagline:\"Pain heals, Chicks dig scars... Glory lasts forever\", title:\"The Replacements\", released:2000}}, {_id:93, properties:{tagline:\"Based on the extraordinary true story of one man\u0027s fight for freedom\", title:\"RescueDawn\", released:2006}}, {_id:96, properties:{tagline:\"Come as you are\", title:\"The Birdcage\", released:1996}}]\nUNWIND $rows AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:04:49.960",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e// ...\n\n\n:param rows \u003d\u0026gt; [{_id:0, properties:{tagline:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;, title:\u0026quot;3 men and 1 leg\u0026quot;, released:0}}, {_id:1, properties:{tagline:\u0026quot;Welcome to the Real World\u0026quot;, title:\u0026quot;The Matrix\u0026quot;, released:1999}}, {_id:10, properties:{tagline:\u0026quot;Free your mind\u0026quot;, title:\u0026quot;The Matrix Reloaded\u0026quot;, released:2003}}, {_id:11, properties:{tagline:\u0026quot;Everything that has a beginning has an end\u0026quot;, title:\u0026quot;The Matrix Revolutions\u0026quot;, released:2003}}, {_id:12, properties:{tagline:\u0026quot;Evil has its winning ways\u0026quot;, title:\u0026quot;The Devil\u0027s Advocate\u0026quot;, released:1997}}, {_id:16, properties:{tagline:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;, title:\u0026quot;A Few Good Men\u0026quot;, released:1992}}, {_id:30, properties:{tagline:\u0026quot;I feel the need, the need for speed.\u0026quot;, title:\u0026quot;Top Gun\u0026quot;, released:1986}}, {_id:38, properties:{tagline:\u0026quot;The rest of his life begins now.\u0026quot;, title:\u0026quot;Jerry Maguire\u0026quot;, released:2000}}, {_id:47, properties:{tagline:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;, title:\u0026quot;Stand By Me\u0026quot;, released:1986}}, {_id:53, properties:{tagline:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;, title:\u0026quot;As Good as It Gets\u0026quot;, released:1997}}, {_id:57, properties:{tagline:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;, title:\u0026quot;What Dreams May Come\u0026quot;, released:1998}}, {_id:63, properties:{tagline:\u0026quot;First loves last. Forever.\u0026quot;, title:\u0026quot;Snow Falling on Cedars\u0026quot;, released:1999}}, {_id:68, properties:{tagline:\u0026quot;At odds in life... in love on-line.\u0026quot;, title:\u0026quot;You\u0027ve Got Mail\u0026quot;, released:1998}}, {_id:74, properties:{tagline:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;, title:\u0026quot;Sleepless in Seattle\u0026quot;, released:1993}}, {_id:79, properties:{tagline:\u0026quot;A story of love, lava and burning desire.\u0026quot;, title:\u0026quot;Joe Versus the Volcano\u0026quot;, released:1990}}, {_id:82, properties:{tagline:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;, title:\u0026quot;When Herry Met Sally\u0026quot;, released:1998}}, {_id:86, properties:{tagline:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;, title:\u0026quot;That Thing You Do\u0026quot;, released:1996}}, {_id:88, properties:{tagline:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;, title:\u0026quot;The Replacements\u0026quot;, released:2000}}, {_id:93, properties:{tagline:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;, title:\u0026quot;RescueDawn\u0026quot;, released:2006}}, {_id:96, properties:{tagline:\u0026quot;Come as you are\u0026quot;, title:\u0026quot;The Birdcage\u0026quot;, released:1996}}]\nUNWIND $rows AS row\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n +\u003d row.properties SET n:Movie;\n\n// ...\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570635346_1879487784",
      "id": "paragraph_1667570635346_1879487784",
      "dateCreated": "2022-11-04 14:03:55.346",
      "dateStarted": "2022-11-04 14:04:49.962",
      "dateFinished": "2022-11-04 14:04:49.977",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`awaitForIndexes`, default `300` --\u003e to configure the `CALL db.awaitIndexes(300);` with `cypher-shell`",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 20:51:48.896",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003eawaitForIndexes\u003c/code\u003e, default \u003ccode\u003e300\u003c/code\u003e \u0026ndash;\u0026gt; to configure the \u003ccode\u003eCALL db.awaitIndexes(300);\u003c/code\u003e with \u003ccode\u003ecypher-shell\u003c/code\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569326127_1174923313",
      "id": "paragraph_1667569326127_1174923313",
      "dateCreated": "2022-11-04 13:42:06.128",
      "dateStarted": "2022-11-10 20:51:48.897",
      "dateFinished": "2022-11-10 20:51:48.911",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`saveIndexNames` - boolean (default: false) - Save name indexes on export\n`saveConstraintNames` - boolean (default: false) - Save name constraints on export",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 20:52:00.722",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003esaveIndexNames\u003c/code\u003e - boolean (default: false) - Save name indexes on export\u003cbr /\u003e\n\u003ccode\u003esaveConstraintNames\u003c/code\u003e - boolean (default: false) - Save name constraints on export\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570754945_1668661910",
      "id": "paragraph_1667570754945_1668661910",
      "dateCreated": "2022-11-04 14:05:54.949",
      "dateStarted": "2022-11-10 20:52:00.723",
      "dateFinished": "2022-11-10 20:52:00.735",
      "status": "FINISHED"
    },
    {
      "title": "Multi rel with same type and prop name",
      "text": "%neo4j\n\ncreate (pers:Person {name: \u0027MyName\u0027})-[:WORKS_FOR {id: 1}]-\u003e(proj:Project {a: 1}),\n    (pers)-[:WORKS_FOR {id: 2}]-\u003e(proj),\n    (pers)-[:WORKS_FOR {id: 3}]-\u003e(proj),\n    (pers)-[:WORKS_FOR {id: 4}]-\u003e(proj),\n    (pers)-[:WORKS_FOR {id: 5}]-\u003e(proj)",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 02:08:15.980",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667571025895_1180819607",
      "id": "paragraph_1667571025895_1180819607",
      "dateCreated": "2022-11-04 14:10:25.896",
      "dateStarted": "2022-11-04 14:12:12.656",
      "dateFinished": "2022-11-04 14:12:13.069",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nIn these cases, if we export relationships via a MERGE clause, we must use the config {multipleRelationshipsWithType: true}, otherwise we cannot distinguish them, and a script would be exported which would create only one WORKS_FOR relationship.\nmultipleRelationshipsWithType\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:11:43.182",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667570844581_2018076500",
      "id": "paragraph_1667570844581_2018076500",
      "dateCreated": "2022-11-04 14:07:24.582",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.cypher.all(\"multiRels.cypher\", {multipleRelationshipsWithType: true})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:12:19.285",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 94.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "batches": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "cypherStatements": "string",
                      "nodeStatements": "string",
                      "relationshipStatements": "string",
                      "schemaStatements": "string",
                      "cleanupStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tbatches\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tcypherStatements\tnodeStatements\trelationshipStatements\tschemaStatements\tcleanupStatements\n\"multiRels.cypher\"\t1\t\"database: nodes(174), rels(258)\"\t\"cypher\"\t174\t258\t576\t69\t432\t20000\tNULL\tNULL\tNULL\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667571103259_1887398528",
      "id": "paragraph_1667571103259_1887398528",
      "dateCreated": "2022-11-04 14:11:43.259",
      "dateStarted": "2022-11-04 14:12:14.051",
      "dateFinished": "2022-11-04 14:12:14.219",
      "status": "FINISHED"
    },
    {
      "title": "Stream",
      "text": "%neo4j\n\n// common with all export procedures\n\n// note that the 2nd param., the file name, is null\n\nCALL apoc.export.cypher.query(\"match (n:Person)-[r]-(m) return n, r, m\", null, {stream: true}) yield cypherStatements",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:18:28.486",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "file0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "batches1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "source2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "format3",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "nodes4",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "relationships5",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "properties6",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "time7",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rows8",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "batchSize9",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "cypherStatements10",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "nodeStatements11",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0.0,
                          "direction": "asc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "relationshipStatements12",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "schemaStatements13",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "cleanupStatements14",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "cypherStatements": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667571130164_1446021177",
      "id": "paragraph_1667571130164_1446021177",
      "dateCreated": "2022-11-04 14:12:10.164",
      "dateStarted": "2022-11-04 14:17:44.754",
      "dateFinished": "2022-11-04 14:17:44.872",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Export JSON\n\n- apoc.export.json.all \n- apoc.export.json.data \n- apoc.export.json.graph \n- apoc.export.json.query\n\n\n\n### Configurations\n\n- writeNodeProperties (default true): to export properties too.\n- stream: like apoc.export.cypher\n- jsonFormat",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:24:49.683",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eExport JSON\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eapoc.export.json.all\u003c/li\u003e\n\u003cli\u003eapoc.export.json.data\u003c/li\u003e\n\u003cli\u003eapoc.export.json.graph\u003c/li\u003e\n\u003cli\u003eapoc.export.json.query\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eConfigurations\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ewriteNodeProperties (default true): to export properties too.\u003c/li\u003e\n\u003cli\u003estream: like apoc.export.cypher\u003c/li\u003e\n\u003cli\u003ejsonFormat\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972589884_123146020",
      "id": "paragraph_1666972589884_123146020",
      "dateCreated": "2022-10-28 15:56:29.884",
      "dateStarted": "2022-11-10 22:24:49.685",
      "dateFinished": "2022-11-10 22:24:49.703",
      "status": "FINISHED"
    },
    {
      "title": "Default export",
      "text": "%neo4j\nCALL apoc.export.json.all(\"all.json\")",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:35:26.693",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"all.json\"\t\"database: nodes(174), rels(258)\"\t\"json\"\t174\t258\t576\t863\t432\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667569120761_884733576",
      "id": "paragraph_1667569120761_884733576",
      "dateCreated": "2022-11-04 13:38:40.761",
      "dateStarted": "2022-11-04 14:35:18.847",
      "dateFinished": "2022-11-04 14:35:19.918",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n`id` is the internal id: \n```\n{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}}\n{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}}\n{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\"],\"properties\":{\"born\":1964,\"name\":\"Giandomenico Fracchia\"}}\n{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}}\n\n....\n\n{\"id\":\"0\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"1\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"2\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"3\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"4\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"5\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n{\"id\":\"6\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n\n\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:27:58.902",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003eid\u003c/code\u003e is the internal id:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;3 men and 1 leg\u0026quot;,\u0026quot;released\u0026quot;:0}}\n{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Welcome to the Real World\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix\u0026quot;,\u0026quot;released\u0026quot;:1999}}\n{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}}\n{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;children\u0026quot;:[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;],\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Carrie-Anne Moss\u0026quot;}}\n\n....\n\n{\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Neo\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Trinity\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Morpheus\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Agent Smith\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n{\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n{\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;PRODUCED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667572529770_465674145",
      "id": "paragraph_1667572529770_465674145",
      "dateCreated": "2022-11-04 14:35:29.771",
      "dateStarted": "2022-11-10 08:27:58.906",
      "dateFinished": "2022-11-10 08:27:58.924",
      "status": "FINISHED"
    },
    {
      "title": "Streaming",
      "text": "%neo4j\n// the output is in column data instead of cypherStatements\nCALL apoc.export.json.all(null, {stream: true}) yield data",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:27:54.208",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667572754717_857636997",
      "id": "paragraph_1667572754717_857636997",
      "dateCreated": "2022-11-04 14:39:14.720",
      "dateStarted": "2022-11-04 14:40:00.005",
      "dateFinished": "2022-11-04 14:40:00.149",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## `jsonFormat` config\n\n- `JSON_LINES` (default): follows [JSON lines convention](https://jsonlines.org/examples/). \n        Only this config can be used with `apoc.import.json`\n- `ARRAY_JSON`: the data will be exported as array of json:\n- `JSON`: the data will be exported as json with two (array) fields nodes and rels\n- `JSON_ID_AS_KEYS`\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:25:17.810",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ccode\u003ejsonFormat\u003c/code\u003e config\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eJSON_LINES\u003c/code\u003e (default): follows \u003ca href\u003d\"https://jsonlines.org/examples/\"\u003eJSON lines convention\u003c/a\u003e.\u003cbr /\u003e\nOnly this config can be used with \u003ccode\u003eapoc.import.json\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eARRAY_JSON\u003c/code\u003e: the data will be exported as array of json:\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eJSON\u003c/code\u003e: the data will be exported as json with two (array) fields nodes and rels\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eJSON_ID_AS_KEYS\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667572805052_1839291194",
      "id": "paragraph_1667572805052_1839291194",
      "dateCreated": "2022-11-04 14:40:05.052",
      "dateStarted": "2022-11-10 22:25:17.811",
      "dateFinished": "2022-11-10 22:25:17.822",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.json.all(\"arrayJson.json\", {jsonFormat: \"ARRAY_JSON\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:51:57.686",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"arrayJson.json\"\t\"database: nodes(174), rels(258)\"\t\"json\"\t174\t258\t576\t284\t432\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573010044_1768446048",
      "id": "paragraph_1667573010044_1768446048",
      "dateCreated": "2022-11-04 14:43:30.044",
      "dateStarted": "2022-11-04 14:51:55.711",
      "dateFinished": "2022-11-04 14:51:56.538",
      "status": "FINISHED"
    },
    {
      "text": "%md\n```\n[{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}},{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}},{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\"],\"properties\":{\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}},{\"type\":\"node\",\"id\":\"4\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Naruto\",\"Sasuke\",\"Sakura\"],\"born\":1961,\"name\":\"Laurence Fishburne\"}},{\"type\":\"node\",\"id\":\"5\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Hugo Weaving\"}},{\"type\":\"node\",\"id\":\"6\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Lilly Wachowski\"}},{\"type\":\"node\",\"id\":\"7\",\"labels\":[\"Person\"],\"properties\":{\"born\":1965,\"name\":\"Lana Wachowski\"}},{\"type\":\"node\",\"id\":\"8\",\"labels\":[\"Person\"],\"properties\":{\"born\":1952,\"name\":\"Franco e Ciccio\"}},{\"type\":\"node\",\"id\":\"9\",\"labels\":[\"Person\"],\"properties\":{\"born\":1978,\"name\":\"Emil Eifrem\"}},{\"type\":\"node\",\"id\":\"10\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Free your mind\",\"title\":\"The Matrix Reloaded\",\"released\":2003}},{\"type\":\"node\",\"id\":\"11\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Everything that has a beginning has an end\",\"title\":\"The Matrix Revolutions\",\"released\":2003}},{\"type\":\"node\",\"id\":\"12\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Evil has its winning ways\",\"title\":\"The Devil\u0027s Advocate\",\"released\":1997}},{\"type\":\"node\",\"id\":\"13\",\"labels\":[\"Person\"],\"properties\":{\"born\":1975,\"name\":\"Charlize Theron\"}},{\"type\":\"node\",\"id\":\"14\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"Al Pacino\"}},{\"type\":\"node\",\"id\":\"15\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Taylor Hackford\"}},{\"type\":\"node\",\"id\":\"16\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\",\"title\":\"A Few Good Men\",\"released\":1992}},{\"type\":\"node\",\"id\":\"17\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Tom Cruise\"}},{\"type\":\"node\",\"id\":\"18\",\"labels\":[\"Person\"],\"properties\":{\"born\":1937,\"name\":\"Jack Nicholson\"}},{\"type\":\"node\",\"id\":\"19\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Demi Moore\"}},{\"type\":\"node\",\"id\":\"20\",\"labels\":[\"Person\"],\"properties\":{\"born\":1958,\"name\":\"Kevin Bacon\"}},{\"type\":\"node\",\"id\":\"21\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"Kiefer Sutherland\"}},{\"type\":\"node\",\"id\":\"22\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Noah Wyle\"}},{\"type\":\"node\",\"id\":\"23\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Cuba Gooding Jr.\"}},{\"type\":\"node\",\"id\":\"24\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kevin Pollak\"}},{\"type\":\"node\",\"id\":\"25\",\"labels\":[\"Person\"],\"properties\":{\"born\":1943,\"name\":\"J.T. Walsh\"}},{\"type\":\"node\",\"id\":\"26\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"James Marshall\"}},{\"type\":\"node\",\"id\":\"27\",\"labels\":[\"Person\"],\"properties\":{\"born\":1948,\"name\":\"Christopher Guest\"}},{\"type\":\"node\",\"id\":\"28\",\"labels\":[\"Person\"],\"properties\":{\"born\":1947,\"name\":\"Rob Reiner\"}},{\"type\":\"node\",\"id\":\"29\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Aaron Sorkin\"}},{\"type\":\"node\",\"id\":\"30\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"I feel the need, the need for speed.\",\"title\":\"Top Gun\",\"released\":1986}},{\"type\":\"node\",\"id\":\"31\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kelly McGillis\"}},{\"type\":\"node\",\"id\":\"32\",\"labels\":[\"Person\"],\"properties\":{\"born\":1959,\"name\":\"Val Kilmer\"}},{\"type\":\"node\",\"id\":\"33\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Anthony Edwards\"}},{\"type\":\"node\",\"id\":\"34\",\"labels\":[\"Person\"],\"properties\":{\"born\":1933,\"name\":\"Tom Skerritt\"}},{\"type\":\"node\",\"id\":\"35\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Meg Ryan\"}},{\"type\":\"node\",\"id\":\"36\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Tony Scott\"}},{\"type\":\"node\",\"id\":\"37\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Jim Cash\"}},{\"type\":\"node\",\"id\":\"38\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"The rest of his life begins now.\",\"title\":\"Jerry Maguire\",\"released\":2000}},{\"type\":\"node\",\"id\":\"39\",\"labels\":[\"Person\"],\"properties\":{\"born\":1969,\"name\":\"Renee Zellweger\"}},{\"type\":\"node\",\"id\":\"40\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Kelly Preston\"}},{\"type\":\"node\",\"id\":\"41\",\"labels\":[\"Person\"],\"properties\":{\"born\":1974,\"name\":\"Jerry O\u0027Connell\"}},{\"type\":\"node\",\"id\":\"42\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Jay Mohr\"}},{\"type\":\"node\",\"id\":\"43\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Bonnie Hunt\"}},{\"type\":\"node\",\"id\":\"44\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Regina King\"}},{\"type\":\"node\",\"id\":\"45\",\"labels\":[\"Person\"],\"properties\":{\"born\":1996,\"name\":\"Jonathan Lipnicki\"}},{\"type\":\"node\",\"id\":\"46\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Cameron Crowe\"}},{\"type\":\"node\",\"id\":\"47\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\",\"title\":\"Stand By Me\",\"released\":1986}},{\"type\":\"node\",\"id\":\"48\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"River Phoenix\"}},{\"type\":\"node\",\"id\":\"49\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Corey Feldman\"}},{\"type\":\"node\",\"id\":\"50\",\"labels\":[\"Person\"],\"properties\":{\"born\":1972,\"name\":\"Wil Wheaton\"}},{\"type\":\"node\",\"id\":\"51\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"John Cusack\"}},{\"type\":\"node\",\"id\":\"52\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Marshall Bell\"}},{\"type\":\"node\",\"id\":\"53\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"A comedy from the heart that goes for the throat.\",\"title\":\"As Good as It Gets\",\"released\":1997}},{\"type\":\"node\",\"id\":\"54\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Helen Hunt\"}},{\"type\":\"node\",\"id\":\"55\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Greg Kinnear\"}},{\"type\":\"node\",\"id\":\"56\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James L. Brooks\"}},{\"type\":\"node\",\"id\":\"57\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"After life there is more. The end is just the beginning.\",\"title\":\"What Dreams May Come\",\"released\":1998}},{\"type\":\"node\",\"id\":\"58\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Annabella Sciorra\"}},{\"type\":\"node\",\"id\":\"59\",\"labels\":[\"Person\"],\"properties\":{\"born\":1929,\"name\":\"Max von Sydow\"}},{\"type\":\"node\",\"id\":\"60\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Werner Herzog\"}},{\"type\":\"node\",\"id\":\"61\",\"labels\":[\"Person\"],\"properties\":{\"born\":1951,\"name\":\"Robin Williams\"}},{\"type\":\"node\",\"id\":\"62\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Vincent Ward\"}},{\"type\":\"node\",\"id\":\"63\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"First loves last. Forever.\",\"title\":\"Snow Falling on Cedars\",\"released\":1999}},{\"type\":\"node\",\"id\":\"64\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Ethan Hawke\"}},{\"type\":\"node\",\"id\":\"65\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Rick Yune\"}},{\"type\":\"node\",\"id\":\"66\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James Cromwell\"}},{\"type\":\"node\",\"id\":\"67\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Scott Hicks\"}},{\"type\":\"node\",\"id\":\"68\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"At odds in life... in love on-line.\",\"title\":\"You\u0027ve Got Mail\",\"released\":1998}},{\"type\":\"node\",\"id\":\"69\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Parker Posey\"}},{\"type\":\"node\",\"id\":\"70\",\"labels\":[\"Person\"],\"properties\":{\"born\":1973,\"name\":\"Dave Chappelle\"}},{\"type\":\"node\",\"id\":\"71\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Steve Zahn\"}},{\"type\":\"node\",\"id\":\"72\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Tom Hanks\"}},{\"type\":\"node\",\"id\":\"73\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Nora Ephron\"}},{\"type\":\"node\",\"id\":\"74\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\",\"title\":\"Sleepless in Seattle\",\"released\":1993}},{\"type\":\"node\",\"id\":\"75\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Rita Wilson\"}},{\"type\":\"node\",\"id\":\"76\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Bill Pullman\"}},{\"type\":\"node\",\"id\":\"77\",\"labels\":[\"Person\"],\"properties\":{\"born\":1949,\"name\":\"Victor Garber\"}},{\"type\":\"node\",\"id\":\"78\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Rosie O\u0027Donnell\"}},{\"type\":\"node\",\"id\":\"79\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"A story of love, lava and burning desire.\",\"title\":\"Joe Versus the Volcano\",\"released\":1990}},{\"type\":\"node\",\"id\":\"80\",\"labels\":[\"Person\"],\"properties\":{\"born\":1950,\"name\":\"John Patrick Stanley\"}},{\"type\":\"node\",\"id\":\"81\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Nathan Lane\"}},{\"type\":\"node\",\"id\":\"82\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Can two friends sleep together and still love each other in the morning?\",\"title\":\"When Herry Met Sally\",\"released\":1998}},{\"type\":\"node\",\"id\":\"83\",\"labels\":[\"Person\"],\"properties\":{\"born\":1948,\"name\":\"Billy Crystal\"}},{\"type\":\"node\",\"id\":\"84\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Carrie Fisher\"}},{\"type\":\"node\",\"id\":\"85\",\"labels\":[\"Person\"],\"properties\":{\"born\":1949,\"name\":\"Bruno Kirby\"}},{\"type\":\"node\",\"id\":\"86\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"In every life there comes a time when that thing you dream becomes that thing you do\",\"title\":\"That Thing You Do\",\"released\":1996}},{\"type\":\"node\",\"id\":\"87\",\"labels\":[\"Person\"],\"properties\":{\"born\":1977,\"name\":\"Liv Tyler\"}},{\"type\":\"node\",\"id\":\"88\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Pain heals, Chicks dig scars... Glory lasts forever\",\"title\":\"The Replacements\",\"released\":2000}},{\"type\":\"node\",\"id\":\"89\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Brooke Langton\"}},{\"type\":\"node\",\"id\":\"90\",\"labels\":[\"Person\"],\"properties\":{\"born\":1929,\"name\":\"Gene Hackman\"}},{\"type\":\"node\",\"id\":\"91\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Orlando Jones\"}},{\"type\":\"node\",\"id\":\"92\",\"labels\":[\"Person\"],\"properties\":{\"born\":1950,\"name\":\"Howard Deutch\"}},{\"type\":\"node\",\"id\":\"93\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Based on the extraordinary true story of one man\u0027s fight for freedom\",\"title\":\"RescueDawn\",\"released\":2006}},{\"type\":\"node\",\"id\":\"94\",\"labels\":[\"Person\"],\"properties\":{\"born\":1974,\"name\":\"Christian Bale\"}},{\"type\":\"node\",\"id\":\"95\",\"labels\":[\"Person\"],\"properties\":{\"born\":1954,\"name\":\"Zach Grenier\"}},{\"type\":\"node\",\"id\":\"96\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Come as you are\",\"title\":\"The Birdcage\",\"released\":1996}},{\"type\":\"node\",\"id\":\"97\",\"labels\":[\"Person\"],\"properties\":{\"born\":1931,\"name\":\"Mike Nichols\"}},{\"type\":\"node\",\"id\":\"98\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"It\u0027s a hell of a thing, killing a man\",\"title\":\"Unforgiven\",\"released\":1992}},{\"type\":\"node\",\"id\":\"99\",\"labels\":[\"Person\"],\"properties\":{\"born\":1930,\"name\":\"Richard Harris\"}},{\"type\":\"node\",\"id\":\"100\",\"labels\":[\"Person\"],\"properties\":{\"born\":1930,\"name\":\"Clint Eastwood\"}},{\"type\":\"node\",\"id\":\"101\",\"labels\":[\"Movie\"],\"properties\":{\"\n\n....\n\n\n{\"id\":\"0\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"1\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"2\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}}\n\n...\n]\n\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:27:26.589",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e[{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;3 men and 1 leg\u0026quot;,\u0026quot;released\u0026quot;:0}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Welcome to the Real World\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix\u0026quot;,\u0026quot;released\u0026quot;:1999}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;children\u0026quot;:[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;],\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Carrie-Anne Moss\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;children\u0026quot;:[\u0026quot;Naruto\u0026quot;,\u0026quot;Sasuke\u0026quot;,\u0026quot;Sakura\u0026quot;],\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Laurence Fishburne\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1960,\u0026quot;name\u0026quot;:\u0026quot;Hugo Weaving\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Lilly Wachowski\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1965,\u0026quot;name\u0026quot;:\u0026quot;Lana Wachowski\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1952,\u0026quot;name\u0026quot;:\u0026quot;Franco e Ciccio\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;9\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1978,\u0026quot;name\u0026quot;:\u0026quot;Emil Eifrem\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Free your mind\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix Reloaded\u0026quot;,\u0026quot;released\u0026quot;:2003}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Everything that has a beginning has an end\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix Revolutions\u0026quot;,\u0026quot;released\u0026quot;:2003}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;12\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Evil has its winning ways\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Devil\u0027s Advocate\u0026quot;,\u0026quot;released\u0026quot;:1997}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;13\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1975,\u0026quot;name\u0026quot;:\u0026quot;Charlize Theron\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;14\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1940,\u0026quot;name\u0026quot;:\u0026quot;Al Pacino\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;15\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1944,\u0026quot;name\u0026quot;:\u0026quot;Taylor Hackford\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;16\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;A Few Good Men\u0026quot;,\u0026quot;released\u0026quot;:1992}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;17\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Tom Cruise\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;18\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1937,\u0026quot;name\u0026quot;:\u0026quot;Jack Nicholson\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;19\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Demi Moore\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;20\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1958,\u0026quot;name\u0026quot;:\u0026quot;Kevin Bacon\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;21\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1966,\u0026quot;name\u0026quot;:\u0026quot;Kiefer Sutherland\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;22\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Noah Wyle\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;23\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1968,\u0026quot;name\u0026quot;:\u0026quot;Cuba Gooding Jr.\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;24\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1957,\u0026quot;name\u0026quot;:\u0026quot;Kevin Pollak\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;25\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1943,\u0026quot;name\u0026quot;:\u0026quot;J.T. Walsh\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;26\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;James Marshall\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;27\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1948,\u0026quot;name\u0026quot;:\u0026quot;Christopher Guest\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;28\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1947,\u0026quot;name\u0026quot;:\u0026quot;Rob Reiner\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;29\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Aaron Sorkin\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;30\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;I feel the need, the need for speed.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Top Gun\u0026quot;,\u0026quot;released\u0026quot;:1986}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;31\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1957,\u0026quot;name\u0026quot;:\u0026quot;Kelly McGillis\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;32\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1959,\u0026quot;name\u0026quot;:\u0026quot;Val Kilmer\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;33\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Anthony Edwards\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;34\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1933,\u0026quot;name\u0026quot;:\u0026quot;Tom Skerritt\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;35\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Meg Ryan\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;36\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1944,\u0026quot;name\u0026quot;:\u0026quot;Tony Scott\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;37\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1941,\u0026quot;name\u0026quot;:\u0026quot;Jim Cash\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;38\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;The rest of his life begins now.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Jerry Maguire\u0026quot;,\u0026quot;released\u0026quot;:2000}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;39\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1969,\u0026quot;name\u0026quot;:\u0026quot;Renee Zellweger\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;40\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Kelly Preston\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;41\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1974,\u0026quot;name\u0026quot;:\u0026quot;Jerry O\u0027Connell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;42\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;Jay Mohr\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;43\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Bonnie Hunt\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;44\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Regina King\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;45\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1996,\u0026quot;name\u0026quot;:\u0026quot;Jonathan Lipnicki\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;46\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1957,\u0026quot;name\u0026quot;:\u0026quot;Cameron Crowe\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;47\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Stand By Me\u0026quot;,\u0026quot;released\u0026quot;:1986}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;48\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;River Phoenix\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;49\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Corey Feldman\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;50\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1972,\u0026quot;name\u0026quot;:\u0026quot;Wil Wheaton\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;51\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1966,\u0026quot;name\u0026quot;:\u0026quot;John Cusack\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;52\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1942,\u0026quot;name\u0026quot;:\u0026quot;Marshall Bell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;53\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;As Good as It Gets\u0026quot;,\u0026quot;released\u0026quot;:1997}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;54\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1963,\u0026quot;name\u0026quot;:\u0026quot;Helen Hunt\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;55\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1963,\u0026quot;name\u0026quot;:\u0026quot;Greg Kinnear\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;56\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1940,\u0026quot;name\u0026quot;:\u0026quot;James L. Brooks\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;57\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;What Dreams May Come\u0026quot;,\u0026quot;released\u0026quot;:1998}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;58\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1960,\u0026quot;name\u0026quot;:\u0026quot;Annabella Sciorra\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;59\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1929,\u0026quot;name\u0026quot;:\u0026quot;Max von Sydow\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;60\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1942,\u0026quot;name\u0026quot;:\u0026quot;Werner Herzog\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;61\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1951,\u0026quot;name\u0026quot;:\u0026quot;Robin Williams\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;62\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Vincent Ward\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;63\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;First loves last. Forever.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Snow Falling on Cedars\u0026quot;,\u0026quot;released\u0026quot;:1999}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;64\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;Ethan Hawke\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;65\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Rick Yune\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;66\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1940,\u0026quot;name\u0026quot;:\u0026quot;James Cromwell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;67\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1953,\u0026quot;name\u0026quot;:\u0026quot;Scott Hicks\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;68\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;At odds in life... in love on-line.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;You\u0027ve Got Mail\u0026quot;,\u0026quot;released\u0026quot;:1998}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;69\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1968,\u0026quot;name\u0026quot;:\u0026quot;Parker Posey\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;70\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1973,\u0026quot;name\u0026quot;:\u0026quot;Dave Chappelle\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;71\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Steve Zahn\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;72\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Tom Hanks\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;73\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1941,\u0026quot;name\u0026quot;:\u0026quot;Nora Ephron\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;74\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Sleepless in Seattle\u0026quot;,\u0026quot;released\u0026quot;:1993}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;75\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Rita Wilson\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;76\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1953,\u0026quot;name\u0026quot;:\u0026quot;Bill Pullman\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;77\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1949,\u0026quot;name\u0026quot;:\u0026quot;Victor Garber\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;78\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Rosie O\u0027Donnell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;79\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;A story of love, lava and burning desire.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Joe Versus the Volcano\u0026quot;,\u0026quot;released\u0026quot;:1990}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;80\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1950,\u0026quot;name\u0026quot;:\u0026quot;John Patrick Stanley\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;81\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Nathan Lane\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;82\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Can two friends sleep together and still love each other in the morning?\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;When Herry Met Sally\u0026quot;,\u0026quot;released\u0026quot;:1998}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;83\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1948,\u0026quot;name\u0026quot;:\u0026quot;Billy Crystal\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;84\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Carrie Fisher\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;85\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1949,\u0026quot;name\u0026quot;:\u0026quot;Bruno Kirby\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;86\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;In every life there comes a time when that thing you dream becomes that thing you do\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;That Thing You Do\u0026quot;,\u0026quot;released\u0026quot;:1996}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;87\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1977,\u0026quot;name\u0026quot;:\u0026quot;Liv Tyler\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;88\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Pain heals, Chicks dig scars... Glory lasts forever\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Replacements\u0026quot;,\u0026quot;released\u0026quot;:2000}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;89\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;Brooke Langton\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;90\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1929,\u0026quot;name\u0026quot;:\u0026quot;Gene Hackman\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;91\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1968,\u0026quot;name\u0026quot;:\u0026quot;Orlando Jones\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;92\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1950,\u0026quot;name\u0026quot;:\u0026quot;Howard Deutch\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;93\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Based on the extraordinary true story of one man\u0027s fight for freedom\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;RescueDawn\u0026quot;,\u0026quot;released\u0026quot;:2006}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;94\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1974,\u0026quot;name\u0026quot;:\u0026quot;Christian Bale\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;95\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1954,\u0026quot;name\u0026quot;:\u0026quot;Zach Grenier\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;96\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Come as you are\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Birdcage\u0026quot;,\u0026quot;released\u0026quot;:1996}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;97\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1931,\u0026quot;name\u0026quot;:\u0026quot;Mike Nichols\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;98\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;It\u0027s a hell of a thing, killing a man\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Unforgiven\u0026quot;,\u0026quot;released\u0026quot;:1992}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;99\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1930,\u0026quot;name\u0026quot;:\u0026quot;Richard Harris\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;100\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1930,\u0026quot;name\u0026quot;:\u0026quot;Clint Eastwood\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;101\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;\n\n....\n\n\n{\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Neo\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Trinity\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Morpheus\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}}\n\n...\n]\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573005494_1412837294",
      "id": "paragraph_1667573005494_1412837294",
      "dateCreated": "2022-11-04 14:43:25.494",
      "dateStarted": "2022-11-10 08:27:26.593",
      "dateFinished": "2022-11-10 08:27:26.618",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.export.json.all(\"Json.json\", {jsonFormat: \"JSON\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 14:52:53.033",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"Json.json\"\t\"database: nodes(174), rels(258)\"\t\"json\"\t174\t258\t576\t212\t432\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573334743_10395461",
      "id": "paragraph_1667573334743_10395461",
      "dateCreated": "2022-11-04 14:48:54.743",
      "dateStarted": "2022-11-04 14:52:51.583",
      "dateFinished": "2022-11-04 14:52:51.855",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nUseful to get easily only rels or nodes\n\n```\n{\"nodes\":[{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}},{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}},{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\"],\"properties\":{\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}},{\"type\":\"node\",\"id\":\"4\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Naruto\",\"Sasuke\",\"Sakura\"],\"born\":1961,\"name\":\"Laurence Fishburne\"}},{\"type\":\"node\",\"id\":\"5\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Hugo Weaving\"}},{\"type\":\"node\",\"id\":\"6\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Lilly Wachowski\"}},{\"type\":\"node\",\"id\":\"7\",\"labels\":[\"Person\"],\"properties\":{\"born\":1965,\"name\":\"Lana Wachowski\"}},{\"type\":\"node\",\"id\":\"8\",\"labels\":[\"Person\"],\"properties\":{\"born\":1952,\"name\":\"Franco e Ciccio\"}},{\"type\":\"node\",\"id\":\"9\",\"labels\":[\"Person\"],\"properties\":{\"born\":1978,\"name\":\"Emil Eifrem\"}},{\"type\":\"node\",\"id\":\"10\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Free your mind\",\"title\":\"The Matrix Reloaded\",\"released\":2003}},{\"type\":\"node\",\"id\":\"11\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Everything that has a beginning has an end\",\"title\":\"The Matrix Revolutions\",\"released\":2003}},{\"type\":\"node\",\"id\":\"12\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Evil has its winning ways\",\"title\":\"The Devil\u0027s Advocate\",\"released\":1997}},{\"type\":\"node\",\"id\":\"13\",\"labels\":[\"Person\"],\"properties\":{\"born\":1975,\"name\":\"Charlize Theron\"}},{\"type\":\"node\",\"id\":\"14\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"Al Pacino\"}},{\"type\":\"node\",\"id\":\"15\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Taylor Hackford\"}},{\"type\":\"node\",\"id\":\"16\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\",\"title\":\"A Few Good Men\",\"released\":1992}},{\"type\":\"node\",\"id\":\"17\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Tom Cruise\"}},{\"type\":\"node\",\"id\":\"18\",\"labels\":[\"Person\"],\"properties\":{\"born\":1937,\"name\":\"Jack Nicholson\"}},{\"type\":\"node\",\"id\":\"19\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Demi Moore\"}},{\"type\":\"node\",\"id\":\"20\",\"labels\":[\"Person\"],\"properties\":{\"born\":1958,\"name\":\"Kevin Bacon\"}},{\"type\":\"node\",\"id\":\"21\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"Kiefer Sutherland\"}},{\"type\":\"node\",\"id\":\"22\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Noah Wyle\"}},{\"type\":\"node\",\"id\":\"23\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Cuba Gooding Jr.\"}},{\"type\":\"node\",\"id\":\"24\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kevin Pollak\"}},{\"type\":\"node\",\"id\":\"25\",\"labels\":[\"Person\"],\"properties\":{\"born\":1943,\"name\":\"J.T. Walsh\"}},{\"type\":\"node\",\"id\":\"26\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"James Marshall\"}},{\"type\":\"node\",\"id\":\"27\",\"labels\":[\"Person\"],\"properties\":{\"born\":1948,\"name\":\"Christopher Guest\"}},{\"type\":\"node\",\"id\":\"28\",\"labels\":[\"Person\"],\"properties\":{\"born\":1947,\"name\":\"Rob Reiner\"}},{\"type\":\"node\",\"id\":\"29\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Aaron Sorkin\"}},{\"type\":\"node\",\"id\":\"30\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"I feel the need, the need for speed.\",\"title\":\"Top Gun\",\"released\":1986}},{\"type\":\"node\",\"id\":\"31\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Kelly McGillis\"}},{\"type\":\"node\",\"id\":\"32\",\"labels\":[\"Person\"],\"properties\":{\"born\":1959,\"name\":\"Val Kilmer\"}},{\"type\":\"node\",\"id\":\"33\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Anthony Edwards\"}},{\"type\":\"node\",\"id\":\"34\",\"labels\":[\"Person\"],\"properties\":{\"born\":1933,\"name\":\"Tom Skerritt\"}},{\"type\":\"node\",\"id\":\"35\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Meg Ryan\"}},{\"type\":\"node\",\"id\":\"36\",\"labels\":[\"Person\"],\"properties\":{\"born\":1944,\"name\":\"Tony Scott\"}},{\"type\":\"node\",\"id\":\"37\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Jim Cash\"}},{\"type\":\"node\",\"id\":\"38\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"The rest of his life begins now.\",\"title\":\"Jerry Maguire\",\"released\":2000}},{\"type\":\"node\",\"id\":\"39\",\"labels\":[\"Person\"],\"properties\":{\"born\":1969,\"name\":\"Renee Zellweger\"}},{\"type\":\"node\",\"id\":\"40\",\"labels\":[\"Person\"],\"properties\":{\"born\":1962,\"name\":\"Kelly Preston\"}},{\"type\":\"node\",\"id\":\"41\",\"labels\":[\"Person\"],\"properties\":{\"born\":1974,\"name\":\"Jerry O\u0027Connell\"}},{\"type\":\"node\",\"id\":\"42\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Jay Mohr\"}},{\"type\":\"node\",\"id\":\"43\",\"labels\":[\"Person\"],\"properties\":{\"born\":1961,\"name\":\"Bonnie Hunt\"}},{\"type\":\"node\",\"id\":\"44\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Regina King\"}},{\"type\":\"node\",\"id\":\"45\",\"labels\":[\"Person\"],\"properties\":{\"born\":1996,\"name\":\"Jonathan Lipnicki\"}},{\"type\":\"node\",\"id\":\"46\",\"labels\":[\"Person\"],\"properties\":{\"born\":1957,\"name\":\"Cameron Crowe\"}},{\"type\":\"node\",\"id\":\"47\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\",\"title\":\"Stand By Me\",\"released\":1986}},{\"type\":\"node\",\"id\":\"48\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"River Phoenix\"}},{\"type\":\"node\",\"id\":\"49\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Corey Feldman\"}},{\"type\":\"node\",\"id\":\"50\",\"labels\":[\"Person\"],\"properties\":{\"born\":1972,\"name\":\"Wil Wheaton\"}},{\"type\":\"node\",\"id\":\"51\",\"labels\":[\"Person\"],\"properties\":{\"born\":1966,\"name\":\"John Cusack\"}},{\"type\":\"node\",\"id\":\"52\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Marshall Bell\"}},{\"type\":\"node\",\"id\":\"53\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"A comedy from the heart that goes for the throat.\",\"title\":\"As Good as It Gets\",\"released\":1997}},{\"type\":\"node\",\"id\":\"54\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Helen Hunt\"}},{\"type\":\"node\",\"id\":\"55\",\"labels\":[\"Person\"],\"properties\":{\"born\":1963,\"name\":\"Greg Kinnear\"}},{\"type\":\"node\",\"id\":\"56\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James L. Brooks\"}},{\"type\":\"node\",\"id\":\"57\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"After life there is more. The end is just the beginning.\",\"title\":\"What Dreams May Come\",\"released\":1998}},{\"type\":\"node\",\"id\":\"58\",\"labels\":[\"Person\"],\"properties\":{\"born\":1960,\"name\":\"Annabella Sciorra\"}},{\"type\":\"node\",\"id\":\"59\",\"labels\":[\"Person\"],\"properties\":{\"born\":1929,\"name\":\"Max von Sydow\"}},{\"type\":\"node\",\"id\":\"60\",\"labels\":[\"Person\"],\"properties\":{\"born\":1942,\"name\":\"Werner Herzog\"}},{\"type\":\"node\",\"id\":\"61\",\"labels\":[\"Person\"],\"properties\":{\"born\":1951,\"name\":\"Robin Williams\"}},{\"type\":\"node\",\"id\":\"62\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Vincent Ward\"}},{\"type\":\"node\",\"id\":\"63\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"First loves last. Forever.\",\"title\":\"Snow Falling on Cedars\",\"released\":1999}},{\"type\":\"node\",\"id\":\"64\",\"labels\":[\"Person\"],\"properties\":{\"born\":1970,\"name\":\"Ethan Hawke\"}},{\"type\":\"node\",\"id\":\"65\",\"labels\":[\"Person\"],\"properties\":{\"born\":1971,\"name\":\"Rick Yune\"}},{\"type\":\"node\",\"id\":\"66\",\"labels\":[\"Person\"],\"properties\":{\"born\":1940,\"name\":\"James Cromwell\"}},{\"type\":\"node\",\"id\":\"67\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Scott Hicks\"}},{\"type\":\"node\",\"id\":\"68\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"At odds in life... in love on-line.\",\"title\":\"You\u0027ve Got Mail\",\"released\":1998}},{\"type\":\"node\",\"id\":\"69\",\"labels\":[\"Person\"],\"properties\":{\"born\":1968,\"name\":\"Parker Posey\"}},{\"type\":\"node\",\"id\":\"70\",\"labels\":[\"Person\"],\"properties\":{\"born\":1973,\"name\":\"Dave Chappelle\"}},{\"type\":\"node\",\"id\":\"71\",\"labels\":[\"Person\"],\"properties\":{\"born\":1967,\"name\":\"Steve Zahn\"}},{\"type\":\"node\",\"id\":\"72\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Tom Hanks\"}},{\"type\":\"node\",\"id\":\"73\",\"labels\":[\"Person\"],\"properties\":{\"born\":1941,\"name\":\"Nora Ephron\"}},{\"type\":\"node\",\"id\":\"74\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\",\"title\":\"Sleepless in Seattle\",\"released\":1993}},{\"type\":\"node\",\"id\":\"75\",\"labels\":[\"Person\"],\"properties\":{\"born\":1956,\"name\":\"Rita Wilson\"}},{\"type\":\"node\",\"id\":\"76\",\"labels\":[\"Person\"],\"properties\":{\"born\":1953,\"name\":\"Bill \n\n.....\n\n\"rels\":[{\"id\":\"0\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"1\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"2\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"3\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"4\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"5\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"6\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"7\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Emil\"]},\"start\":{\"id\":\"9\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"]}},{\"id\":\"8\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"9\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"10\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"11\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"12\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"13\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"14\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"10\",\"labels\":[\"Movie\"]}},{\"id\":\"15\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"16\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Trinity\"]},\"start\":{\"id\":\"3\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"17\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Morpheus\"]},\"start\":{\"id\":\"4\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"18\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Agent Smith\"]},\"start\":{\"id\":\"5\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"19\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"6\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"20\",\"type\":\"relationship\",\"label\":\"DIRECTED\",\"start\":{\"id\":\"7\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"21\",\"type\":\"relationship\",\"label\":\"PRODUCED\",\"start\":{\"id\":\"8\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"11\",\"labels\":[\"Movie\"]}},{\"id\":\"22\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Kevin Lomax\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\"]},\"end\":{\"id\":\"12\",\"labels\":[\"Movie\"]}},{\"id\":\"23\",\"type\":\"relationship\",\"label\":\"ACTED_IN\",\"prope\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:28:47.114",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eUseful to get easily only rels or nodes\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\u0026quot;nodes\u0026quot;:[{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;3 men and 1 leg\u0026quot;,\u0026quot;released\u0026quot;:0}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Welcome to the Real World\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix\u0026quot;,\u0026quot;released\u0026quot;:1999}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;children\u0026quot;:[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;],\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Carrie-Anne Moss\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;children\u0026quot;:[\u0026quot;Naruto\u0026quot;,\u0026quot;Sasuke\u0026quot;,\u0026quot;Sakura\u0026quot;],\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Laurence Fishburne\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1960,\u0026quot;name\u0026quot;:\u0026quot;Hugo Weaving\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Lilly Wachowski\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1965,\u0026quot;name\u0026quot;:\u0026quot;Lana Wachowski\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1952,\u0026quot;name\u0026quot;:\u0026quot;Franco e Ciccio\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;9\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1978,\u0026quot;name\u0026quot;:\u0026quot;Emil Eifrem\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Free your mind\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix Reloaded\u0026quot;,\u0026quot;released\u0026quot;:2003}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Everything that has a beginning has an end\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix Revolutions\u0026quot;,\u0026quot;released\u0026quot;:2003}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;12\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Evil has its winning ways\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Devil\u0027s Advocate\u0026quot;,\u0026quot;released\u0026quot;:1997}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;13\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1975,\u0026quot;name\u0026quot;:\u0026quot;Charlize Theron\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;14\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1940,\u0026quot;name\u0026quot;:\u0026quot;Al Pacino\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;15\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1944,\u0026quot;name\u0026quot;:\u0026quot;Taylor Hackford\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;16\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;In the heart of the nation\u0027s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;A Few Good Men\u0026quot;,\u0026quot;released\u0026quot;:1992}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;17\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Tom Cruise\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;18\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1937,\u0026quot;name\u0026quot;:\u0026quot;Jack Nicholson\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;19\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Demi Moore\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;20\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1958,\u0026quot;name\u0026quot;:\u0026quot;Kevin Bacon\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;21\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1966,\u0026quot;name\u0026quot;:\u0026quot;Kiefer Sutherland\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;22\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Noah Wyle\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;23\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1968,\u0026quot;name\u0026quot;:\u0026quot;Cuba Gooding Jr.\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;24\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1957,\u0026quot;name\u0026quot;:\u0026quot;Kevin Pollak\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;25\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1943,\u0026quot;name\u0026quot;:\u0026quot;J.T. Walsh\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;26\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;James Marshall\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;27\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1948,\u0026quot;name\u0026quot;:\u0026quot;Christopher Guest\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;28\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1947,\u0026quot;name\u0026quot;:\u0026quot;Rob Reiner\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;29\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Aaron Sorkin\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;30\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;I feel the need, the need for speed.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Top Gun\u0026quot;,\u0026quot;released\u0026quot;:1986}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;31\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1957,\u0026quot;name\u0026quot;:\u0026quot;Kelly McGillis\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;32\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1959,\u0026quot;name\u0026quot;:\u0026quot;Val Kilmer\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;33\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Anthony Edwards\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;34\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1933,\u0026quot;name\u0026quot;:\u0026quot;Tom Skerritt\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;35\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Meg Ryan\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;36\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1944,\u0026quot;name\u0026quot;:\u0026quot;Tony Scott\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;37\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1941,\u0026quot;name\u0026quot;:\u0026quot;Jim Cash\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;38\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;The rest of his life begins now.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Jerry Maguire\u0026quot;,\u0026quot;released\u0026quot;:2000}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;39\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1969,\u0026quot;name\u0026quot;:\u0026quot;Renee Zellweger\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;40\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1962,\u0026quot;name\u0026quot;:\u0026quot;Kelly Preston\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;41\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1974,\u0026quot;name\u0026quot;:\u0026quot;Jerry O\u0027Connell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;42\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;Jay Mohr\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;43\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1961,\u0026quot;name\u0026quot;:\u0026quot;Bonnie Hunt\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;44\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Regina King\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;45\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1996,\u0026quot;name\u0026quot;:\u0026quot;Jonathan Lipnicki\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;46\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1957,\u0026quot;name\u0026quot;:\u0026quot;Cameron Crowe\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;47\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;For some, it\u0027s the last real taste of innocence, and the first real taste of life. But for everyone, it\u0027s the time that memories are made of.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Stand By Me\u0026quot;,\u0026quot;released\u0026quot;:1986}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;48\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;River Phoenix\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;49\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Corey Feldman\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;50\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1972,\u0026quot;name\u0026quot;:\u0026quot;Wil Wheaton\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;51\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1966,\u0026quot;name\u0026quot;:\u0026quot;John Cusack\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;52\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1942,\u0026quot;name\u0026quot;:\u0026quot;Marshall Bell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;53\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;A comedy from the heart that goes for the throat.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;As Good as It Gets\u0026quot;,\u0026quot;released\u0026quot;:1997}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;54\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1963,\u0026quot;name\u0026quot;:\u0026quot;Helen Hunt\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;55\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1963,\u0026quot;name\u0026quot;:\u0026quot;Greg Kinnear\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;56\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1940,\u0026quot;name\u0026quot;:\u0026quot;James L. Brooks\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;57\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;After life there is more. The end is just the beginning.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;What Dreams May Come\u0026quot;,\u0026quot;released\u0026quot;:1998}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;58\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1960,\u0026quot;name\u0026quot;:\u0026quot;Annabella Sciorra\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;59\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1929,\u0026quot;name\u0026quot;:\u0026quot;Max von Sydow\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;60\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1942,\u0026quot;name\u0026quot;:\u0026quot;Werner Herzog\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;61\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1951,\u0026quot;name\u0026quot;:\u0026quot;Robin Williams\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;62\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Vincent Ward\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;63\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;First loves last. Forever.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Snow Falling on Cedars\u0026quot;,\u0026quot;released\u0026quot;:1999}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;64\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1970,\u0026quot;name\u0026quot;:\u0026quot;Ethan Hawke\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;65\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1971,\u0026quot;name\u0026quot;:\u0026quot;Rick Yune\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;66\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1940,\u0026quot;name\u0026quot;:\u0026quot;James Cromwell\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;67\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1953,\u0026quot;name\u0026quot;:\u0026quot;Scott Hicks\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;68\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;At odds in life... in love on-line.\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;You\u0027ve Got Mail\u0026quot;,\u0026quot;released\u0026quot;:1998}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;69\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1968,\u0026quot;name\u0026quot;:\u0026quot;Parker Posey\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;70\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1973,\u0026quot;name\u0026quot;:\u0026quot;Dave Chappelle\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;71\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Steve Zahn\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;72\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Tom Hanks\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;73\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1941,\u0026quot;name\u0026quot;:\u0026quot;Nora Ephron\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;74\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;Sleepless in Seattle\u0026quot;,\u0026quot;released\u0026quot;:1993}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;75\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1956,\u0026quot;name\u0026quot;:\u0026quot;Rita Wilson\u0026quot;}},{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;76\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;born\u0026quot;:1953,\u0026quot;name\u0026quot;:\u0026quot;Bill \n\n.....\n\n\u0026quot;rels\u0026quot;:[{\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Neo\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Trinity\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Morpheus\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Agent Smith\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;PRODUCED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Emil\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;9\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Neo\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;9\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Trinity\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Morpheus\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Agent Smith\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;12\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;13\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;14\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;PRODUCED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;10\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;15\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Neo\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;16\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Trinity\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;17\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Morpheus\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;4\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;18\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Agent Smith\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;5\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;19\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;6\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;20\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;DIRECTED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;7\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;21\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;PRODUCED\u0026quot;,\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;8\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;11\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;22\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Kevin Lomax\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;]},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;12\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;]}},{\u0026quot;id\u0026quot;:\u0026quot;23\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;prope\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573006781_1771474833",
      "id": "paragraph_1667573006781_1771474833",
      "dateCreated": "2022-11-04 14:43:26.782",
      "dateStarted": "2022-11-10 08:28:47.116",
      "dateFinished": "2022-11-10 08:28:47.136",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nCALL apoc.export.json.all(\"JsonIdKeys.json\", {jsonFormat: \"JSON_ID_AS_KEYS\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:45:36.647",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 174.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"JsonIdKeys.json\"\t\"database: nodes(172), rels(254)\"\t\"json\"\t172\t254\t571\t997\t426\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573338900_1990469062",
      "id": "paragraph_1667573338900_1990469062",
      "dateCreated": "2022-11-04 14:48:58.900",
      "dateStarted": "2022-11-10 08:29:00.521",
      "dateFinished": "2022-11-10 08:29:01.762",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nThe data will be exported as json with two (map) fields nodes and rels where the key is the neo4j internal id and the value is the graph entity value:\n\n```\n{\"nodes\":\n{\"0\":{\"type\":\"node\",\"id\":\"0\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"My carpenter with 30 thousand lire did it better\",\"title\":\"3 men and 1 leg\",\"released\":0}},\"1\":{\"type\":\"node\",\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}},\"2\":{\"type\":\"node\",\"id\":\"2\",\"labels\":[\"Person\",\"Trigger\"],\"properties\":{\"datetime\":\"2022-11-09T21:56:53.882Z\",\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},\"3\":{\"type\":\"node\",\"id\":\"3\",\"labels\":[\"Person\"],\"properties\":{\"children\":[\"Al\",\"John\",\"Jack\"],\"born\":1967,\"name\":\"Carrie-Anne Moss\"}}\n\n},\n\"rels\":\n{\"0\":{\"type\":\"relationship\",\"id\":\"0\",\"label\":\"ACTED_IN\",\"properties\":{\"roles\":[\"Neo\"]},\"start\":{\"id\":\"2\",\"labels\":[\"Person\",\"Trigger\"],\"properties\":{\"datetime\":\"2022-11-09T21:56:53.882Z\",\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},\"end\":{\"id\":\"1\",\"labels\":[\"Movie\"],\"properties\":{\"tagline\":\"Welcome to the Real World\",\"title\":\"The Matrix\",\"released\":1999}}},\"1\":{\"type\":\"relationship\",\"id\":\"1\",\"label\":\"SELF_REL\",\"properties\":{\"id\":666},\"start\":{\"id\":\"2\",\"labels\":[\"Person\",\"Trigger\"],\"properties\":{\"datetime\":\"2022-11-09T21:56:53.882Z\",\"born\":1964,\"name\":\"Giandomenico Fracchia\"}},\"end\":{\"id\":\"2\",\"labels\":[\"Person\",\"Trigger\"],\"properties\":{\"datetime\":\"2022-11-09T21:56:53.882Z\",\"born\":1964,\"name\":\"Giandomenico Fracchia\"}}}\n\n...\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 08:45:28.893",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe data will be exported as json with two (map) fields nodes and rels where the key is the neo4j internal id and the value is the graph entity value:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\u0026quot;nodes\u0026quot;:\n{\u0026quot;0\u0026quot;:{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;My carpenter with 30 thousand lire did it better\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;3 men and 1 leg\u0026quot;,\u0026quot;released\u0026quot;:0}},\u0026quot;1\u0026quot;:{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Welcome to the Real World\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix\u0026quot;,\u0026quot;released\u0026quot;:1999}},\u0026quot;2\u0026quot;:{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;,\u0026quot;Trigger\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;datetime\u0026quot;:\u0026quot;2022-11-09T21:56:53.882Z\u0026quot;,\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}},\u0026quot;3\u0026quot;:{\u0026quot;type\u0026quot;:\u0026quot;node\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;3\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;children\u0026quot;:[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;],\u0026quot;born\u0026quot;:1967,\u0026quot;name\u0026quot;:\u0026quot;Carrie-Anne Moss\u0026quot;}}\n\n},\n\u0026quot;rels\u0026quot;:\n{\u0026quot;0\u0026quot;:{\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;0\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;ACTED_IN\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;roles\u0026quot;:[\u0026quot;Neo\u0026quot;]},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;,\u0026quot;Trigger\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;datetime\u0026quot;:\u0026quot;2022-11-09T21:56:53.882Z\u0026quot;,\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Movie\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;tagline\u0026quot;:\u0026quot;Welcome to the Real World\u0026quot;,\u0026quot;title\u0026quot;:\u0026quot;The Matrix\u0026quot;,\u0026quot;released\u0026quot;:1999}}},\u0026quot;1\u0026quot;:{\u0026quot;type\u0026quot;:\u0026quot;relationship\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;,\u0026quot;label\u0026quot;:\u0026quot;SELF_REL\u0026quot;,\u0026quot;properties\u0026quot;:{\u0026quot;id\u0026quot;:666},\u0026quot;start\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;,\u0026quot;Trigger\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;datetime\u0026quot;:\u0026quot;2022-11-09T21:56:53.882Z\u0026quot;,\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}},\u0026quot;end\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;2\u0026quot;,\u0026quot;labels\u0026quot;:[\u0026quot;Person\u0026quot;,\u0026quot;Trigger\u0026quot;],\u0026quot;properties\u0026quot;:{\u0026quot;datetime\u0026quot;:\u0026quot;2022-11-09T21:56:53.882Z\u0026quot;,\u0026quot;born\u0026quot;:1964,\u0026quot;name\u0026quot;:\u0026quot;Giandomenico Fracchia\u0026quot;}}}\n\n...\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667573007912_1960308685",
      "id": "paragraph_1667573007912_1960308685",
      "dateCreated": "2022-11-04 14:43:27.912",
      "dateStarted": "2022-11-10 08:45:28.893",
      "dateFinished": "2022-11-10 08:45:28.904",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Export GraphMl\n\nThe export GraphML procedures export data into a format that’s used by other tools like Gephi and CytoScape to read graph data.\n\nAll Point or Temporal data types are exported formatted as a String\n\ne.g:\n\nPoint 3d - `{\"crs\":\"wgs-84-3d\",\"latitude\":56.7,\"longitude\":12.78,\"height\":100.0}`\n\nPoint 2d - `{\"crs\":\"wgs-84-3d\",\"latitude\":56.7,\"longitude\":12.78,\"height\":null}`\n\nDate - `2018-10-10`\n\nLocalDateTime - `2018-10-10T00:00`\n\n\n- `apoc.export.graphml.all `\n- `apoc.export.graphml.data`\n- `apoc.export.graphml.graph` \n- `apoc.export.graphml.query`\n\n\n\n### Configurations\n\n- `useTypes`\n- `batchSize (default: 20000)`\n- `format` (default null) - can be \"gephi\" or \"tinkerpop\"\n- `separateFiles`",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:20:56.003",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eExport GraphMl\u003c/h2\u003e\n\u003cp\u003eThe export GraphML procedures export data into a format that’s used by other tools like Gephi and CytoScape to read graph data.\u003c/p\u003e\n\u003cp\u003eAll Point or Temporal data types are exported formatted as a String\u003c/p\u003e\n\u003cp\u003ee.g:\u003c/p\u003e\n\u003cp\u003ePoint 3d - \u003ccode\u003e{\u0026quot;crs\u0026quot;:\u0026quot;wgs-84-3d\u0026quot;,\u0026quot;latitude\u0026quot;:56.7,\u0026quot;longitude\u0026quot;:12.78,\u0026quot;height\u0026quot;:100.0}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ePoint 2d - \u003ccode\u003e{\u0026quot;crs\u0026quot;:\u0026quot;wgs-84-3d\u0026quot;,\u0026quot;latitude\u0026quot;:56.7,\u0026quot;longitude\u0026quot;:12.78,\u0026quot;height\u0026quot;:null}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eDate - \u003ccode\u003e2018-10-10\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eLocalDateTime - \u003ccode\u003e2018-10-10T00:00\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.graphml.all\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.graphml.data\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.graphml.graph\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.export.graphml.query\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eConfigurations\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ecaption\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003euseTypes\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebatchSize\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eformat\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eseparateFiles\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667574354036_142950248",
      "id": "paragraph_1667574354036_142950248",
      "dateCreated": "2022-11-04 15:05:54.036",
      "dateStarted": "2022-11-11 05:59:07.866",
      "dateFinished": "2022-11-11 05:59:07.889",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nCALL apoc.export.graphml.all(\"all.graphml\", {})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 05:54:06.349",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"all.graphml\"\t\"database: nodes(1535), rels(5702)\"\t\"graphml\"\t1535\t5702\t4499\t699\t7237\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575116855_1779681740",
      "id": "paragraph_1667575116855_1779681740",
      "dateCreated": "2022-11-04 15:18:36.855",
      "dateStarted": "2022-11-11 05:54:03.464",
      "dateFinished": "2022-11-11 05:54:04.614",
      "status": "FINISHED"
    },
    {
      "text": "%md\n```\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cgraphml xmlns\u003d\"http://graphml.graphdrawing.org/xmlns\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\"\u003e\n\u003ckey id\u003d\"_name\" for\u003d\"node\" attr.name\u003d\"_name\"/\u003e\n\u003ckey id\u003d\"born\" for\u003d\"node\" attr.name\u003d\"born\"/\u003e\n\u003ckey id\u003d\"title\" for\u003d\"node\" attr.name\u003d\"title\"/\u003e\n\u003ckey id\u003d\"url\" for\u003d\"node\" attr.name\u003d\"url\"/\u003e\n\u003ckey id\u003d\"labels\" for\u003d\"node\" attr.name\u003d\"labels\"/\u003e\n\u003ckey id\u003d\"startIndex\" for\u003d\"node\" attr.name\u003d\"startIndex\"/\u003e\n\u003ckey id\u003d\"children\" for\u003d\"node\" attr.name\u003d\"children\"/\u003e\n\u003ckey id\u003d\"_xmlEncoding\" for\u003d\"node\" attr.name\u003d\"_xmlEncoding\"/\u003e\n\u003ckey id\u003d\"endIndex\" for\u003d\"node\" attr.name\u003d\"endIndex\"/\u003e\n\u003ckey id\u003d\"name\" for\u003d\"node\" attr.name\u003d\"name\"/\u003e\n\u003ckey id\u003d\"tagline\" for\u003d\"node\" attr.name\u003d\"tagline\"/\u003e\n\u003ckey id\u003d\"_xmlVersion\" for\u003d\"node\" attr.name\u003d\"_xmlVersion\"/\u003e\n\u003ckey id\u003d\"text\" for\u003d\"node\" attr.name\u003d\"text\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"node\" attr.name\u003d\"id\"/\u003e\n\u003ckey id\u003d\"released\" for\u003d\"node\" attr.name\u003d\"released\"/\u003e\n\u003ckey id\u003d\"summary\" for\u003d\"edge\" attr.name\u003d\"summary\"/\u003e\n\u003ckey id\u003d\"roles\" for\u003d\"edge\" attr.name\u003d\"roles\"/\u003e\n\u003ckey id\u003d\"rating\" for\u003d\"edge\" attr.name\u003d\"rating\"/\u003e\n\u003ckey id\u003d\"label\" for\u003d\"edge\" attr.name\u003d\"label\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"edge\" attr.name\u003d\"id\"/\u003e\n\n\u003cgraph id\u003d\"G\" edgedefault\u003d\"directed\"\u003e\n\u003cnode id\u003d\"n0\" labels\u003d\":Movie\"\u003e\u003cdata key\u003d\"labels\"\u003e:Movie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003e3 men and 1 leg\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eMy carpenter with 30 thousand lire did it better\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e0\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n1\" labels\u003d\":Movie\"\u003e\u003cdata key\u003d\"labels\"\u003e:Movie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003eThe Matrix\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eWelcome to the Real World\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e1999\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n2\" labels\u003d\":Person\"\u003e\u003cdata key\u003d\"labels\"\u003e:Person\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eGiandomenico Fracchia\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1964\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n3\" labels\u003d\":Person\"\u003e\u003cdata key\u003d\"labels\"\u003e:Person\u003c/data\u003e\u003cdata key\u003d\"children\"\u003e[\"Al\",\"John\",\"Jack\"]\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eCarrie-Anne Moss\u003c/...\n\n...\n\n\n\u003cedge id\u003d\"e1829\" source\u003d\"n567\" target\u003d\"n513\" label\u003d\"IS_CHILD_OF\"\u003e\u003cdata key\u003d\"label\"\u003eIS_CHILD_OF\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1830\" source\u003d\"n566\" target\u003d\"n567\" label\u003d\"NEXT_SIBLING\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT_SIBLING\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1831\" source\u003d\"n566\" target\u003d\"n567\" label\u003d\"NEXT_WORD\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT_WORD\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1832\" source\u003d\"n567\" target\u003d\"n568\" label\u003d\"NEXT\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1833\" source\u003d\"n568\" target\u003d\"n513\" label\u003d\"IS_CHILD_OF\"\u003e\u003cdata key\u003d\"label\"\u003eIS_CHILD_OF\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1834\" source\u003d\"n567\" target\u003d\"n568\" label\u003d\"NEXT_SIBLING\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT_SIBLING\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1835\" source\u003d\"n567\" target\u003d\"n568\" label\u003d\"NEXT_WORD\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT_WORD\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1836\" source\u003d\"n568\" target\u003d\"n569\" label\u003d\"NEXT\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1837\" source\u003d\"n569\" target\u003d\"n513\" label\u003d\"IS_CHILD_OF\"\u003e\u003cdata key\u003d\"label\"\u003eIS_CHILD_OF\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e1838\" source\u003d\"n568\" target\u003d\"n569\" label\u003d\"NEXT_SIBLING\"\u003e\u003cdata key\u003d\"label\"\u003eNEXT_SIBLING\u003c/data\u003e\u003c/edge\u003e\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:05:34.807",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;graphml xmlns\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xsi:schemaLocation\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\u0026quot;\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_name\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;born\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;born\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;title\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;title\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;url\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;url\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;labels\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;labels\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;startIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;startIndex\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;children\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;children\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlEncoding\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlEncoding\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;endIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;endIndex\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;name\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;tagline\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;tagline\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlVersion\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlVersion\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;text\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;text\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;id\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;released\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;released\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;summary\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;summary\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;roles\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;roles\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;rating\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;rating\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;label\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;label\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;id\u0026quot;/\u0026gt;\n\n\u0026lt;graph id\u003d\u0026quot;G\u0026quot; edgedefault\u003d\u0026quot;directed\u0026quot;\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n0\u0026quot; labels\u003d\u0026quot;:Movie\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labels\u0026quot;\u0026gt;:Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;3 men and 1 leg\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;My carpenter with 30 thousand lire did it better\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;0\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n1\u0026quot; labels\u003d\u0026quot;:Movie\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labels\u0026quot;\u0026gt;:Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;The Matrix\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;Welcome to the Real World\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;1999\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n2\u0026quot; labels\u003d\u0026quot;:Person\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labels\u0026quot;\u0026gt;:Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Giandomenico Fracchia\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1964\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n3\u0026quot; labels\u003d\u0026quot;:Person\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labels\u0026quot;\u0026gt;:Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;children\u0026quot;\u0026gt;[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Carrie-Anne Moss\u0026lt;/...\n\n...\n\n\n\u0026lt;edge id\u003d\u0026quot;e1829\u0026quot; source\u003d\u0026quot;n567\u0026quot; target\u003d\u0026quot;n513\u0026quot; label\u003d\u0026quot;IS_CHILD_OF\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;IS_CHILD_OF\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1830\u0026quot; source\u003d\u0026quot;n566\u0026quot; target\u003d\u0026quot;n567\u0026quot; label\u003d\u0026quot;NEXT_SIBLING\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT_SIBLING\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1831\u0026quot; source\u003d\u0026quot;n566\u0026quot; target\u003d\u0026quot;n567\u0026quot; label\u003d\u0026quot;NEXT_WORD\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT_WORD\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1832\u0026quot; source\u003d\u0026quot;n567\u0026quot; target\u003d\u0026quot;n568\u0026quot; label\u003d\u0026quot;NEXT\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1833\u0026quot; source\u003d\u0026quot;n568\u0026quot; target\u003d\u0026quot;n513\u0026quot; label\u003d\u0026quot;IS_CHILD_OF\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;IS_CHILD_OF\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1834\u0026quot; source\u003d\u0026quot;n567\u0026quot; target\u003d\u0026quot;n568\u0026quot; label\u003d\u0026quot;NEXT_SIBLING\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT_SIBLING\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1835\u0026quot; source\u003d\u0026quot;n567\u0026quot; target\u003d\u0026quot;n568\u0026quot; label\u003d\u0026quot;NEXT_WORD\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT_WORD\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1836\u0026quot; source\u003d\u0026quot;n568\u0026quot; target\u003d\u0026quot;n569\u0026quot; label\u003d\u0026quot;NEXT\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1837\u0026quot; source\u003d\u0026quot;n569\u0026quot; target\u003d\u0026quot;n513\u0026quot; label\u003d\u0026quot;IS_CHILD_OF\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;IS_CHILD_OF\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e1838\u0026quot; source\u003d\u0026quot;n568\u0026quot; target\u003d\u0026quot;n569\u0026quot; label\u003d\u0026quot;NEXT_SIBLING\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;NEXT_SIBLING\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668070030381_426217253",
      "id": "paragraph_1668070030381_426217253",
      "dateCreated": "2022-11-10 08:47:10.381",
      "dateStarted": "2022-11-11 06:05:34.814",
      "dateFinished": "2022-11-11 06:05:34.842",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nCALL apoc.export.graphml.all(\"allTypes.graphml\", {useTypes:true})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:01:54.989",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"allTypes.graphml\"\t\"database: nodes(1535), rels(5702)\"\t\"graphml\"\t1535\t5702\t4499\t327\t7237\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575122915_966609339",
      "id": "paragraph_1667575122915_966609339",
      "dateCreated": "2022-11-04 15:18:42.916",
      "dateStarted": "2022-11-11 06:01:52.116",
      "dateFinished": "2022-11-11 06:01:52.538",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nwith `attr.type` in `\u003ckey\u003e`\n```\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cgraphml xmlns\u003d\"http://graphml.graphdrawing.org/xmlns\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\"\u003e\n\u003ckey id\u003d\"_name\" for\u003d\"node\" attr.name\u003d\"_name\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"born\" for\u003d\"node\" attr.name\u003d\"born\" attr.type\u003d\"long\"/\u003e\n\u003ckey id\u003d\"title\" for\u003d\"node\" attr.name\u003d\"title\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"url\" for\u003d\"node\" attr.name\u003d\"url\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"labels\" for\u003d\"node\" attr.name\u003d\"labels\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"startIndex\" for\u003d\"node\" attr.name\u003d\"startIndex\" attr.type\u003d\"int\"/\u003e\n\u003ckey id\u003d\"children\" for\u003d\"node\" attr.name\u003d\"children\" attr.type\u003d\"string\" attr.list\u003d\"string\"/\u003e\n\u003ckey id\u003d\"_xmlEncoding\" for\u003d\"node\" attr.name\u003d\"_xmlEncoding\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"endIndex\" for\u003d\"node\" attr.name\u003d\"endIndex\" attr.type\u003d\"int\"/\u003e\n\u003ckey id\u003d\"name\" for\u003d\"node\" attr.name\u003d\"name\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"tagline\" for\u003d\"node\" attr.name\u003d\"tagline\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"_xmlVersion\" for\u003d\"node\" attr.name\u003d\"_xmlVersion\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"text\" for\u003d\"node\" attr.name\u003d\"text\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"node\" attr.name\u003d\"id\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"released\" for\u003d\"node\" attr.name\u003d\"released\" attr.type\u003d\"long\"/\u003e\n\u003ckey id\u003d\"summary\" for\u003d\"edge\" attr.name\u003d\"summary\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"roles\" for\u003d\"edge\" attr.name\u003d\"roles\" attr.type\u003d\"string\" attr.list\u003d\"string\"/\u003e\n\u003ckey id\u003d\"rating\" for\u003d\"edge\" attr.name\u003d\"rating\" attr.type\u003d\"long\"/\u003e\n\u003ckey id\u003d\"label\" for\u003d\"edge\" attr.name\u003d\"label\" attr.type\u003d\"string\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"edge\" attr.name\u003d\"id\" attr.type\u003d\"long\"/\u003e\n\u003cgraph id\u003d\"G\" edgedefault\u003d\"directed\"\u003e\n\u003cnode id\u003d\"n0\" labels\u003d\":Movie\"\u003e\u003cdata key\u003d\"labels\"\u003e:Movie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003e3 men and 1 leg\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eMy carpenter with 30 thousand lire did it better\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e0\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n1\" labels\u003d\":Movie\"\u003e\u003cdata key\u003d\"labels\"\u003e:Movie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003eThe Matrix\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eWelcome to the Real World\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e1999\u003c/data\u003e\u003c/node\u003e\n\n...\n\n\u003cedge id\u003d\"e103\" source\u003d\"n83\" target\u003d\"n82\" label\u003d\"ACTED_IN\"\u003e\u003cdata key\u003d\"label\"\u003eACTED_IN\u003c/data\u003e\u003cdata key\u003d\"roles\"\u003e[\"Harry Burns\"]\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e104\" source\u003d\"n35\" target\u003d\"n82\" label\u003d\"ACTED_IN\"\u003e\u003cdata key\u003d\"label\"\u003eACTED_IN\u003c/data\u003e\u003cdata key\u003d\"roles\"\u003e[\"Sally Albright\"]\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e105\" source\u003d\"n84\" target\u003d\"n82\" label\u003d\"ACTED_IN\"\u003e\u003cdata key\u003d\"label\"\u003eACTED_IN\u003c/data\u003e\u003cdata key\u003d\"roles\"\u003e[\"Marie\"]\u003c/data\u003e\u003c/edge\u003e\n\u003cedge id\u003d\"e106\" source\u003d\"n85\" target\u003d\"n82\" label\u003d\"ACTED_IN\"\u003e\u003cdata key\u003d\"label\"\u003eACTED_IN\u003c/data\u003e\u003cdata key\u003d\"roles\"\u003e[\"Jess\"]\u003c/data\u003e\u003c/edge\u003e\n```\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:07:48.284",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003ewith \u003ccode\u003eattr.type\u003c/code\u003e in \u003ccode\u003e\u0026lt;key\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;graphml xmlns\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xsi:schemaLocation\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\u0026quot;\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_name\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;born\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;born\u0026quot; attr.type\u003d\u0026quot;long\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;title\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;title\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;url\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;url\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;labels\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;labels\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;startIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;startIndex\u0026quot; attr.type\u003d\u0026quot;int\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;children\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;children\u0026quot; attr.type\u003d\u0026quot;string\u0026quot; attr.list\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlEncoding\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlEncoding\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;endIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;endIndex\u0026quot; attr.type\u003d\u0026quot;int\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;name\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;tagline\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;tagline\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlVersion\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlVersion\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;text\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;text\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;id\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;released\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;released\u0026quot; attr.type\u003d\u0026quot;long\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;summary\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;summary\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;roles\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;roles\u0026quot; attr.type\u003d\u0026quot;string\u0026quot; attr.list\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;rating\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;rating\u0026quot; attr.type\u003d\u0026quot;long\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;label\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;label\u0026quot; attr.type\u003d\u0026quot;string\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;id\u0026quot; attr.type\u003d\u0026quot;long\u0026quot;/\u0026gt;\n\u0026lt;graph id\u003d\u0026quot;G\u0026quot; edgedefault\u003d\u0026quot;directed\u0026quot;\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n0\u0026quot; labels\u003d\u0026quot;:Movie\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labels\u0026quot;\u0026gt;:Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;3 men and 1 leg\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;My carpenter with 30 thousand lire did it better\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;0\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n1\u0026quot; labels\u003d\u0026quot;:Movie\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labels\u0026quot;\u0026gt;:Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;The Matrix\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;Welcome to the Real World\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;1999\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\n...\n\n\u0026lt;edge id\u003d\u0026quot;e103\u0026quot; source\u003d\u0026quot;n83\u0026quot; target\u003d\u0026quot;n82\u0026quot; label\u003d\u0026quot;ACTED_IN\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;ACTED_IN\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;roles\u0026quot;\u0026gt;[\u0026quot;Harry Burns\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e104\u0026quot; source\u003d\u0026quot;n35\u0026quot; target\u003d\u0026quot;n82\u0026quot; label\u003d\u0026quot;ACTED_IN\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;ACTED_IN\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;roles\u0026quot;\u0026gt;[\u0026quot;Sally Albright\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e105\u0026quot; source\u003d\u0026quot;n84\u0026quot; target\u003d\u0026quot;n82\u0026quot; label\u003d\u0026quot;ACTED_IN\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;ACTED_IN\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;roles\u0026quot;\u0026gt;[\u0026quot;Marie\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u0026lt;edge id\u003d\u0026quot;e106\u0026quot; source\u003d\u0026quot;n85\u0026quot; target\u003d\u0026quot;n82\u0026quot; label\u003d\u0026quot;ACTED_IN\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;ACTED_IN\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;roles\u0026quot;\u0026gt;[\u0026quot;Jess\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;/edge\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668146060452_771338801",
      "id": "paragraph_1668146060452_771338801",
      "dateCreated": "2022-11-11 05:54:20.453",
      "dateStarted": "2022-11-11 06:07:48.289",
      "dateFinished": "2022-11-11 06:07:48.307",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.graphml.all(\"exportGephi.graphml\",{format:\"gephi\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:08:01.067",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"exportGephi.graphml\"\t\"database: nodes(1535), rels(5702)\"\t\"graphml\"\t1535\t5702\t4499\t280\t7237\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575124784_1796103449",
      "id": "paragraph_1667575124784_1796103449",
      "dateCreated": "2022-11-04 15:18:44.784",
      "dateStarted": "2022-11-11 06:08:01.097",
      "dateFinished": "2022-11-11 06:08:01.419",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nTo be read with Gephi Software. So e.g., there is \"TYPE\" instead of \"labels\".\n\n```\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cgraphml xmlns\u003d\"http://graphml.graphdrawing.org/xmlns\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\"\u003e\n\u003ckey id\u003d\"_name\" for\u003d\"node\" attr.name\u003d\"_name\"/\u003e\n\u003ckey id\u003d\"born\" for\u003d\"node\" attr.name\u003d\"born\"/\u003e\n\u003ckey id\u003d\"title\" for\u003d\"node\" attr.name\u003d\"title\"/\u003e\n\u003ckey id\u003d\"url\" for\u003d\"node\" attr.name\u003d\"url\"/\u003e\n\u003ckey id\u003d\"labels\" for\u003d\"node\" attr.name\u003d\"labels\"/\u003e\n\u003ckey id\u003d\"startIndex\" for\u003d\"node\" attr.name\u003d\"startIndex\"/\u003e\n\u003ckey id\u003d\"children\" for\u003d\"node\" attr.name\u003d\"children\"/\u003e\n\u003ckey id\u003d\"_xmlEncoding\" for\u003d\"node\" attr.name\u003d\"_xmlEncoding\"/\u003e\n\u003ckey id\u003d\"endIndex\" for\u003d\"node\" attr.name\u003d\"endIndex\"/\u003e\n\u003ckey id\u003d\"name\" for\u003d\"node\" attr.name\u003d\"name\"/\u003e\n\u003ckey id\u003d\"tagline\" for\u003d\"node\" attr.name\u003d\"tagline\"/\u003e\n\u003ckey id\u003d\"_xmlVersion\" for\u003d\"node\" attr.name\u003d\"_xmlVersion\"/\u003e\n\u003ckey id\u003d\"text\" for\u003d\"node\" attr.name\u003d\"text\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"node\" attr.name\u003d\"id\"/\u003e\n\u003ckey id\u003d\"TYPE\" for\u003d\"node\" attr.name\u003d\"TYPE\"/\u003e\n\u003ckey id\u003d\"released\" for\u003d\"node\" attr.name\u003d\"released\"/\u003e\n\u003ckey id\u003d\"summary\" for\u003d\"edge\" attr.name\u003d\"summary\"/\u003e\n\u003ckey id\u003d\"roles\" for\u003d\"edge\" attr.name\u003d\"roles\"/\u003e\n\u003ckey id\u003d\"rating\" for\u003d\"edge\" attr.name\u003d\"rating\"/\u003e\n\u003ckey id\u003d\"label\" for\u003d\"edge\" attr.name\u003d\"label\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"edge\" attr.name\u003d\"id\"/\u003e\n\u003ckey id\u003d\"TYPE\" for\u003d\"edge\" attr.name\u003d\"TYPE\"/\u003e\n\u003cgraph id\u003d\"G\" edgedefault\u003d\"directed\"\u003e\n\u003cnode id\u003d\"n0\" labels\u003d\":Movie\"\u003e\u003cdata key\u003d\"TYPE\"\u003e:Movie\u003c/data\u003e\u003cdata key\u003d\"label\"\u003e3 men and 1 leg\u003c/data\u003e\u003cdata key\u003d\"title\"\u003e3 men and 1 leg\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eMy carpenter with 30 thousand lire did it better\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e0\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n1\" labels\u003d\":Movie\"\u003e\u003cdata key\u003d\"TYPE\"\u003e:Movie\u003c/data\u003e\u003cdata key\u003d\"label\"\u003eThe Matrix\u003c/data\u003e\u003cdata key\u003d\"title\"\u003eThe Matrix\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eWelcome to the Real World\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e1999\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n2\" labels\u003d\":Person\"\u003e\u003cdata key\u003d\"TYPE\"\u003e:Person\u003c/data\u003e\u003cdata key\u003d\"label\"\u003eGiandomenico Fracchia\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eGiandomenico Fracchia\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1964\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n3\" labels\u003d\":Person\"\u003e\u003cdata key\u003d\"TYPE\"\u003e:Person\u003c/data\u003e\u003cdata key\u003d\"label\"\u003eCarrie-Anne Moss\u003c/data\u003e\u003cdata key\u003d\"children\"\u003e[\"Al\",\"John\",\"Jack\"]\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eCarrie-Anne Moss\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1967\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n4\" lab\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:21:05.535",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eTo be read with Gephi Software. So e.g., there is \u0026ldquo;TYPE\u0026rdquo; instead of \u0026ldquo;labels\u0026rdquo;.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;graphml xmlns\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xsi:schemaLocation\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\u0026quot;\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_name\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;born\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;born\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;title\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;title\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;url\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;url\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;labels\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;labels\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;startIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;startIndex\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;children\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;children\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlEncoding\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlEncoding\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;endIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;endIndex\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;name\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;tagline\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;tagline\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlVersion\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlVersion\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;text\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;text\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;id\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;TYPE\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;TYPE\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;released\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;released\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;summary\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;summary\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;roles\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;roles\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;rating\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;rating\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;label\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;label\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;id\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;TYPE\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;TYPE\u0026quot;/\u0026gt;\n\u0026lt;graph id\u003d\u0026quot;G\u0026quot; edgedefault\u003d\u0026quot;directed\u0026quot;\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n0\u0026quot; labels\u003d\u0026quot;:Movie\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;TYPE\u0026quot;\u0026gt;:Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;3 men and 1 leg\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;3 men and 1 leg\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;My carpenter with 30 thousand lire did it better\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;0\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n1\u0026quot; labels\u003d\u0026quot;:Movie\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;TYPE\u0026quot;\u0026gt;:Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;The Matrix\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;The Matrix\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;Welcome to the Real World\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;1999\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n2\u0026quot; labels\u003d\u0026quot;:Person\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;TYPE\u0026quot;\u0026gt;:Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;Giandomenico Fracchia\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Giandomenico Fracchia\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1964\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n3\u0026quot; labels\u003d\u0026quot;:Person\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;TYPE\u0026quot;\u0026gt;:Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;label\u0026quot;\u0026gt;Carrie-Anne Moss\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;children\u0026quot;\u0026gt;[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Carrie-Anne Moss\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1967\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n4\u0026quot; lab\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575128510_466088802",
      "id": "paragraph_1667575128510_466088802",
      "dateCreated": "2022-11-04 15:18:48.510",
      "dateStarted": "2022-11-11 06:21:05.543",
      "dateFinished": "2022-11-11 06:21:05.556",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.export.graphml.all(\"exportTinker.graphml\",{format:\"tinkerpop\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:12:00.838",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "file": "string",
                      "source": "string",
                      "format": "string",
                      "nodes": "string",
                      "relationships": "string",
                      "properties": "string",
                      "time": "string",
                      "rows": "string",
                      "batchSize": "string",
                      "batches": "string",
                      "done": "string",
                      "data": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "file\tsource\tformat\tnodes\trelationships\tproperties\ttime\trows\tbatchSize\tbatches\tdone\tdata\n\"exportTinker.graphml\"\t\"database: nodes(1535), rels(5702)\"\t\"graphml\"\t1535\t5702\t4499\t293\t7237\t-1\t0\tTRUE\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668147068282_2077033024",
      "id": "paragraph_1668147068282_2077033024",
      "dateCreated": "2022-11-11 06:11:08.282",
      "dateStarted": "2022-11-11 06:11:57.966",
      "dateFinished": "2022-11-11 06:11:58.377",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nTo be read with Apache Tinkerpop, so e.g. \"labelE\" and \"labelV\" instead of \"labels\" and \"type\".\n\n```\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cgraphml xmlns\u003d\"http://graphml.graphdrawing.org/xmlns\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\"\u003e\n\u003ckey id\u003d\"_name\" for\u003d\"node\" attr.name\u003d\"_name\"/\u003e\n\u003ckey id\u003d\"born\" for\u003d\"node\" attr.name\u003d\"born\"/\u003e\n\u003ckey id\u003d\"title\" for\u003d\"node\" attr.name\u003d\"title\"/\u003e\n\u003ckey id\u003d\"url\" for\u003d\"node\" attr.name\u003d\"url\"/\u003e\n\u003ckey id\u003d\"labelV\" for\u003d\"node\" attr.name\u003d\"labelV\"/\u003e\n\u003ckey id\u003d\"startIndex\" for\u003d\"node\" attr.name\u003d\"startIndex\"/\u003e\n\u003ckey id\u003d\"children\" for\u003d\"node\" attr.name\u003d\"children\"/\u003e\n\u003ckey id\u003d\"_xmlEncoding\" for\u003d\"node\" attr.name\u003d\"_xmlEncoding\"/\u003e\n\u003ckey id\u003d\"endIndex\" for\u003d\"node\" attr.name\u003d\"endIndex\"/\u003e\n\u003ckey id\u003d\"name\" for\u003d\"node\" attr.name\u003d\"name\"/\u003e\n\u003ckey id\u003d\"tagline\" for\u003d\"node\" attr.name\u003d\"tagline\"/\u003e\n\u003ckey id\u003d\"_xmlVersion\" for\u003d\"node\" attr.name\u003d\"_xmlVersion\"/\u003e\n\u003ckey id\u003d\"text\" for\u003d\"node\" attr.name\u003d\"text\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"node\" attr.name\u003d\"id\"/\u003e\n\u003ckey id\u003d\"released\" for\u003d\"node\" attr.name\u003d\"released\"/\u003e\n\u003ckey id\u003d\"summary\" for\u003d\"edge\" attr.name\u003d\"summary\"/\u003e\n\u003ckey id\u003d\"labelE\" for\u003d\"edge\" attr.name\u003d\"labelE\"/\u003e\n\u003ckey id\u003d\"roles\" for\u003d\"edge\" attr.name\u003d\"roles\"/\u003e\n\u003ckey id\u003d\"rating\" for\u003d\"edge\" attr.name\u003d\"rating\"/\u003e\n\u003ckey id\u003d\"id\" for\u003d\"edge\" attr.name\u003d\"id\"/\u003e\n\u003cgraph id\u003d\"G\" edgedefault\u003d\"directed\"\u003e\n\u003cnode id\u003d\"n0\"\u003e\u003cdata key\u003d\"labelV\"\u003eMovie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003e3 men and 1 leg\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eMy carpenter with 30 thousand lire did it better\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e0\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n1\"\u003e\u003cdata key\u003d\"labelV\"\u003eMovie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003eThe Matrix\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eWelcome to the Real World\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e1999\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n2\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eGiandomenico Fracchia\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1964\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n3\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"children\"\u003e[\"Al\",\"John\",\"Jack\"]\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eCarrie-Anne Moss\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1967\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n4\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"children\"\u003e[\"Naruto\",\"Sasuke\",\"Sakura\"]\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eLaurence Fishburne\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1961\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n5\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eHugo Weaving\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1960\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n6\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eLilly Wachowski\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1967\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n7\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eLana Wachowski\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1965\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n8\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eFranco e Ciccio\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1952\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n9\"\u003e\u003cdata key\u003d\"labelV\"\u003ePerson\u003c/data\u003e\u003cdata key\u003d\"name\"\u003eEmil Eifrem\u003c/data\u003e\u003cdata key\u003d\"born\"\u003e1978\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n10\"\u003e\u003cdata key\u003d\"labelV\"\u003eMovie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003eThe Matrix Reloaded\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eFree your mind\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e2003\u003c/data\u003e\u003c/node\u003e\n\u003cnode id\u003d\"n11\"\u003e\u003cdata key\u003d\"labelV\"\u003eMovie\u003c/data\u003e\u003cdata key\u003d\"title\"\u003eThe Matrix Revolutions\u003c/data\u003e\u003cdata key\u003d\"tagline\"\u003eEverything that has a beginning has an end\u003c/data\u003e\u003cdata key\u003d\"released\"\u003e2003\u003c/data\u003e\u003c/node\u003e\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:14:12.989",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eTo be read with Apache Tinkerpop, so e.g. \u0026ldquo;labelE\u0026rdquo; and \u0026ldquo;labelV\u0026rdquo; instead of \u0026ldquo;labels\u0026rdquo; and \u0026ldquo;type\u0026rdquo;.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;graphml xmlns\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xsi:schemaLocation\u003d\u0026quot;http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\u0026quot;\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_name\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;born\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;born\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;title\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;title\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;url\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;url\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;labelV\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;labelV\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;startIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;startIndex\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;children\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;children\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlEncoding\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlEncoding\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;endIndex\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;endIndex\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;name\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;name\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;tagline\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;tagline\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;_xmlVersion\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;_xmlVersion\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;text\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;text\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;id\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;released\u0026quot; for\u003d\u0026quot;node\u0026quot; attr.name\u003d\u0026quot;released\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;summary\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;summary\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;labelE\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;labelE\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;roles\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;roles\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;rating\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;rating\u0026quot;/\u0026gt;\n\u0026lt;key id\u003d\u0026quot;id\u0026quot; for\u003d\u0026quot;edge\u0026quot; attr.name\u003d\u0026quot;id\u0026quot;/\u0026gt;\n\u0026lt;graph id\u003d\u0026quot;G\u0026quot; edgedefault\u003d\u0026quot;directed\u0026quot;\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n0\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;3 men and 1 leg\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;My carpenter with 30 thousand lire did it better\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;0\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n1\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;The Matrix\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;Welcome to the Real World\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;1999\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n2\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Giandomenico Fracchia\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1964\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n3\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;children\u0026quot;\u0026gt;[\u0026quot;Al\u0026quot;,\u0026quot;John\u0026quot;,\u0026quot;Jack\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Carrie-Anne Moss\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1967\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n4\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;children\u0026quot;\u0026gt;[\u0026quot;Naruto\u0026quot;,\u0026quot;Sasuke\u0026quot;,\u0026quot;Sakura\u0026quot;]\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Laurence Fishburne\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1961\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n5\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Hugo Weaving\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1960\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n6\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Lilly Wachowski\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1967\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n7\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Lana Wachowski\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1965\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n8\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Franco e Ciccio\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1952\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n9\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Person\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;name\u0026quot;\u0026gt;Emil Eifrem\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;born\u0026quot;\u0026gt;1978\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n10\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;The Matrix Reloaded\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;Free your mind\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;2003\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u0026lt;node id\u003d\u0026quot;n11\u0026quot;\u0026gt;\u0026lt;data key\u003d\u0026quot;labelV\u0026quot;\u0026gt;Movie\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;title\u0026quot;\u0026gt;The Matrix Revolutions\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;tagline\u0026quot;\u0026gt;Everything that has a beginning has an end\u0026lt;/data\u0026gt;\u0026lt;data key\u003d\u0026quot;released\u0026quot;\u0026gt;2003\u0026lt;/data\u0026gt;\u0026lt;/node\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668147069537_1152096583",
      "id": "paragraph_1668147069537_1152096583",
      "dateCreated": "2022-11-11 06:11:09.537",
      "dateStarted": "2022-11-11 06:14:12.996",
      "dateFinished": "2022-11-11 06:14:13.017",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Export xls\n\n- `CALL apoc.export.xls.all(file, $config)`\n- `CALL apoc.export.xls.data(nodes, relationships, file, $config)`\n- `CALL apoc.export.xls.graph(graph, file, $config)`\n- `CALL apoc.export.xls.query(query, file, $config)`\n\nConfigs:\n\n- \"headerNodeId\", \"\u003cnodeId\u003e\");\n- \"headerRelationshipId\", \"\u003crelationshipId\u003e\");\n- \"headerStartNodeId\", \"\u003cstartNodeId\u003e\");\n- \"headerEndNodeId\", \"\u003cendNodeId\u003e\");\n- arrayDelimiter\", \";\");\n- dateTimeStyle\", \"yyyy-mm-dd hh:mm:ss\");\n- dateStyle\", \"yyyy-mm-dd\");\n- batchSize: 20000\n- \"prefixSheetWithEntityType\", false));\n- joinLabels\", false));\n\nTo use this procedure (and the `apoc.load.xls`) you need to download the jar\n\nhttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003cAPOC_VERSION\u003e/apoc-xls-dependencies-\u003cAPOC_VERSION\u003e.jar,\n\nso for example with apoc 4.4.0.10, `https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-xls-dependencies-4.4.0.10.jar`.\n\nand put in the `plugin` folder.\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:52:38.659",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eExport xls\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.export.xls.all(file, $config)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.export.xls.data(nodes, relationships, file, $config)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.export.xls.graph(graph, file, $config)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.export.xls.query(query, file, $config)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo use this procedure (and the \u003ccode\u003eapoc.load.xls\u003c/code\u003e) you need to download the jar\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\"\u003ehttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003c/a\u003e\u0026lt;APOC_VERSION\u0026gt;/apoc-xls-dependencies-\u0026lt;APOC_VERSION\u0026gt;.jar,\u003c/p\u003e\n\u003cp\u003eso for example with apoc 4.4.0.10, \u003ccode\u003ehttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-xls-dependencies-4.4.0.10.jar\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eand put in the \u003ccode\u003eplugin\u003c/code\u003e folder.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575577938_1158569987",
      "id": "paragraph_1667575577938_1158569987",
      "dateCreated": "2022-11-04 15:26:17.938",
      "dateStarted": "2022-11-11 06:26:31.245",
      "dateFinished": "2022-11-11 06:26:31.304",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// NOTE: currently there is a problem with docker/zeppelin..\n\n// we\u0027ll see directly the file as in cooking programs\n\nCALL apoc.export.xls.all(\"all.xls\", {})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:53:33.904",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Failed to invoke procedure `apoc.export.xls.all`: Caused by: java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576041728_363818919",
      "id": "paragraph_1667576041728_363818919",
      "dateCreated": "2022-11-04 15:34:01.729",
      "dateStarted": "2022-11-11 06:48:00.148",
      "dateFinished": "2022-11-11 06:48:00.207",
      "status": "ERROR"
    },
    {
      "text": "%neo4j\n\n// NOTE: currently there is a problem with docker/zeppelin..\n\n// add \"Node-\" and \"Rel-\" prefix on the sheet names\nCALL apoc.export.xls.all(\"allPrefix.xls\", {prefixSheetWithEntityType:true})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:59:04.516",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576046028_1435555135",
      "id": "paragraph_1667576046028_1435555135",
      "dateCreated": "2022-11-04 15:34:06.028",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n// NOTE: currently there is a problem with docker/zeppelin..\n\n// add some additional nodes\nCREATE (u:Multi:Label {name: \u0027pino\u0027});\nCREATE (u:Multi {name: \u0027due\u0027})\n\n// create a Sheet Label1:Label2:Label3 in case of nodes with multi labels\n\nCALL apoc.export.xls.all(\"allJoinLabels.xls\", {joinLabels:true});\n\nCALL apoc.export.xls.all(\"allNotJoinLabels.xls\", {joinLabels:false});",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 07:04:02.681",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668149639801_442019225",
      "id": "paragraph_1668149639801_442019225",
      "dateCreated": "2022-11-11 06:53:59.801",
      "status": "READY"
    },
    {
      "text": "%neo4j\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 07:03:14.839",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668150194838_855743932",
      "id": "paragraph_1668150194838_855743932",
      "dateCreated": "2022-11-11 07:03:14.839",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n// NOTE: currently there is a problem with docker/zeppelin..\n\n// custom headers\nCALL apoc.export.xls.all(\"allCustomHeaders.xls\", {headerNodeId: \"nodoId\", headerRelationshipId: \"relId\"})",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 06:59:16.783",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668149618891_1817434515",
      "id": "paragraph_1668149618891_1817434515",
      "dateCreated": "2022-11-11 06:53:38.891",
      "status": "READY"
    },
    {
      "text": "%md\nTODO - examples...\n    public XlsExportConfig(Map\u003cString,Object\u003e c) {\n        config \u003d c !\u003d null ? c : Collections.emptyMap();\n        this.headerNodeId \u003d (String) config.getOrDefault(\"headerNodeId\", \"\u003cnodeId\u003e\");\n        this.headerRelationshipId\u003d (String) config.getOrDefault(\"headerRelationshipId\", \"\u003crelationshipId\u003e\");\n        this.headerStartNodeId \u003d (String) config.getOrDefault(\"headerStartNodeId\", \"\u003cstartNodeId\u003e\");\n        this.headerEndNodeId \u003d (String) config.getOrDefault(\"headerEndNodeId\", \"\u003cendNodeId\u003e\");\n        this.arrayDelimiter \u003d (String) config.getOrDefault(\"arrayDelimiter\", \";\");\n        this.dateTimeStyle \u003d (String) config.getOrDefault(\"dateTimeStyle\", \"yyyy-mm-dd hh:mm:ss\");\n        this.dateStyle \u003d (String) config.getOrDefault(\"dateStyle\", \"yyyy-mm-dd\");\n        this.batchSize \u003d ((Number)config.getOrDefault(\"batchSize\", DEFAULT_BATCH_SIZE)).intValue();\n        this.prefixSheetWithEntityType \u003d Util.toBoolean(config.getOrDefault(\"prefixSheetWithEntityType\", false));\n        this.joinLabels \u003d Util.toBoolean(config.getOrDefault(\"joinLabels\", false));\n    }\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:01.645",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575737193_203994453",
      "id": "paragraph_1667575737193_203994453",
      "dateCreated": "2022-11-04 15:28:57.194",
      "status": "READY"
    },
    {
      "text": "%neo4j\nexample with something...",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:56.398",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576047334_685582360",
      "id": "paragraph_1667576047334_685582360",
      "dateCreated": "2022-11-04 15:34:07.334",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:34:34.385",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667576071482_278603958",
      "id": "paragraph_1667576071482_278603958",
      "dateCreated": "2022-11-04 15:34:31.482",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 22:27:12.571",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667575415017_1797430969",
      "id": "paragraph_1667575415017_1797430969",
      "dateCreated": "2022-11-04 15:23:35.017",
      "status": "READY"
    },
    {
      "title": "",
      "text": "%md\n\n## protocols\n\n### We can use various protocols, i.e. : `http/https/gs/ftp/s3/hdfs/file`\n\n### With load and import procedures too\n\n\nTo use `s3` you need to download the jar\n\nhttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003cAPOC_VERSION\u003e/apoc-s3-dependencies-\u003cAPOC_VERSION\u003e.jar,\n\nso for example with apoc 4.4.0.10, `https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-s3-dependencies-4.4.0.10.jar`.\n\nand put in the `plugin` folder.\n\n\u003cbr\u003e\n\n\nTo use `hdfs` you need to download the jar\n\nhttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003cAPOC_VERSION\u003e/apoc-hadoop-dependencies-\u003cAPOC_VERSION\u003e.jar,\n\nso for example with apoc 4.4.0.10, `https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-hadoop-dependencies-4.4.0.10.jar`.\n\nand put in the `plugin` folder.\n\n#### `CALL apoc.export.csv(\"s3://s3.amazonaws.com:80/bucket/path/to/key\")`\n\n\u003cbr\u003e\u003cbr\u003e\n\nTo read, e.g. with `file://url` outside the `plugin` folder, we can set in `apoc.conf` the config `apoc.import.file.use_neo4j_config\u003dfalse`. \u003cbr\u003e\nWhen it\u0027s true (default), the procedures check whether file system access is allowed (via neo4j config `dbms.security.allow_csv_import_from_file_urls`) and possibly get the specific directory by reading the configuration parameter `dbms.directories.import`. \u003cbr\u003e\n\n\u003cpre\u003e\nNB: pay attention!! When this config is `false` we could read/write from/to sensible directories.\n\u003c/pre\u003e\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11 01:39:43.441",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false,
        "title": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eprotocols\u003c/h2\u003e\n\u003ch3\u003eWe can use various protocols, i.e. : \u003ccode\u003ehttp/https/gs/ftp/s3/hdfs/file\u003c/code\u003e\u003c/h3\u003e\n\u003ch3\u003eWith load and import procedures too\u003c/h3\u003e\n\u003cp\u003eTo use \u003ccode\u003es3\u003c/code\u003e you need to download the jar\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\"\u003ehttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003c/a\u003e\u0026lt;APOC_VERSION\u0026gt;/apoc-s3-dependencies-\u0026lt;APOC_VERSION\u0026gt;.jar,\u003c/p\u003e\n\u003cp\u003eso for example with apoc 4.4.0.10, \u003ccode\u003ehttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-s3-dependencies-4.4.0.10.jar\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eand put in the \u003ccode\u003eplugin\u003c/code\u003e folder.\u003c/p\u003e\n\u003cbr\u003e\n\u003cp\u003eTo use \u003ccode\u003ehdfs\u003c/code\u003e you need to download the jar\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\"\u003ehttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/\u003c/a\u003e\u0026lt;APOC_VERSION\u0026gt;/apoc-hadoop-dependencies-\u0026lt;APOC_VERSION\u0026gt;.jar,\u003c/p\u003e\n\u003cp\u003eso for example with apoc 4.4.0.10, \u003ccode\u003ehttps://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.10/apoc-hadoop-dependencies-4.4.0.10.jar\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eand put in the \u003ccode\u003eplugin\u003c/code\u003e folder.\u003c/p\u003e\n\u003ch4\u003e\u003ccode\u003eCALL apoc.export.csv(\u0026quot;s3://s3.amazonaws.com:80/bucket/path/to/key\u0026quot;)\u003c/code\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n\u003cp\u003eTo read, e.g. with \u003ccode\u003efile://url\u003c/code\u003e outside the \u003ccode\u003eplugin\u003c/code\u003e folder, we can set in \u003ccode\u003eapoc.conf\u003c/code\u003e the config \u003ccode\u003eapoc.import.file.use_neo4j_config\u003dfalse\u003c/code\u003e. \u003cbr\u003e\u003cbr /\u003e\nWhen it\u0026rsquo;s true (default), the procedures check whether file system access is allowed (via neo4j config \u003ccode\u003edbms.security.allow_csv_import_from_file_urls\u003c/code\u003e) and possibly get the specific directory by reading the configuration parameter \u003ccode\u003edbms.directories.import\u003c/code\u003e. \u003cbr\u003e\u003c/p\u003e\n\u003cpre\u003e\nNB: pay attention!! When this config is `false` we could read/write from/to sensible directories.\n\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666606586725_2099638126",
      "id": "paragraph_1666606586725_2099638126",
      "dateCreated": "2022-10-24 10:16:26.729",
      "dateStarted": "2022-11-11 01:39:43.442",
      "dateFinished": "2022-11-11 01:39:43.454",
      "status": "FINISHED"
    },
    {
      "text": "%md\n3 esercizi di export:\nesportare tutte le persone con proprieta x \u003c 20 in cypher e format plain\nesportare tutte le movie, con la graph, in json in formato default e in un unico array\nesportare tutte le entità, con la graph, in json in formato default e in un unico array",
      "user": "anonymous",
      "dateUpdated": "2022-11-04 15:44:57.558",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666972646699_626512426",
      "id": "paragraph_1666972646699_626512426",
      "dateCreated": "2022-10-28 15:57:26.699",
      "status": "READY"
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2022-11-05 00:59:09.703",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1666606604863_797590396",
      "id": "paragraph_1666606604863_797590396",
      "dateCreated": "2022-10-24 10:16:44.863",
      "status": "READY"
    }
  ],
  "name": "03. export procedures",
  "id": "2HJF49R6C",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}