{
  "paragraphs": [
    {
      "text": "%md\n\n# If-else statements\n\nSometimes queries require conditional execution logic that can’t be adequately expressed in Cypher. \n\nFor example, to simulate a conditional with pure Cypher we could execute for example:\n`MATCH (n:Test) FOREACH(ignoreMe IN CASE WHEN EXISTS(s.myProp) THEN [1] ELSE [] END | SET n.otherProp \u003d 0)`\n\nThe `FOREACH` clause can be used to update data, but with more complex use cases (for example a `MATCH`), we cannot use it.\n\nSo if I want to do more complex conditional executions, I can use `apoc.when` / `apoc.case` procedure.\n- `apoc.when(condition, ifQuery, elseQuery, {parameters})` - only for read queries\n- `apoc.case([listOfConditionals], elseQuery, {parameters})` - only for read queries\n- `apoc.do.when` - equals to apoc.when but we can also execute \u0027write\u0027 statements\n- `apoc.do.case` - equals to apoc.case but we can also execute \u0027write\u0027 statements\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 13:18:58.090",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eIf-else statements\u003c/h1\u003e\n\u003cp\u003eSometimes queries require conditional execution logic that can’t be adequately expressed in Cypher.\u003c/p\u003e\n\u003cp\u003eFor example, to simulate a conditional with pure Cypher we could execute for example:\u003cbr /\u003e\n\u003ccode\u003eMATCH (n:Test) FOREACH(ignoreMe IN CASE WHEN EXISTS(s.myProp) THEN [1] ELSE [] END | SET n.otherProp \u003d 0)\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eFOREACH\u003c/code\u003e clause can be used to update data, but with more complex use cases (for example a \u003ccode\u003eMATCH\u003c/code\u003e), we cannot use it.\u003c/p\u003e\n\u003cp\u003eSo if I want to do more complex conditional executions, I can use \u003ccode\u003eapoc.when\u003c/code\u003e / \u003ccode\u003eapoc.case\u003c/code\u003e procedure.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.when(condition, ifQuery, elseQuery, {parameters})\u003c/code\u003e - only for read queries\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.case([listOfConditionals], elseQuery, {parameters})\u003c/code\u003e - only for read queries\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.do.when\u003c/code\u003e - equals to apoc.when but we can also execute \u0026lsquo;write\u0026rsquo; statements\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.do.case\u003c/code\u003e - equals to apoc.case but we can also execute \u0026lsquo;write\u0026rsquo; statements\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635516691436_323316003",
      "id": "paragraph_1635516691436_323316003",
      "dateCreated": "2021-10-29 14:11:31.436",
      "dateStarted": "2021-11-24 13:18:58.090",
      "dateFinished": "2021-11-24 13:18:58.118",
      "status": "FINISHED"
    },
    {
      "title": "apoc.when",
      "text": "%neo4j\n\nmatch (n:Person)\nwith n\ncall apoc.when(\n  n.name \u003d \u0027Giandomenico Fracchia\u0027,\n  \u0027RETURN \"yes \" + name as result\u0027,\n  \u0027RETURN \"no \" + name as result\u0027, \n  {name: n.name})\nyield value\n\nreturn value.result as result",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:09.591",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 271.989,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "result": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "result\n\"yes Giandomenico Fracchia\"\n\"no Carrie-Anne Moss\"\n\"no Laurence Fishburne\"\n\"no Hugo Weaving\"\n\"no Lilly Wachowski\"\n\"no Lana Wachowski\"\n\"no Franco e Ciccio\"\n\"no Emil Eifrem\"\n\"no Charlize Theron\"\n\"no Al Pacino\"\n\"no Taylor Hackford\"\n\"no Tom Cruise\"\n\"no Jack Nicholson\"\n\"no Demi Moore\"\n\"no Kevin Bacon\"\n\"no Kiefer Sutherland\"\n\"no Noah Wyle\"\n\"no Cuba Gooding Jr.\"\n\"no Kevin Pollak\"\n\"no J.T. Walsh\"\n\"no James Marshall\"\n\"no Christopher Guest\"\n\"no Rob Reiner\"\n\"no Aaron Sorkin\"\n\"no Kelly McGillis\"\n\"no Val Kilmer\"\n\"no Anthony Edwards\"\n\"no Tom Skerritt\"\n\"no Meg Ryan\"\n\"no Tony Scott\"\n\"no Jim Cash\"\n\"no Renee Zellweger\"\n\"no Kelly Preston\"\n\"no Jerry O\u0027Connell\"\n\"no Jay Mohr\"\n\"no Bonnie Hunt\"\n\"no Regina King\"\n\"no Jonathan Lipnicki\"\n\"no Cameron Crowe\"\n\"no River Phoenix\"\n\"no Corey Feldman\"\n\"no Wil Wheaton\"\n\"no John Cusack\"\n\"no Marshall Bell\"\n\"no Helen Hunt\"\n\"no Greg Kinnear\"\n\"no James L. Brooks\"\n\"no Annabella Sciorra\"\n\"no Max von Sydow\"\n\"no Werner Herzog\"\n\"no Robin Williams\"\n\"no Vincent Ward\"\n\"no Ethan Hawke\"\n\"no Rick Yune\"\n\"no James Cromwell\"\n\"no Scott Hicks\"\n\"no Parker Posey\"\n\"no Dave Chappelle\"\n\"no Steve Zahn\"\n\"no Tom Hanks\"\n\"no Nora Ephron\"\n\"no Rita Wilson\"\n\"no Bill Pullman\"\n\"no Victor Garber\"\n\"no Rosie O\u0027Donnell\"\n\"no John Patrick Stanley\"\n\"no Nathan Lane\"\n\"no Billy Crystal\"\n\"no Carrie Fisher\"\n\"no Bruno Kirby\"\n\"no Liv Tyler\"\n\"no Brooke Langton\"\n\"no Gene Hackman\"\n\"no Orlando Jones\"\n\"no Howard Deutch\"\n\"no Christian Bale\"\n\"no Zach Grenier\"\n\"no Mike Nichols\"\n\"no Richard Harris\"\n\"no Clint Eastwood\"\n\"no Takeshi Kitano\"\n\"no Dina Meyer\"\n\"no Ice-T\"\n\"no Robert Longo\"\n\"no Halle Berry\"\n\"no Jim Broadbent\"\n\"no Tom Tykwer\"\n\"no David Mitchell\"\n\"no Stefan Arndt\"\n\"no Ian McKellen\"\n\"no Audrey Tautou\"\n\"no Paul Bettany\"\n\"no Ron Howard\"\n\"no Natalie Portman\"\n\"no Stephen Rea\"\n\"no John Hurt\"\n\"no Ben Miles\"\n\"no Emile Hirsch\"\n\"no John Goodman\"\n\"no Susan Sarandon\"\n\"no Matthew Fox\"\n\"no Christina Ricci\"\n\"no Rain\"\n\"no Naomie Harris\"\n\"no Michael Clarke Duncan\"\n\"no David Morse\"\n\"no Sam Rockwell\"\n\"no Gary Sinise\"\n\"no Patricia Clarkson\"\n\"no Frank Darabont\"\n\"no Frank Langella\"\n\"no Michael Sheen\"\n\"no Oliver Platt\"\n\"no Danny DeVito\"\n\"no John C. Reilly\"\n\"no Ed Harris\"\n\"no Bill Paxton\"\n\"no Philip Seymour Hoffman\"\n\"no Jan de Bont\"\n\"no Robert Zemeckis\"\n\"no Milos Forman\"\n\"no Diane Keaton\"\n\"no Nancy Meyers\"\n\"no Chris Columbus\"\n\"no Julia Roberts\"\n\"no Madonna\"\n\"no Geena Davis\"\n\"no Lori Petty\"\n\"no Penny Marshall\"\n\"no Paul Blythe\"\n\"no Angela Scope\"\n\"no Jessica Thompson\"\n\"no James Thompson\"\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635516809897_465241544",
      "id": "paragraph_1635516809897_465241544",
      "dateCreated": "2021-10-29 14:13:29.897",
      "dateStarted": "2022-03-22 13:31:09.146",
      "dateFinished": "2022-03-22 13:31:09.495",
      "status": "FINISHED"
    },
    {
      "title": "apoc.do.when",
      "text": "%neo4j\n    match (n:Person)\n    with n\n    CALL apoc.do.when(n.name \u003d \u0027Giandomenico Fracchia\u0027, \n        \u0027create (n)-[:HAS_MOVIE]-\u003e(:Movie {name: \"The movie about \" + n.name}) return n\u0027,            // create a node Movie from node\n        \u0027create (node:NotFracchia {name: n.name}) return n\u0027,  // create a node with `NotFracchia` label\n        {n: n}) // map of parameters, in this case $born \u003d n.born\n    yield value \n    return value.n.name, value.n.born",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:42.933",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "value.n.name": "string",
                      "value.n.born": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "value.n.name\tvalue.n.born\n\"Giandomenico Fracchia\"\t1964\n\"Carrie-Anne Moss\"\t1967\n\"Laurence Fishburne\"\t1961\n\"Hugo Weaving\"\t1960\n\"Lilly Wachowski\"\t1967\n\"Lana Wachowski\"\t1965\n\"Franco e Ciccio\"\t1952\n\"Emil Eifrem\"\t1978\n\"Charlize Theron\"\t1975\n\"Al Pacino\"\t1940\n\"Taylor Hackford\"\t1944\n\"Tom Cruise\"\t1962\n\"Jack Nicholson\"\t1937\n\"Demi Moore\"\t1962\n\"Kevin Bacon\"\t1958\n\"Kiefer Sutherland\"\t1966\n\"Noah Wyle\"\t1971\n\"Cuba Gooding Jr.\"\t1968\n\"Kevin Pollak\"\t1957\n\"J.T. Walsh\"\t1943\n\"James Marshall\"\t1967\n\"Christopher Guest\"\t1948\n\"Rob Reiner\"\t1947\n\"Aaron Sorkin\"\t1961\n\"Kelly McGillis\"\t1957\n\"Val Kilmer\"\t1959\n\"Anthony Edwards\"\t1962\n\"Tom Skerritt\"\t1933\n\"Meg Ryan\"\t1961\n\"Tony Scott\"\t1944\n\"Jim Cash\"\t1941\n\"Renee Zellweger\"\t1969\n\"Kelly Preston\"\t1962\n\"Jerry O\u0027Connell\"\t1974\n\"Jay Mohr\"\t1970\n\"Bonnie Hunt\"\t1961\n\"Regina King\"\t1971\n\"Jonathan Lipnicki\"\t1996\n\"Cameron Crowe\"\t1957\n\"River Phoenix\"\t1970\n\"Corey Feldman\"\t1971\n\"Wil Wheaton\"\t1972\n\"John Cusack\"\t1966\n\"Marshall Bell\"\t1942\n\"Helen Hunt\"\t1963\n\"Greg Kinnear\"\t1963\n\"James L. Brooks\"\t1940\n\"Annabella Sciorra\"\t1960\n\"Max von Sydow\"\t1929\n\"Werner Herzog\"\t1942\n\"Robin Williams\"\t1951\n\"Vincent Ward\"\t1956\n\"Ethan Hawke\"\t1970\n\"Rick Yune\"\t1971\n\"James Cromwell\"\t1940\n\"Scott Hicks\"\t1953\n\"Parker Posey\"\t1968\n\"Dave Chappelle\"\t1973\n\"Steve Zahn\"\t1967\n\"Tom Hanks\"\t1956\n\"Nora Ephron\"\t1941\n\"Rita Wilson\"\t1956\n\"Bill Pullman\"\t1953\n\"Victor Garber\"\t1949\n\"Rosie O\u0027Donnell\"\t1962\n\"John Patrick Stanley\"\t1950\n\"Nathan Lane\"\t1956\n\"Billy Crystal\"\t1948\n\"Carrie Fisher\"\t1956\n\"Bruno Kirby\"\t1949\n\"Liv Tyler\"\t1977\n\"Brooke Langton\"\t1970\n\"Gene Hackman\"\t1929\n\"Orlando Jones\"\t1968\n\"Howard Deutch\"\t1950\n\"Christian Bale\"\t1974\n\"Zach Grenier\"\t1954\n\"Mike Nichols\"\t1931\n\"Richard Harris\"\t1930\n\"Clint Eastwood\"\t1930\n\"Takeshi Kitano\"\t1947\n\"Dina Meyer\"\t1968\n\"Ice-T\"\t1958\n\"Robert Longo\"\t1953\n\"Halle Berry\"\t1966\n\"Jim Broadbent\"\t1949\n\"Tom Tykwer\"\t1965\n\"David Mitchell\"\t1969\n\"Stefan Arndt\"\t1961\n\"Ian McKellen\"\t1939\n\"Audrey Tautou\"\t1976\n\"Paul Bettany\"\t1971\n\"Ron Howard\"\t1954\n\"Natalie Portman\"\t1981\n\"Stephen Rea\"\t1946\n\"John Hurt\"\t1940\n\"Ben Miles\"\t1967\n\"Emile Hirsch\"\t1985\n\"John Goodman\"\t1960\n\"Susan Sarandon\"\t1946\n\"Matthew Fox\"\t1966\n\"Christina Ricci\"\t1980\n\"Rain\"\t1982\n\"Naomie Harris\"\tNULL\n\"Michael Clarke Duncan\"\t1957\n\"David Morse\"\t1953\n\"Sam Rockwell\"\t1968\n\"Gary Sinise\"\t1955\n\"Patricia Clarkson\"\t1959\n\"Frank Darabont\"\t1959\n\"Frank Langella\"\t1938\n\"Michael Sheen\"\t1969\n\"Oliver Platt\"\t1960\n\"Danny DeVito\"\t1944\n\"John C. Reilly\"\t1965\n\"Ed Harris\"\t1950\n\"Bill Paxton\"\t1955\n\"Philip Seymour Hoffman\"\t1967\n\"Jan de Bont\"\t1943\n\"Robert Zemeckis\"\t1951\n\"Milos Forman\"\t1932\n\"Diane Keaton\"\t1946\n\"Nancy Meyers\"\t1949\n\"Chris Columbus\"\t1958\n\"Julia Roberts\"\t1967\n\"Madonna\"\t1954\n\"Geena Davis\"\t1956\n\"Lori Petty\"\t1963\n\"Penny Marshall\"\t1943\n\"Paul Blythe\"\tNULL\n\"Angela Scope\"\tNULL\n\"Jessica Thompson\"\tNULL\n\"James Thompson\"\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635939526752_538363380",
      "id": "paragraph_1635939526752_538363380",
      "dateCreated": "2021-11-03 11:38:46.752",
      "dateStarted": "2022-03-22 13:31:13.193",
      "dateFinished": "2022-03-22 13:31:13.691",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\nmatch (nk:NotFracchia) return nk",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:17.464",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":256,\"data\":{\"name\":\"Halle Berry\"},\"label\":\"NotFracchia\"},{\"id\":257,\"data\":{\"name\":\"Jim Broadbent\"},\"label\":\"NotFracchia\"},{\"id\":258,\"data\":{\"name\":\"Tom Tykwer\"},\"label\":\"NotFracchia\"},{\"id\":259,\"data\":{\"name\":\"David Mitchell\"},\"label\":\"NotFracchia\"},{\"id\":260,\"data\":{\"name\":\"Stefan Arndt\"},\"label\":\"NotFracchia\"},{\"id\":261,\"data\":{\"name\":\"Ian McKellen\"},\"label\":\"NotFracchia\"},{\"id\":262,\"data\":{\"name\":\"Audrey Tautou\"},\"label\":\"NotFracchia\"},{\"id\":263,\"data\":{\"name\":\"Paul Bettany\"},\"label\":\"NotFracchia\"},{\"id\":264,\"data\":{\"name\":\"Ron Howard\"},\"label\":\"NotFracchia\"},{\"id\":265,\"data\":{\"name\":\"Natalie Portman\"},\"label\":\"NotFracchia\"},{\"id\":266,\"data\":{\"name\":\"Stephen Rea\"},\"label\":\"NotFracchia\"},{\"id\":267,\"data\":{\"name\":\"John Hurt\"},\"label\":\"NotFracchia\"},{\"id\":268,\"data\":{\"name\":\"Ben Miles\"},\"label\":\"NotFracchia\"},{\"id\":269,\"data\":{\"name\":\"Emile Hirsch\"},\"label\":\"NotFracchia\"},{\"id\":270,\"data\":{\"name\":\"John Goodman\"},\"label\":\"NotFracchia\"},{\"id\":271,\"data\":{\"name\":\"Susan Sarandon\"},\"label\":\"NotFracchia\"},{\"id\":272,\"data\":{\"name\":\"Matthew Fox\"},\"label\":\"NotFracchia\"},{\"id\":273,\"data\":{\"name\":\"Christina Ricci\"},\"label\":\"NotFracchia\"},{\"id\":274,\"data\":{\"name\":\"Rain\"},\"label\":\"NotFracchia\"},{\"id\":275,\"data\":{\"name\":\"Naomie Harris\"},\"label\":\"NotFracchia\"},{\"id\":276,\"data\":{\"name\":\"Michael Clarke Duncan\"},\"label\":\"NotFracchia\"},{\"id\":277,\"data\":{\"name\":\"David Morse\"},\"label\":\"NotFracchia\"},{\"id\":278,\"data\":{\"name\":\"Sam Rockwell\"},\"label\":\"NotFracchia\"},{\"id\":279,\"data\":{\"name\":\"Gary Sinise\"},\"label\":\"NotFracchia\"},{\"id\":280,\"data\":{\"name\":\"Patricia Clarkson\"},\"label\":\"NotFracchia\"},{\"id\":281,\"data\":{\"name\":\"Frank Darabont\"},\"label\":\"NotFracchia\"},{\"id\":282,\"data\":{\"name\":\"Frank Langella\"},\"label\":\"NotFracchia\"},{\"id\":283,\"data\":{\"name\":\"Michael Sheen\"},\"label\":\"NotFracchia\"},{\"id\":284,\"data\":{\"name\":\"Oliver Platt\"},\"label\":\"NotFracchia\"},{\"id\":285,\"data\":{\"name\":\"Danny DeVito\"},\"label\":\"NotFracchia\"},{\"id\":286,\"data\":{\"name\":\"John C. Reilly\"},\"label\":\"NotFracchia\"},{\"id\":287,\"data\":{\"name\":\"Ed Harris\"},\"label\":\"NotFracchia\"},{\"id\":288,\"data\":{\"name\":\"Bill Paxton\"},\"label\":\"NotFracchia\"},{\"id\":289,\"data\":{\"name\":\"Philip Seymour Hoffman\"},\"label\":\"NotFracchia\"},{\"id\":290,\"data\":{\"name\":\"Jan de Bont\"},\"label\":\"NotFracchia\"},{\"id\":291,\"data\":{\"name\":\"Robert Zemeckis\"},\"label\":\"NotFracchia\"},{\"id\":292,\"data\":{\"name\":\"Milos Forman\"},\"label\":\"NotFracchia\"},{\"id\":293,\"data\":{\"name\":\"Diane Keaton\"},\"label\":\"NotFracchia\"},{\"id\":294,\"data\":{\"name\":\"Nancy Meyers\"},\"label\":\"NotFracchia\"},{\"id\":295,\"data\":{\"name\":\"Chris Columbus\"},\"label\":\"NotFracchia\"},{\"id\":296,\"data\":{\"name\":\"Julia Roberts\"},\"label\":\"NotFracchia\"},{\"id\":297,\"data\":{\"name\":\"Madonna\"},\"label\":\"NotFracchia\"},{\"id\":298,\"data\":{\"name\":\"Geena Davis\"},\"label\":\"NotFracchia\"},{\"id\":299,\"data\":{\"name\":\"Lori Petty\"},\"label\":\"NotFracchia\"},{\"id\":300,\"data\":{\"name\":\"Penny Marshall\"},\"label\":\"NotFracchia\"},{\"id\":301,\"data\":{\"name\":\"Paul Blythe\"},\"label\":\"NotFracchia\"},{\"id\":302,\"data\":{\"name\":\"Angela Scope\"},\"label\":\"NotFracchia\"},{\"id\":303,\"data\":{\"name\":\"Jessica Thompson\"},\"label\":\"NotFracchia\"},{\"id\":304,\"data\":{\"name\":\"James Thompson\"},\"label\":\"NotFracchia\"},{\"id\":173,\"data\":{\"name\":\"Carrie-Anne Moss\"},\"label\":\"NotFracchia\"},{\"id\":174,\"data\":{\"name\":\"Laurence Fishburne\"},\"label\":\"NotFracchia\"},{\"id\":175,\"data\":{\"name\":\"Hugo Weaving\"},\"label\":\"NotFracchia\"},{\"id\":176,\"data\":{\"name\":\"Lilly Wachowski\"},\"label\":\"NotFracchia\"},{\"id\":177,\"data\":{\"name\":\"Lana Wachowski\"},\"label\":\"NotFracchia\"},{\"id\":178,\"data\":{\"name\":\"Franco e Ciccio\"},\"label\":\"NotFracchia\"},{\"id\":179,\"data\":{\"name\":\"Emil Eifrem\"},\"label\":\"NotFracchia\"},{\"id\":180,\"data\":{\"name\":\"Charlize Theron\"},\"label\":\"NotFracchia\"},{\"id\":181,\"data\":{\"name\":\"Al Pacino\"},\"label\":\"NotFracchia\"},{\"id\":182,\"data\":{\"name\":\"Taylor Hackford\"},\"label\":\"NotFracchia\"},{\"id\":183,\"data\":{\"name\":\"Tom Cruise\"},\"label\":\"NotFracchia\"},{\"id\":184,\"data\":{\"name\":\"Jack Nicholson\"},\"label\":\"NotFracchia\"},{\"id\":185,\"data\":{\"name\":\"Demi Moore\"},\"label\":\"NotFracchia\"},{\"id\":186,\"data\":{\"name\":\"Kevin Bacon\"},\"label\":\"NotFracchia\"},{\"id\":187,\"data\":{\"name\":\"Kiefer Sutherland\"},\"label\":\"NotFracchia\"},{\"id\":188,\"data\":{\"name\":\"Noah Wyle\"},\"label\":\"NotFracchia\"},{\"id\":189,\"data\":{\"name\":\"Cuba Gooding Jr.\"},\"label\":\"NotFracchia\"},{\"id\":190,\"data\":{\"name\":\"Kevin Pollak\"},\"label\":\"NotFracchia\"},{\"id\":191,\"data\":{\"name\":\"J.T. Walsh\"},\"label\":\"NotFracchia\"},{\"id\":192,\"data\":{\"name\":\"James Marshall\"},\"label\":\"NotFracchia\"},{\"id\":193,\"data\":{\"name\":\"Christopher Guest\"},\"label\":\"NotFracchia\"},{\"id\":194,\"data\":{\"name\":\"Rob Reiner\"},\"label\":\"NotFracchia\"},{\"id\":195,\"data\":{\"name\":\"Aaron Sorkin\"},\"label\":\"NotFracchia\"},{\"id\":196,\"data\":{\"name\":\"Kelly McGillis\"},\"label\":\"NotFracchia\"},{\"id\":197,\"data\":{\"name\":\"Val Kilmer\"},\"label\":\"NotFracchia\"},{\"id\":198,\"data\":{\"name\":\"Anthony Edwards\"},\"label\":\"NotFracchia\"},{\"id\":199,\"data\":{\"name\":\"Tom Skerritt\"},\"label\":\"NotFracchia\"},{\"id\":200,\"data\":{\"name\":\"Meg Ryan\"},\"label\":\"NotFracchia\"},{\"id\":201,\"data\":{\"name\":\"Tony Scott\"},\"label\":\"NotFracchia\"},{\"id\":202,\"data\":{\"name\":\"Jim Cash\"},\"label\":\"NotFracchia\"},{\"id\":203,\"data\":{\"name\":\"Renee Zellweger\"},\"label\":\"NotFracchia\"},{\"id\":204,\"data\":{\"name\":\"Kelly Preston\"},\"label\":\"NotFracchia\"},{\"id\":205,\"data\":{\"name\":\"Jerry O\\u0027Connell\"},\"label\":\"NotFracchia\"},{\"id\":206,\"data\":{\"name\":\"Jay Mohr\"},\"label\":\"NotFracchia\"},{\"id\":207,\"data\":{\"name\":\"Bonnie Hunt\"},\"label\":\"NotFracchia\"},{\"id\":208,\"data\":{\"name\":\"Regina King\"},\"label\":\"NotFracchia\"},{\"id\":209,\"data\":{\"name\":\"Jonathan Lipnicki\"},\"label\":\"NotFracchia\"},{\"id\":210,\"data\":{\"name\":\"Cameron Crowe\"},\"label\":\"NotFracchia\"},{\"id\":211,\"data\":{\"name\":\"River Phoenix\"},\"label\":\"NotFracchia\"},{\"id\":212,\"data\":{\"name\":\"Corey Feldman\"},\"label\":\"NotFracchia\"},{\"id\":213,\"data\":{\"name\":\"Wil Wheaton\"},\"label\":\"NotFracchia\"},{\"id\":214,\"data\":{\"name\":\"John Cusack\"},\"label\":\"NotFracchia\"},{\"id\":215,\"data\":{\"name\":\"Marshall Bell\"},\"label\":\"NotFracchia\"},{\"id\":216,\"data\":{\"name\":\"Helen Hunt\"},\"label\":\"NotFracchia\"},{\"id\":217,\"data\":{\"name\":\"Greg Kinnear\"},\"label\":\"NotFracchia\"},{\"id\":218,\"data\":{\"name\":\"James L. Brooks\"},\"label\":\"NotFracchia\"},{\"id\":219,\"data\":{\"name\":\"Annabella Sciorra\"},\"label\":\"NotFracchia\"},{\"id\":220,\"data\":{\"name\":\"Max von Sydow\"},\"label\":\"NotFracchia\"},{\"id\":221,\"data\":{\"name\":\"Werner Herzog\"},\"label\":\"NotFracchia\"},{\"id\":222,\"data\":{\"name\":\"Robin Williams\"},\"label\":\"NotFracchia\"},{\"id\":223,\"data\":{\"name\":\"Vincent Ward\"},\"label\":\"NotFracchia\"},{\"id\":224,\"data\":{\"name\":\"Ethan Hawke\"},\"label\":\"NotFracchia\"},{\"id\":225,\"data\":{\"name\":\"Rick Yune\"},\"label\":\"NotFracchia\"},{\"id\":226,\"data\":{\"name\":\"James Cromwell\"},\"label\":\"NotFracchia\"},{\"id\":227,\"data\":{\"name\":\"Scott Hicks\"},\"label\":\"NotFracchia\"},{\"id\":228,\"data\":{\"name\":\"Parker Posey\"},\"label\":\"NotFracchia\"},{\"id\":229,\"data\":{\"name\":\"Dave Chappelle\"},\"label\":\"NotFracchia\"},{\"id\":230,\"data\":{\"name\":\"Steve Zahn\"},\"label\":\"NotFracchia\"},{\"id\":231,\"data\":{\"name\":\"Tom Hanks\"},\"label\":\"NotFracchia\"},{\"id\":232,\"data\":{\"name\":\"Nora Ephron\"},\"label\":\"NotFracchia\"},{\"id\":233,\"data\":{\"name\":\"Rita Wilson\"},\"label\":\"NotFracchia\"},{\"id\":234,\"data\":{\"name\":\"Bill Pullman\"},\"label\":\"NotFracchia\"},{\"id\":235,\"data\":{\"name\":\"Victor Garber\"},\"label\":\"NotFracchia\"},{\"id\":236,\"data\":{\"name\":\"Rosie O\\u0027Donnell\"},\"label\":\"NotFracchia\"},{\"id\":237,\"data\":{\"name\":\"John Patrick Stanley\"},\"label\":\"NotFracchia\"},{\"id\":238,\"data\":{\"name\":\"Nathan Lane\"},\"label\":\"NotFracchia\"},{\"id\":239,\"data\":{\"name\":\"Billy Crystal\"},\"label\":\"NotFracchia\"},{\"id\":240,\"data\":{\"name\":\"Carrie Fisher\"},\"label\":\"NotFracchia\"},{\"id\":241,\"data\":{\"name\":\"Bruno Kirby\"},\"label\":\"NotFracchia\"},{\"id\":242,\"data\":{\"name\":\"Liv Tyler\"},\"label\":\"NotFracchia\"},{\"id\":243,\"data\":{\"name\":\"Brooke Langton\"},\"label\":\"NotFracchia\"},{\"id\":244,\"data\":{\"name\":\"Gene Hackman\"},\"label\":\"NotFracchia\"},{\"id\":245,\"data\":{\"name\":\"Orlando Jones\"},\"label\":\"NotFracchia\"},{\"id\":246,\"data\":{\"name\":\"Howard Deutch\"},\"label\":\"NotFracchia\"},{\"id\":247,\"data\":{\"name\":\"Christian Bale\"},\"label\":\"NotFracchia\"},{\"id\":248,\"data\":{\"name\":\"Zach Grenier\"},\"label\":\"NotFracchia\"},{\"id\":249,\"data\":{\"name\":\"Mike Nichols\"},\"label\":\"NotFracchia\"},{\"id\":250,\"data\":{\"name\":\"Richard Harris\"},\"label\":\"NotFracchia\"},{\"id\":251,\"data\":{\"name\":\"Clint Eastwood\"},\"label\":\"NotFracchia\"},{\"id\":252,\"data\":{\"name\":\"Takeshi Kitano\"},\"label\":\"NotFracchia\"},{\"id\":253,\"data\":{\"name\":\"Dina Meyer\"},\"label\":\"NotFracchia\"},{\"id\":254,\"data\":{\"name\":\"Ice-T\"},\"label\":\"NotFracchia\"},{\"id\":255,\"data\":{\"name\":\"Robert Longo\"},\"label\":\"NotFracchia\"}],\"edges\":[],\"labels\":{\"Movie\":\"#522A50\",\"Person\":\"#4907F5\",\"NotFracchia\":\"#E86E21\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635939537974_717266072",
      "id": "paragraph_1635939537974_717266072",
      "dateCreated": "2021-11-03 11:38:57.974",
      "dateStarted": "2022-03-22 13:31:17.479",
      "dateFinished": "2022-03-22 13:31:17.579",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\nmatch (n:Movie {name: \"The movie about Giandomenico Fracchia\"}) return n",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:21.211",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":172,\"data\":{\"name\":\"The movie about Giandomenico Fracchia\"},\"label\":\"Movie\"}],\"edges\":[],\"labels\":{\"Movie\":\"#522A50\",\"Person\":\"#4907F5\",\"NotFracchia\":\"#E86E21\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635939784252_499221163",
      "id": "paragraph_1635939784252_499221163",
      "dateCreated": "2021-11-03 11:43:04.252",
      "dateStarted": "2022-03-22 13:31:21.229",
      "dateFinished": "2022-03-22 13:31:21.302",
      "status": "FINISHED"
    },
    {
      "title": "apoc.case",
      "text": "%neo4j\n\n// if name is Giandomenico Fracchia we return list of \u0027title\u0027 movies related\n// if name contains \u0027Carrie\u0027 we return list of \u0027title\u0027 and \u0027tagline\u0027 movies related\n// otherwise we return list of \u0027released\u0027 movies related\n\nMATCH (n:Person)\nCALL apoc.case([                // list of pairs (condition and query)\n  n.name \u003d \u0027Giandomenico Fracchia\u0027, \"RETURN [(n)-[]-(m:Movie) | m.title] as selection\",\n  n.name contains \u0027Carrie\u0027, \"RETURN [(n)-[]-(m:Movie) | \u0027title: \u0027 + m.title + \u0027, tagline: \u0027 + m.tagline] as selection\"],   \n  \u0027RETURN [(n)-[]-(m:Movie) | m.released] as selection\u0027,                                         \n  {n: n}\n)\nYIELD value\nRETURN n.name, value.selection as selection;",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:46.447",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "n.name0",
                        "visible": true,
                        "width": 200.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "selection1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "selection": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tselection\n\"Giandomenico Fracchia\"\t[null,\"Something\u0027s Gotta Give\",\"The Replacements\",\"Johnny Mnemonic\",\"The Devil\u0027s Advocate\",\"The Matrix Revolutions\",\"The Matrix Reloaded\",\"The Matrix\"]\n\"Carrie-Anne Moss\"\t[\"title: The Matrix Revolutions, tagline: Everything that has a beginning has an end\",\"title: The Matrix Reloaded, tagline: Free your mind\",\"title: The Matrix, tagline: Welcome to the Real World\"]\n\"Laurence Fishburne\"\t[2003,2003,1999]\n\"Hugo Weaving\"\t[2012,2006,2003,2003,1999]\n\"Lilly Wachowski\"\t[2008,2006,2008,2006,2009,2012,2003,2003,1999]\n\"Lana Wachowski\"\t[2008,2006,2006,2008,2012,2009,2003,2003,1999]\n\"Franco e Ciccio\"\t[2008,2006,2009,2003,2003,1999]\n\"Emil Eifrem\"\t[1999]\n\"Charlize Theron\"\t[1996,1997]\n\"Al Pacino\"\t[1997]\n\"Taylor Hackford\"\t[1997]\n\"Tom Cruise\"\t[2000,1986,1992]\n\"Jack Nicholson\"\t[1997,1975,2003,1992,1992]\n\"Demi Moore\"\t[1992]\n\"Kevin Bacon\"\t[1995,2008,1992]\n\"Kiefer Sutherland\"\t[1986,1992]\n\"Noah Wyle\"\t[1992]\n\"Cuba Gooding Jr.\"\t[1998,2000,1997,1992]\n\"Kevin Pollak\"\t[1992]\n\"J.T. Walsh\"\t[1992,1992]\n\"James Marshall\"\t[1992,2009,2006]\n\"Christopher Guest\"\t[1992]\n\"Rob Reiner\"\t[1986,1998,1998,1992]\n\"Aaron Sorkin\"\t[1992,1992]\n\"Kelly McGillis\"\t[1986]\n\"Val Kilmer\"\t[1986]\n\"Anthony Edwards\"\t[1986]\n\"Tom Skerritt\"\t[1986]\n\"Meg Ryan\"\t[1993,1998,1986,1998,1990]\n\"Tony Scott\"\t[1986]\n\"Jim Cash\"\t[1986]\n\"Renee Zellweger\"\t[2000]\n\"Kelly Preston\"\t[2000]\n\"Jerry O\u0027Connell\"\t[2000,1986]\n\"Jay Mohr\"\t[2000]\n\"Bonnie Hunt\"\t[1999,2000]\n\"Regina King\"\t[2000]\n\"Jonathan Lipnicki\"\t[2000]\n\"Cameron Crowe\"\t[2000,2000,2000]\n\"River Phoenix\"\t[1986]\n\"Corey Feldman\"\t[1986]\n\"Wil Wheaton\"\t[1986]\n\"John Cusack\"\t[1986]\n\"Marshall Bell\"\t[1986,2006]\n\"Helen Hunt\"\t[1997,2000,1996]\n\"Greg Kinnear\"\t[1998,1997]\n\"James L. Brooks\"\t[1997]\n\"Annabella Sciorra\"\t[1998]\n\"Max von Sydow\"\t[1998,1999]\n\"Werner Herzog\"\t[2006,1998]\n\"Robin Williams\"\t[1998,1999,1996]\n\"Vincent Ward\"\t[1998]\n\"Ethan Hawke\"\t[1999]\n\"Rick Yune\"\t[2009,1999]\n\"James Cromwell\"\t[1999,1999]\n\"Scott Hicks\"\t[1999]\n\"Parker Posey\"\t[1998]\n\"Dave Chappelle\"\t[1998]\n\"Steve Zahn\"\t[2006,1998]\n\"Tom Hanks\"\t[1995,1998,1992,1990,1996,2006,2012,2000,1999,1993,2004,2007,1996]\n\"Nora Ephron\"\t[1998,1998,1993,1998]\n\"Rita Wilson\"\t[1993]\n\"Bill Pullman\"\t[1993]\n\"Victor Garber\"\t[1993]\n\"Rosie O\u0027Donnell\"\t[1992,1993]\n\"John Patrick Stanley\"\t[1990]\n\"Nathan Lane\"\t[1990,1996]\n\"Billy Crystal\"\t[1998]\n\"Carrie Fisher\"\t[\"title: When Harry Met Sally, tagline: Can two friends sleep together and still love each other in the morning?\"]\n\"Bruno Kirby\"\t[1998]\n\"Liv Tyler\"\t[1996]\n\"Brooke Langton\"\t[2000]\n\"Gene Hackman\"\t[1992,1996,2000]\n\"Orlando Jones\"\t[2000]\n\"Howard Deutch\"\t[2000]\n\"Christian Bale\"\t[2006]\n\"Zach Grenier\"\t[2006,1996]\n\"Mike Nichols\"\t[1996,2007]\n\"Richard Harris\"\t[1992]\n\"Clint Eastwood\"\t[1992,1992]\n\"Takeshi Kitano\"\t[1995]\n\"Dina Meyer\"\t[1995]\n\"Ice-T\"\t[1995]\n\"Robert Longo\"\t[1995]\n\"Halle Berry\"\t[2012]\n\"Jim Broadbent\"\t[2012]\n\"Tom Tykwer\"\t[2012]\n\"David Mitchell\"\t[2012]\n\"Stefan Arndt\"\t[2012]\n\"Ian McKellen\"\t[2006]\n\"Audrey Tautou\"\t[2006]\n\"Paul Bettany\"\t[2006]\n\"Ron Howard\"\t[1995,2008,2006]\n\"Natalie Portman\"\t[2006]\n\"Stephen Rea\"\t[2006]\n\"John Hurt\"\t[2006]\n\"Ben Miles\"\t[2008,2009,2006]\n\"Emile Hirsch\"\t[2008]\n\"John Goodman\"\t[2008]\n\"Susan Sarandon\"\t[2008]\n\"Matthew Fox\"\t[2008]\n\"Christina Ricci\"\t[2008]\n\"Rain\"\t[2008,2009]\n\"Naomie Harris\"\t[2009]\n\"Michael Clarke Duncan\"\t[1999]\n\"David Morse\"\t[1999]\n\"Sam Rockwell\"\t[1999,2008]\n\"Gary Sinise\"\t[1995,1999]\n\"Patricia Clarkson\"\t[1999]\n\"Frank Darabont\"\t[1999]\n\"Frank Langella\"\t[2008]\n\"Michael Sheen\"\t[2008]\n\"Oliver Platt\"\t[2008,1999]\n\"Danny DeVito\"\t[1992,1992,1975]\n\"John C. Reilly\"\t[1992]\n\"Ed Harris\"\t[1995]\n\"Bill Paxton\"\t[1996,1992,1995]\n\"Philip Seymour Hoffman\"\t[1996,2007]\n\"Jan de Bont\"\t[1996]\n\"Robert Zemeckis\"\t[2000,2004]\n\"Milos Forman\"\t[1975]\n\"Diane Keaton\"\t[2003]\n\"Nancy Meyers\"\t[2003,2003,2003]\n\"Chris Columbus\"\t[1999]\n\"Julia Roberts\"\t[2007]\n\"Madonna\"\t[1992]\n\"Geena Davis\"\t[1992]\n\"Lori Petty\"\t[1992]\n\"Penny Marshall\"\t[1992]\n\"Paul Blythe\"\t[]\n\"Angela Scope\"\t[2000]\n\"Jessica Thompson\"\t[2006,2000,2000,2012,1996,1992]\n\"James Thompson\"\t[2000,2006]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635516834037_1307698025",
      "id": "paragraph_1635516834037_1307698025",
      "dateCreated": "2021-10-29 14:13:54.037",
      "dateStarted": "2022-03-22 13:31:46.465",
      "dateFinished": "2022-03-22 13:31:47.182",
      "status": "FINISHED"
    },
    {
      "title": "apoc.do.case",
      "text": "%neo4j\n\nMATCH (n:Person)\nCALL apoc.do.case([                // list of pairs (condition and query)\n  n.name \u003d \u0027Giandomenico Fracchia\u0027, \"WITH $n as n CREATE (n)-[:MY_CASE_REL]-\u003e(:MyCaseNode {myId: 1})\",\n  n.name contains \u0027Carrie\u0027, \"WITH $n as n CREATE (n)-[:MY_CASE_REL]-\u003e(:MyCaseNode {myId: 2})\"],   \n  \u0027\u0027,                                         \n  {n: n}\n)\nYIELD value RETURN n.name;",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:51.300",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\n\"Laurence Fishburne\"\n\"Hugo Weaving\"\n\"Lilly Wachowski\"\n\"Lana Wachowski\"\n\"Franco e Ciccio\"\n\"Emil Eifrem\"\n\"Charlize Theron\"\n\"Al Pacino\"\n\"Taylor Hackford\"\n\"Tom Cruise\"\n\"Jack Nicholson\"\n\"Demi Moore\"\n\"Kevin Bacon\"\n\"Kiefer Sutherland\"\n\"Noah Wyle\"\n\"Cuba Gooding Jr.\"\n\"Kevin Pollak\"\n\"J.T. Walsh\"\n\"James Marshall\"\n\"Christopher Guest\"\n\"Rob Reiner\"\n\"Aaron Sorkin\"\n\"Kelly McGillis\"\n\"Val Kilmer\"\n\"Anthony Edwards\"\n\"Tom Skerritt\"\n\"Meg Ryan\"\n\"Tony Scott\"\n\"Jim Cash\"\n\"Renee Zellweger\"\n\"Kelly Preston\"\n\"Jerry O\u0027Connell\"\n\"Jay Mohr\"\n\"Bonnie Hunt\"\n\"Regina King\"\n\"Jonathan Lipnicki\"\n\"Cameron Crowe\"\n\"River Phoenix\"\n\"Corey Feldman\"\n\"Wil Wheaton\"\n\"John Cusack\"\n\"Marshall Bell\"\n\"Helen Hunt\"\n\"Greg Kinnear\"\n\"James L. Brooks\"\n\"Annabella Sciorra\"\n\"Max von Sydow\"\n\"Werner Herzog\"\n\"Robin Williams\"\n\"Vincent Ward\"\n\"Ethan Hawke\"\n\"Rick Yune\"\n\"James Cromwell\"\n\"Scott Hicks\"\n\"Parker Posey\"\n\"Dave Chappelle\"\n\"Steve Zahn\"\n\"Tom Hanks\"\n\"Nora Ephron\"\n\"Rita Wilson\"\n\"Bill Pullman\"\n\"Victor Garber\"\n\"Rosie O\u0027Donnell\"\n\"John Patrick Stanley\"\n\"Nathan Lane\"\n\"Billy Crystal\"\n\"Bruno Kirby\"\n\"Liv Tyler\"\n\"Brooke Langton\"\n\"Gene Hackman\"\n\"Orlando Jones\"\n\"Howard Deutch\"\n\"Christian Bale\"\n\"Zach Grenier\"\n\"Mike Nichols\"\n\"Richard Harris\"\n\"Clint Eastwood\"\n\"Takeshi Kitano\"\n\"Dina Meyer\"\n\"Ice-T\"\n\"Robert Longo\"\n\"Halle Berry\"\n\"Jim Broadbent\"\n\"Tom Tykwer\"\n\"David Mitchell\"\n\"Stefan Arndt\"\n\"Ian McKellen\"\n\"Audrey Tautou\"\n\"Paul Bettany\"\n\"Ron Howard\"\n\"Natalie Portman\"\n\"Stephen Rea\"\n\"John Hurt\"\n\"Ben Miles\"\n\"Emile Hirsch\"\n\"John Goodman\"\n\"Susan Sarandon\"\n\"Matthew Fox\"\n\"Christina Ricci\"\n\"Rain\"\n\"Naomie Harris\"\n\"Michael Clarke Duncan\"\n\"David Morse\"\n\"Sam Rockwell\"\n\"Gary Sinise\"\n\"Patricia Clarkson\"\n\"Frank Darabont\"\n\"Frank Langella\"\n\"Michael Sheen\"\n\"Oliver Platt\"\n\"Danny DeVito\"\n\"John C. Reilly\"\n\"Ed Harris\"\n\"Bill Paxton\"\n\"Philip Seymour Hoffman\"\n\"Jan de Bont\"\n\"Robert Zemeckis\"\n\"Milos Forman\"\n\"Diane Keaton\"\n\"Nancy Meyers\"\n\"Chris Columbus\"\n\"Julia Roberts\"\n\"Madonna\"\n\"Geena Davis\"\n\"Lori Petty\"\n\"Penny Marshall\"\n\"Paul Blythe\"\n\"Angela Scope\"\n\"Jessica Thompson\"\n\"James Thompson\"\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635516847536_392308208",
      "id": "paragraph_1635516847536_392308208",
      "dateCreated": "2021-10-29 14:14:07.536",
      "dateStarted": "2022-03-22 13:31:51.317",
      "dateFinished": "2022-03-22 13:31:51.655",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\n\nmatch (n)-[:MY_CASE_REL]-\u003e(m:MyCaseNode)\nreturn n.name, m.myId",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:31:53.367",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "m.myId": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tm.myId\n\"Giandomenico Fracchia\"\t1\n\"Carrie-Anne Moss\"\t2\n\"Carrie Fisher\"\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636296350644_1972086368",
      "id": "paragraph_1636296350644_1972086368",
      "dateCreated": "2021-11-07 14:45:50.644",
      "dateStarted": "2022-03-22 13:31:53.381",
      "dateFinished": "2022-03-22 13:31:53.462",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\n## Conditional exception\n\nApoc also provide a procedure to raise an exception with a specific message when predicate is false.\n\n\u003cpre\u003e\napoc.util.validate(predicate, message, params) - if the `predicate` is true raise an exception with `message`.\n\u003c/pre\u003e\n\n\nWe have also `apoc.util.validatePredicate(predicate, message, params)`, equivalent but it\u0027s a function.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 13:19:12.393",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eConditional exception\u003c/h2\u003e\n\u003cp\u003eApoc also provide a procedure to raise an exception with a specific message when predicate is false.\u003c/p\u003e\n\u003cpre\u003e\napoc.util.validate(predicate, message, params) - if the `predicate` is true raise an exception with `message`.\n\u003c/pre\u003e\n\u003cp\u003eWe have also \u003ccode\u003eapoc.util.validatePredicate(predicate, message, params)\u003c/code\u003e, equivalent but it\u0026rsquo;s a function.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635865337623_10689460",
      "id": "paragraph_1635865337623_10689460",
      "dateCreated": "2021-11-02 15:02:17.623",
      "dateStarted": "2021-11-24 13:19:12.393",
      "dateFinished": "2021-11-24 13:19:12.406",
      "status": "FINISHED"
    },
    {
      "title": "apoc.util.validate",
      "text": "%neo4j\nMATCH (n:Person) WITH n.name \u003d \u0027Giandomenico Fracchia\u0027 as booleanPredicate, n\nCALL apoc.util.validate(booleanPredicate,\u0027Person with name %s found\u0027,[n.name])\nRETURN count(*)",
      "user": "anonymous",
      "dateUpdated": "2022-03-21 13:22:23.143",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.0057,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "count(*)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Failed to invoke procedure `apoc.util.validate`: Caused by: java.lang.RuntimeException: Person with name Giandomenico Fracchia found"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636043842236_1223515060",
      "id": "paragraph_1636043842236_1223515060",
      "dateCreated": "2021-11-04 16:37:22.237",
      "dateStarted": "2022-03-21 13:22:23.161",
      "dateFinished": "2022-03-21 13:22:23.359",
      "status": "ERROR"
    },
    {
      "title": "apoc.util.validate",
      "text": "%neo4j\nMATCH (n:Person) WITH n.name \u003d \u0027Not Existent\u0027 as booleanPredicate, n\nCALL apoc.util.validate(booleanPredicate,\u0027Person with name %s found\u0027,[n.name])\nRETURN count(*)",
      "user": "anonymous",
      "dateUpdated": "2022-03-21 13:22:24.949",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.0057,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "count(*)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "count(*)\n133\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636297212424_2097832834",
      "id": "paragraph_1636297212424_2097832834",
      "dateCreated": "2021-11-07 15:00:12.424",
      "dateStarted": "2022-03-21 13:22:24.964",
      "dateFinished": "2022-03-21 13:22:25.040",
      "status": "FINISHED"
    },
    {
      "title": "apoc.util.validatePredicate",
      "text": "%md\n\nEquivalent to apoc.util.validate but is a function\n\n```\nMATCH (a:Person)\nWHERE apoc.util.validatePredicate(true,\u0027Person with name %s found\u0027,[n.name])\nRETURN a\n```",
      "user": "anonymous",
      "dateUpdated": "2022-03-21 13:23:37.984",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "born": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eEquivalent to apoc.util.validate but is a function\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eMATCH (a:Person)\nWHERE apoc.util.validatePredicate(true,\u0027Person with name %s found\u0027,[n.name])\nRETURN a\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636043895936_231881876",
      "id": "paragraph_1636043895936_231881876",
      "dateCreated": "2021-11-04 16:38:15.936",
      "dateStarted": "2021-11-18 10:19:22.967",
      "dateFinished": "2021-11-18 10:19:22.991",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Batching data\n\nApoc provides some procedures to split the data in batches to handle performance and memory issues:\n- `apoc.periodic.iterate`\n- `apoc.periodic.commit`\n- `apoc.periodic.truncate`\n\nThe `apoc.periodic.iterate(data-driven, operation, $config)` procedure is helpful when you need to handle large amounts of data for import, refactoring, and other cases that require large transactions. \n\nIt provides a way to batch the data by dividing the workload into two parts:\n\n- a `data-driven` statement: This defines how you select what data needs handled. You can provide a Cypher statement to select from existing graph data, read external data from a file or API, or retrieve data from another datastore.\n- an `operation` statement: This defines what you want done to the selected data. You can do things like execute Cypher for updating or creating/deleting the data or run other procedures to manipulate and transform values before loading.\n\nThe data-driven statement is provided as the first statement that results in a stream of values to be processed. \nThe results of the data-driven statement are passed to the operation statement as parameters and the operation statement is provided as the second statement to process one element at a time or a batch at a time\n\nWe can use the following configurations as 3rd parameter:\n\n- `batchSize (default: 10000)` - run the specified number of operation statements in a single transaction\n- `parallel (default: false)` - run operation statements in paralle\n- `retries (default: 0)` - if the operation statement fails with an error, sleep 100ms and retry until retries-count is reached\n- `batchMode (default: \"BATCH\")` - how data-driven statements should be processed by operation statement. See below\n- `params (default: EmtpyMap)` - externally pass in map of params\n- `concurrency (default: 50)` - number of concurrent tasks are generated when using `parallel:true`\n\n\u003cpre\u003e\nFor complex operations like updating or removing relationships, \neither do not use `parallel: true` or make sure that you batch the work in a way that each subgraph of data is updated in one operation,\notherwise might deadlock due to conflicts [same relationship updated twice]\n\u003c/pre\u003e\n\n`batchMode` can have 3 values. \n`SINGLE` to perform one operation at a time. \nBoth `BATCH` and `BATCH_SINGLE` execute operation statement once per batchSize and the results of data-driven statement will be grouped in a `$_batch`. For example, in this case:\n\n| first      | second |\n| ----------- | ----------- | \n| alpha      | beta       | \n| gamma   | delta        |\n| ...        | ... |\n\n`$_batch` will be a list of maps: `[{first: \u0027alpha\u0027, second: \u0027beta\u0027} , {first: \u0027gamma\u0027, second: \u0027delta\u0027}  .....]`\n\n\nBut with `BATCH` will be executed an unpacking of batch, that is:\n\n\u003cpre\u003e\nUNWIND $_batch AS _batch\nWITH _batch.field1 AS field1, _batch.field2 AS field2\n\u003c/pre\u003e\n\nInstead with `BATCH_SINGLE` the unpacking have to be executed into the operation statement.\nThe operation query can access the batched values via the `$_batch` parameter.\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:32:13.803",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eBatching data\u003c/h1\u003e\n\u003cp\u003eApoc provides some procedures to split the data in batches to handle performance and memory issues:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.periodic.iterate\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.periodic.commit\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.periodic.truncate\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe \u003ccode\u003eapoc.periodic.iterate(data-driven, operation, $config)\u003c/code\u003e procedure is helpful when you need to handle large amounts of data for import, refactoring, and other cases that require large transactions.\u003c/p\u003e\n\u003cp\u003eIt provides a way to batch the data by dividing the workload into two parts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ea \u003ccode\u003edata-driven\u003c/code\u003e statement: This defines how you select what data needs handled. You can provide a Cypher statement to select from existing graph data, read external data from a file or API, or retrieve data from another datastore.\u003c/li\u003e\n\u003cli\u003ean \u003ccode\u003eoperation\u003c/code\u003e statement: This defines what you want done to the selected data. You can do things like execute Cypher for updating or creating/deleting the data or run other procedures to manipulate and transform values before loading.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe data-driven statement is provided as the first statement that results in a stream of values to be processed.\u003cbr /\u003e\nThe results of the data-driven statement are passed to the operation statement as parameters and the operation statement is provided as the second statement to process one element at a time or a batch at a time\u003c/p\u003e\n\u003cp\u003eWe can use the following configurations as 3rd parameter:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebatchSize (default: 10000)\u003c/code\u003e - run the specified number of operation statements in a single transaction\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eparallel (default: false)\u003c/code\u003e - run operation statements in paralle\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eretries (default: 0)\u003c/code\u003e - if the operation statement fails with an error, sleep 100ms and retry until retries-count is reached\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebatchMode (default: \u0026quot;BATCH\u0026quot;)\u003c/code\u003e - how data-driven statements should be processed by operation statement. See below\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eparams (default: EmtpyMap)\u003c/code\u003e - externally pass in map of params\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econcurrency (default: 50)\u003c/code\u003e - number of concurrent tasks are generated when using \u003ccode\u003eparallel:true\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\nFor complex operations like updating or removing relationships, \neither do not use `parallel: true` or make sure that you batch the work in a way that each subgraph of data is updated in one operation,\notherwise might deadlock due to conflicts [same relationship updated twice]\n\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003ebatchMode\u003c/code\u003e can have 3 values.\u003cbr /\u003e\n\u003ccode\u003eSINGLE\u003c/code\u003e to perform one operation at a time.\u003cbr /\u003e\nBoth \u003ccode\u003eBATCH\u003c/code\u003e and \u003ccode\u003eBATCH_SINGLE\u003c/code\u003e execute operation statement once per batchSize and the results of data-driven statement will be grouped in a \u003ccode\u003e$_batch\u003c/code\u003e. For example, in this case:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\u003cth\u003efirst\u003c/th\u003e\u003cth\u003esecond\u003c/th\u003e\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\u003ctd\u003ealpha\u003c/td\u003e\u003ctd\u003ebeta\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003egamma\u003c/td\u003e\u003ctd\u003edelta\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e\u0026hellip;\u003c/td\u003e\u003ctd\u003e\u0026hellip;\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003ccode\u003e$_batch\u003c/code\u003e will be a list of maps: \u003ccode\u003e[{first: \u0027alpha\u0027, second: \u0027beta\u0027} , {first: \u0027gamma\u0027, second: \u0027delta\u0027} .....]\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eBut with \u003ccode\u003eBATCH\u003c/code\u003e will be executed an unpacking of batch, that is:\u003c/p\u003e\n\u003cpre\u003e\nUNWIND $_batch AS _batch\nWITH _batch.field1 AS field1, _batch.field2 AS field2\n\u003c/pre\u003e\n\u003cp\u003eInstead with \u003ccode\u003eBATCH_SINGLE\u003c/code\u003e the unpacking have to be executed into the operation statement.\u003cbr /\u003e\nThe operation query can access the batched values via the \u003ccode\u003e$_batch\u003c/code\u003e parameter.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635518181245_851865146",
      "id": "paragraph_1635518181245_851865146",
      "dateCreated": "2021-10-29 14:36:21.246",
      "dateStarted": "2022-03-22 13:32:13.804",
      "dateFinished": "2022-03-22 13:32:13.879",
      "status": "FINISHED"
    },
    {
      "title": "BATCH mode",
      "text": "%neo4j\n\ncall apoc.periodic.iterate(\n  \"UNWIND range(1,9999) as id RETURN id\",\n  \"CREATE (:NodePeriodic {id: id, time: timestamp()})-[rel:MY_PERIODIC_REL]-\u003e(:End {id: id})\", // this is a single element of batch UNWINDed\n  {batchMode: \u0027BATCH\u0027,batchSize:10, parallel:false})\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:32:50.494",
      "config": {
        "colWidth": 9.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 228.011,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "batches": "string",
                      "total": "string",
                      "timeTaken": "string",
                      "committedOperations": "string",
                      "failedOperations": "string",
                      "failedBatches": "string",
                      "retries": "string",
                      "batch.total": "string",
                      "batch.committed": "string",
                      "batch.failed": "string",
                      "operations.total": "string",
                      "operations.committed": "string",
                      "operations.failed": "string",
                      "wasTerminated": "string",
                      "updateStatistics.nodesDeleted": "string",
                      "updateStatistics.labelsAdded": "string",
                      "updateStatistics.relationshipsCreated": "string",
                      "updateStatistics.nodesCreated": "string",
                      "updateStatistics.propertiesSet": "string",
                      "updateStatistics.relationshipsDeleted": "string",
                      "updateStatistics.labelsRemoved": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "batches\ttotal\ttimeTaken\tcommittedOperations\tfailedOperations\tfailedBatches\tretries\tbatch.total\tbatch.committed\tbatch.failed\toperations.total\toperations.committed\toperations.failed\twasTerminated\tupdateStatistics.nodesDeleted\tupdateStatistics.labelsAdded\tupdateStatistics.relationshipsCreated\tupdateStatistics.nodesCreated\tupdateStatistics.propertiesSet\tupdateStatistics.relationshipsDeleted\tupdateStatistics.labelsRemoved\n1000\t9999\t4\t9999\t0\t0\t0\t1000\t1000\t0\t9999\t9999\t0\tFALSE\t0\t19998\t9999\t19998\t29997\t0\t0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635847089976_739455528",
      "id": "paragraph_1635847089976_739455528",
      "dateCreated": "2021-11-02 09:58:09.976",
      "dateStarted": "2022-03-22 13:32:50.518",
      "dateFinished": "2022-03-22 13:32:55.407",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\n\nmatch (s:NodePeriodic) \nreturn count(s);",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:32:58.181",
      "config": {
        "colWidth": 3.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 244.006,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "count(s)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "count(s)\n9999\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635847187269_311493915",
      "id": "paragraph_1635847187269_311493915",
      "dateCreated": "2021-11-02 09:59:47.269",
      "dateStarted": "2022-03-22 13:32:58.198",
      "dateFinished": "2022-03-22 13:32:58.252",
      "status": "FINISHED"
    },
    {
      "title": " apoc.periodic.iterate with BATCH_SINGLE",
      "text": "%neo4j\n\nunwind range(1,1000) as id create (:Start {myProp: id});\n\n// the `$_batch` is [{n: Node(1)}, {n: Node(2)}, ....]\nCALL apoc.periodic.iterate(\n  \"MATCH (n:Start) RETURN n\",\n  \"WITH $_batch as b CREATE (batch:Batch) set batch.prop \u003d [item in b | item.n.myProp]\", // we create for each batch a list of \u0027myProp\u0027s\n  {batchMode: \u0027BATCH_SINGLE\u0027,batchSize:10, parallel:false})\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:33:00.707",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 134.006,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "batches": "string",
                      "total": "string",
                      "timeTaken": "string",
                      "committedOperations": "string",
                      "failedOperations": "string",
                      "failedBatches": "string",
                      "retries": "string",
                      "batch.total": "string",
                      "batch.committed": "string",
                      "batch.failed": "string",
                      "operations.total": "string",
                      "operations.committed": "string",
                      "operations.failed": "string",
                      "wasTerminated": "string",
                      "updateStatistics.nodesDeleted": "string",
                      "updateStatistics.labelsAdded": "string",
                      "updateStatistics.relationshipsCreated": "string",
                      "updateStatistics.nodesCreated": "string",
                      "updateStatistics.propertiesSet": "string",
                      "updateStatistics.relationshipsDeleted": "string",
                      "updateStatistics.labelsRemoved": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "batches\ttotal\ttimeTaken\tcommittedOperations\tfailedOperations\tfailedBatches\tretries\tbatch.total\tbatch.committed\tbatch.failed\toperations.total\toperations.committed\toperations.failed\twasTerminated\tupdateStatistics.nodesDeleted\tupdateStatistics.labelsAdded\tupdateStatistics.relationshipsCreated\tupdateStatistics.nodesCreated\tupdateStatistics.propertiesSet\tupdateStatistics.relationshipsDeleted\tupdateStatistics.labelsRemoved\n100\t1000\t0\t1000\t0\t0\t0\t100\t100\t0\t1000\t1000\t0\tFALSE\t0\t100\t0\t100\t100\t0\t0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635518708818_1857499773",
      "id": "paragraph_1635518708818_1857499773",
      "dateCreated": "2021-10-29 14:45:08.818",
      "dateStarted": "2022-03-22 13:33:00.728",
      "dateFinished": "2022-03-22 13:33:01.249",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\n\nMATCH (n:Batch) return n",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:33:17.025",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "id0",
                        "visible": true,
                        "width": 150.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "label1",
                        "visible": true,
                        "width": 307.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prop2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "prop": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":21306,\"data\":{\"prop\":[1,2,3,4,5,6,7,8,9,10]},\"label\":\"Batch\"},{\"id\":21307,\"data\":{\"prop\":[11,12,13,14,15,16,17,18,19,20]},\"label\":\"Batch\"},{\"id\":21308,\"data\":{\"prop\":[21,22,23,24,25,26,27,28,29,30]},\"label\":\"Batch\"},{\"id\":21309,\"data\":{\"prop\":[31,32,33,34,35,36,37,38,39,40]},\"label\":\"Batch\"},{\"id\":21310,\"data\":{\"prop\":[41,42,43,44,45,46,47,48,49,50]},\"label\":\"Batch\"},{\"id\":21311,\"data\":{\"prop\":[51,52,53,54,55,56,57,58,59,60]},\"label\":\"Batch\"},{\"id\":21312,\"data\":{\"prop\":[61,62,63,64,65,66,67,68,69,70]},\"label\":\"Batch\"},{\"id\":21313,\"data\":{\"prop\":[71,72,73,74,75,76,77,78,79,80]},\"label\":\"Batch\"},{\"id\":21314,\"data\":{\"prop\":[81,82,83,84,85,86,87,88,89,90]},\"label\":\"Batch\"},{\"id\":21315,\"data\":{\"prop\":[91,92,93,94,95,96,97,98,99,100]},\"label\":\"Batch\"},{\"id\":21316,\"data\":{\"prop\":[101,102,103,104,105,106,107,108,109,110]},\"label\":\"Batch\"},{\"id\":21317,\"data\":{\"prop\":[111,112,113,114,115,116,117,118,119,120]},\"label\":\"Batch\"},{\"id\":21318,\"data\":{\"prop\":[121,122,123,124,125,126,127,128,129,130]},\"label\":\"Batch\"},{\"id\":21319,\"data\":{\"prop\":[131,132,133,134,135,136,137,138,139,140]},\"label\":\"Batch\"},{\"id\":21320,\"data\":{\"prop\":[141,142,143,144,145,146,147,148,149,150]},\"label\":\"Batch\"},{\"id\":21321,\"data\":{\"prop\":[151,152,153,154,155,156,157,158,159,160]},\"label\":\"Batch\"},{\"id\":21322,\"data\":{\"prop\":[161,162,163,164,165,166,167,168,169,170]},\"label\":\"Batch\"},{\"id\":21323,\"data\":{\"prop\":[171,172,173,174,175,176,177,178,179,180]},\"label\":\"Batch\"},{\"id\":21324,\"data\":{\"prop\":[181,182,183,184,185,186,187,188,189,190]},\"label\":\"Batch\"},{\"id\":21325,\"data\":{\"prop\":[191,192,193,194,195,196,197,198,199,200]},\"label\":\"Batch\"},{\"id\":21326,\"data\":{\"prop\":[201,202,203,204,205,206,207,208,209,210]},\"label\":\"Batch\"},{\"id\":21327,\"data\":{\"prop\":[211,212,213,214,215,216,217,218,219,220]},\"label\":\"Batch\"},{\"id\":21328,\"data\":{\"prop\":[221,222,223,224,225,226,227,228,229,230]},\"label\":\"Batch\"},{\"id\":21329,\"data\":{\"prop\":[231,232,233,234,235,236,237,238,239,240]},\"label\":\"Batch\"},{\"id\":21330,\"data\":{\"prop\":[241,242,243,244,245,246,247,248,249,250]},\"label\":\"Batch\"},{\"id\":21331,\"data\":{\"prop\":[251,252,253,254,255,256,257,258,259,260]},\"label\":\"Batch\"},{\"id\":21332,\"data\":{\"prop\":[261,262,263,264,265,266,267,268,269,270]},\"label\":\"Batch\"},{\"id\":21333,\"data\":{\"prop\":[271,272,273,274,275,276,277,278,279,280]},\"label\":\"Batch\"},{\"id\":21334,\"data\":{\"prop\":[281,282,283,284,285,286,287,288,289,290]},\"label\":\"Batch\"},{\"id\":21335,\"data\":{\"prop\":[291,292,293,294,295,296,297,298,299,300]},\"label\":\"Batch\"},{\"id\":21336,\"data\":{\"prop\":[301,302,303,304,305,306,307,308,309,310]},\"label\":\"Batch\"},{\"id\":21337,\"data\":{\"prop\":[311,312,313,314,315,316,317,318,319,320]},\"label\":\"Batch\"},{\"id\":21338,\"data\":{\"prop\":[321,322,323,324,325,326,327,328,329,330]},\"label\":\"Batch\"},{\"id\":21339,\"data\":{\"prop\":[331,332,333,334,335,336,337,338,339,340]},\"label\":\"Batch\"},{\"id\":21340,\"data\":{\"prop\":[341,342,343,344,345,346,347,348,349,350]},\"label\":\"Batch\"},{\"id\":21341,\"data\":{\"prop\":[351,352,353,354,355,356,357,358,359,360]},\"label\":\"Batch\"},{\"id\":21342,\"data\":{\"prop\":[361,362,363,364,365,366,367,368,369,370]},\"label\":\"Batch\"},{\"id\":21343,\"data\":{\"prop\":[371,372,373,374,375,376,377,378,379,380]},\"label\":\"Batch\"},{\"id\":21344,\"data\":{\"prop\":[381,382,383,384,385,386,387,388,389,390]},\"label\":\"Batch\"},{\"id\":21345,\"data\":{\"prop\":[391,392,393,394,395,396,397,398,399,400]},\"label\":\"Batch\"},{\"id\":21346,\"data\":{\"prop\":[401,402,403,404,405,406,407,408,409,410]},\"label\":\"Batch\"},{\"id\":21347,\"data\":{\"prop\":[411,412,413,414,415,416,417,418,419,420]},\"label\":\"Batch\"},{\"id\":21348,\"data\":{\"prop\":[421,422,423,424,425,426,427,428,429,430]},\"label\":\"Batch\"},{\"id\":21349,\"data\":{\"prop\":[431,432,433,434,435,436,437,438,439,440]},\"label\":\"Batch\"},{\"id\":21350,\"data\":{\"prop\":[441,442,443,444,445,446,447,448,449,450]},\"label\":\"Batch\"},{\"id\":21351,\"data\":{\"prop\":[451,452,453,454,455,456,457,458,459,460]},\"label\":\"Batch\"},{\"id\":21352,\"data\":{\"prop\":[461,462,463,464,465,466,467,468,469,470]},\"label\":\"Batch\"},{\"id\":21353,\"data\":{\"prop\":[471,472,473,474,475,476,477,478,479,480]},\"label\":\"Batch\"},{\"id\":21354,\"data\":{\"prop\":[481,482,483,484,485,486,487,488,489,490]},\"label\":\"Batch\"},{\"id\":21355,\"data\":{\"prop\":[491,492,493,494,495,496,497,498,499,500]},\"label\":\"Batch\"},{\"id\":21356,\"data\":{\"prop\":[501,502,503,504,505,506,507,508,509,510]},\"label\":\"Batch\"},{\"id\":21357,\"data\":{\"prop\":[511,512,513,514,515,516,517,518,519,520]},\"label\":\"Batch\"},{\"id\":21358,\"data\":{\"prop\":[521,522,523,524,525,526,527,528,529,530]},\"label\":\"Batch\"},{\"id\":21359,\"data\":{\"prop\":[531,532,533,534,535,536,537,538,539,540]},\"label\":\"Batch\"},{\"id\":21360,\"data\":{\"prop\":[541,542,543,544,545,546,547,548,549,550]},\"label\":\"Batch\"},{\"id\":21361,\"data\":{\"prop\":[551,552,553,554,555,556,557,558,559,560]},\"label\":\"Batch\"},{\"id\":21362,\"data\":{\"prop\":[561,562,563,564,565,566,567,568,569,570]},\"label\":\"Batch\"},{\"id\":21363,\"data\":{\"prop\":[571,572,573,574,575,576,577,578,579,580]},\"label\":\"Batch\"},{\"id\":21364,\"data\":{\"prop\":[581,582,583,584,585,586,587,588,589,590]},\"label\":\"Batch\"},{\"id\":21365,\"data\":{\"prop\":[591,592,593,594,595,596,597,598,599,600]},\"label\":\"Batch\"},{\"id\":21366,\"data\":{\"prop\":[601,602,603,604,605,606,607,608,609,610]},\"label\":\"Batch\"},{\"id\":21367,\"data\":{\"prop\":[611,612,613,614,615,616,617,618,619,620]},\"label\":\"Batch\"},{\"id\":21368,\"data\":{\"prop\":[621,622,623,624,625,626,627,628,629,630]},\"label\":\"Batch\"},{\"id\":21369,\"data\":{\"prop\":[631,632,633,634,635,636,637,638,639,640]},\"label\":\"Batch\"},{\"id\":21370,\"data\":{\"prop\":[641,642,643,644,645,646,647,648,649,650]},\"label\":\"Batch\"},{\"id\":21371,\"data\":{\"prop\":[651,652,653,654,655,656,657,658,659,660]},\"label\":\"Batch\"},{\"id\":21372,\"data\":{\"prop\":[661,662,663,664,665,666,667,668,669,670]},\"label\":\"Batch\"},{\"id\":21373,\"data\":{\"prop\":[671,672,673,674,675,676,677,678,679,680]},\"label\":\"Batch\"},{\"id\":21374,\"data\":{\"prop\":[681,682,683,684,685,686,687,688,689,690]},\"label\":\"Batch\"},{\"id\":21375,\"data\":{\"prop\":[691,692,693,694,695,696,697,698,699,700]},\"label\":\"Batch\"},{\"id\":21376,\"data\":{\"prop\":[701,702,703,704,705,706,707,708,709,710]},\"label\":\"Batch\"},{\"id\":21377,\"data\":{\"prop\":[711,712,713,714,715,716,717,718,719,720]},\"label\":\"Batch\"},{\"id\":21378,\"data\":{\"prop\":[721,722,723,724,725,726,727,728,729,730]},\"label\":\"Batch\"},{\"id\":21379,\"data\":{\"prop\":[731,732,733,734,735,736,737,738,739,740]},\"label\":\"Batch\"},{\"id\":21380,\"data\":{\"prop\":[741,742,743,744,745,746,747,748,749,750]},\"label\":\"Batch\"},{\"id\":21381,\"data\":{\"prop\":[751,752,753,754,755,756,757,758,759,760]},\"label\":\"Batch\"},{\"id\":21382,\"data\":{\"prop\":[761,762,763,764,765,766,767,768,769,770]},\"label\":\"Batch\"},{\"id\":21383,\"data\":{\"prop\":[771,772,773,774,775,776,777,778,779,780]},\"label\":\"Batch\"},{\"id\":21384,\"data\":{\"prop\":[781,782,783,784,785,786,787,788,789,790]},\"label\":\"Batch\"},{\"id\":21385,\"data\":{\"prop\":[791,792,793,794,795,796,797,798,799,800]},\"label\":\"Batch\"},{\"id\":21386,\"data\":{\"prop\":[801,802,803,804,805,806,807,808,809,810]},\"label\":\"Batch\"},{\"id\":21387,\"data\":{\"prop\":[811,812,813,814,815,816,817,818,819,820]},\"label\":\"Batch\"},{\"id\":21388,\"data\":{\"prop\":[821,822,823,824,825,826,827,828,829,830]},\"label\":\"Batch\"},{\"id\":21389,\"data\":{\"prop\":[831,832,833,834,835,836,837,838,839,840]},\"label\":\"Batch\"},{\"id\":21390,\"data\":{\"prop\":[841,842,843,844,845,846,847,848,849,850]},\"label\":\"Batch\"},{\"id\":21391,\"data\":{\"prop\":[851,852,853,854,855,856,857,858,859,860]},\"label\":\"Batch\"},{\"id\":21392,\"data\":{\"prop\":[861,862,863,864,865,866,867,868,869,870]},\"label\":\"Batch\"},{\"id\":21393,\"data\":{\"prop\":[871,872,873,874,875,876,877,878,879,880]},\"label\":\"Batch\"},{\"id\":21394,\"data\":{\"prop\":[881,882,883,884,885,886,887,888,889,890]},\"label\":\"Batch\"},{\"id\":21395,\"data\":{\"prop\":[891,892,893,894,895,896,897,898,899,900]},\"label\":\"Batch\"},{\"id\":21396,\"data\":{\"prop\":[901,902,903,904,905,906,907,908,909,910]},\"label\":\"Batch\"},{\"id\":21397,\"data\":{\"prop\":[911,912,913,914,915,916,917,918,919,920]},\"label\":\"Batch\"},{\"id\":21398,\"data\":{\"prop\":[921,922,923,924,925,926,927,928,929,930]},\"label\":\"Batch\"},{\"id\":21399,\"data\":{\"prop\":[931,932,933,934,935,936,937,938,939,940]},\"label\":\"Batch\"},{\"id\":21400,\"data\":{\"prop\":[941,942,943,944,945,946,947,948,949,950]},\"label\":\"Batch\"},{\"id\":21401,\"data\":{\"prop\":[951,952,953,954,955,956,957,958,959,960]},\"label\":\"Batch\"},{\"id\":21402,\"data\":{\"prop\":[961,962,963,964,965,966,967,968,969,970]},\"label\":\"Batch\"},{\"id\":21403,\"data\":{\"prop\":[971,972,973,974,975,976,977,978,979,980]},\"label\":\"Batch\"},{\"id\":21404,\"data\":{\"prop\":[981,982,983,984,985,986,987,988,989,990]},\"label\":\"Batch\"},{\"id\":21405,\"data\":{\"prop\":[991,992,993,994,995,996,997,998,999,1000]},\"label\":\"Batch\"}],\"edges\":[],\"labels\":{\"Movie\":\"#522A50\",\"Person\":\"#4907F5\",\"NotFracchia\":\"#E86E21\",\"MyCaseNode\":\"#325DC5\",\"NodePeriodic\":\"#23F440\",\"End\":\"#0C644A\",\"Start\":\"#77B986\",\"Batch\":\"#9A6C66\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635846293577_421797261",
      "id": "paragraph_1635846293577_421797261",
      "dateCreated": "2021-11-02 09:44:53.578",
      "dateStarted": "2022-03-22 13:33:17.043",
      "dateFinished": "2022-03-22 13:33:17.163",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### Periodic commit\n\nEspecially for graph processing it is useful to run a query repeatedly in separate transactions until it doesn’t generates any results anymore. \n\nIn this case, we can use `apoc.periodic.commit(query, $param)`, \nwith which the query is executed in separate transactions until it returns `0`.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 13:19:18.332",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePeriodic commit\u003c/h3\u003e\n\u003cp\u003eEspecially for graph processing it is useful to run a query repeatedly in separate transactions until it doesn’t generates any results anymore.\u003c/p\u003e\n\u003cp\u003eIn this case, we can use \u003ccode\u003eapoc.periodic.commit(query, $param)\u003c/code\u003e,\u003cbr /\u003e\nwith which the query is executed in separate transactions until it returns \u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635518388146_1831838883",
      "id": "paragraph_1635518388146_1831838883",
      "dateCreated": "2021-10-29 14:39:48.146",
      "dateStarted": "2021-11-24 13:19:18.333",
      "dateFinished": "2021-11-24 13:19:18.343",
      "status": "FINISHED"
    },
    {
      "title": "apoc.periodic.commit",
      "text": "%neo4j\n\n// apoc.periodic.commit must contain a LIMIT clause to batch results\n// we limit the result\n// note: apoc.create.uuid() is a simple function which generate an UUID, e.g. \u00273a4500b3-350e-43e9-aadb-d839eeb23b62\u0027\nCALL apoc.periodic.commit(\n    \"MATCH (person:Person) WHERE NOT exists(person.uuid) with person LIMIT $limit  SET person.uuid \u003d apoc.create.uuid() RETURN count(*)\", // until count is 0, we continue the execution\n  {limit:10})",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:34:19.430",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88.0114,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "updates": "string",
                      "executions": "string",
                      "runtime": "string",
                      "batches": "string",
                      "failedBatches": "string",
                      "failedCommits": "string",
                      "wasTerminated": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "updates\texecutions\truntime\tbatches\tfailedBatches\tfailedCommits\twasTerminated\n133\t14\t0\t15\t0\t0\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635518599254_1715714712",
      "id": "paragraph_1635518599254_1715714712",
      "dateCreated": "2021-10-29 14:43:19.254",
      "dateStarted": "2022-03-22 13:33:25.963",
      "dateFinished": "2022-03-22 13:33:26.457",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\nmatch (person:Person) return person",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:33:56.670",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "id0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "label1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "name2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "city3",
                        "visible": true,
                        "width": 292.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "born4",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "uuid": "string",
                      "born": "string",
                      "children": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2,\"data\":{\"name\":\"Giandomenico Fracchia\",\"uuid\":\"11eb2c57-ea88-4ec7-a352-681b7604c74c\",\"born\":1964},\"label\":\"Person\"},{\"id\":3,\"data\":{\"name\":\"Carrie-Anne Moss\",\"children\":[\"Al\",\"John\",\"Jack\"],\"uuid\":\"15e001a7-08fb-462d-902b-4ef3cd6dc331\",\"born\":1967},\"label\":\"Person\"},{\"id\":4,\"data\":{\"name\":\"Laurence Fishburne\",\"children\":[\"Naruto\",\"Sasuke\",\"Sakura\"],\"uuid\":\"5965f1a7-ed46-4e49-81fd-d26ab2b16d05\",\"born\":1961},\"label\":\"Person\"},{\"id\":5,\"data\":{\"name\":\"Hugo Weaving\",\"uuid\":\"4a379a43-6dba-444f-a2d7-bd8833980e13\",\"born\":1960},\"label\":\"Person\"},{\"id\":6,\"data\":{\"name\":\"Lilly Wachowski\",\"uuid\":\"7e5ed45c-4c3e-4c6e-bf58-e56c3fc79a81\",\"born\":1967},\"label\":\"Person\"},{\"id\":7,\"data\":{\"name\":\"Lana Wachowski\",\"uuid\":\"7f6f6e27-3317-4779-80e3-bd85951542ca\",\"born\":1965},\"label\":\"Person\"},{\"id\":8,\"data\":{\"name\":\"Franco e Ciccio\",\"uuid\":\"9ab2323f-9119-40e7-a6ca-2ea139d70941\",\"born\":1952},\"label\":\"Person\"},{\"id\":9,\"data\":{\"name\":\"Emil Eifrem\",\"uuid\":\"cb60f62e-04d7-4eb1-82ee-34b36f35427c\",\"born\":1978},\"label\":\"Person\"},{\"id\":13,\"data\":{\"name\":\"Charlize Theron\",\"uuid\":\"b02c7886-4ad0-4483-b522-87c89aaa1435\",\"born\":1975},\"label\":\"Person\"},{\"id\":14,\"data\":{\"name\":\"Al Pacino\",\"uuid\":\"d1e93859-32e4-4935-b074-c511e66472f4\",\"born\":1940},\"label\":\"Person\"},{\"id\":15,\"data\":{\"name\":\"Taylor Hackford\",\"uuid\":\"2c15de05-360a-422b-9353-e4e05145e83a\",\"born\":1944},\"label\":\"Person\"},{\"id\":17,\"data\":{\"name\":\"Tom Cruise\",\"uuid\":\"38f252b2-a16a-40d9-bc58-97db795f0ae1\",\"born\":1962},\"label\":\"Person\"},{\"id\":18,\"data\":{\"name\":\"Jack Nicholson\",\"uuid\":\"e2483994-181d-42e0-bdb3-df5155b19811\",\"born\":1937},\"label\":\"Person\"},{\"id\":19,\"data\":{\"name\":\"Demi Moore\",\"uuid\":\"072575ce-509b-4a09-8e84-e38927ac38d1\",\"born\":1962},\"label\":\"Person\"},{\"id\":20,\"data\":{\"name\":\"Kevin Bacon\",\"uuid\":\"8e6f906f-f5ce-47f1-b109-2d14fabe85c4\",\"born\":1958},\"label\":\"Person\"},{\"id\":21,\"data\":{\"name\":\"Kiefer Sutherland\",\"uuid\":\"6ddf235a-1cfa-4227-92fa-83d0f8cd6164\",\"born\":1966},\"label\":\"Person\"},{\"id\":22,\"data\":{\"name\":\"Noah Wyle\",\"uuid\":\"2b4ccf22-cb2d-4ce9-86a4-83d04d4cd8cd\",\"born\":1971},\"label\":\"Person\"},{\"id\":23,\"data\":{\"name\":\"Cuba Gooding Jr.\",\"uuid\":\"2e0a0f23-6f6c-4ce8-8966-de9c5fe11289\",\"born\":1968},\"label\":\"Person\"},{\"id\":24,\"data\":{\"name\":\"Kevin Pollak\",\"uuid\":\"9160d913-7fe8-4600-9fb8-4831dce0cad9\",\"born\":1957},\"label\":\"Person\"},{\"id\":25,\"data\":{\"name\":\"J.T. Walsh\",\"uuid\":\"5035de62-a1f1-43ff-ba20-d0fd97b6f989\",\"born\":1943},\"label\":\"Person\"},{\"id\":26,\"data\":{\"name\":\"James Marshall\",\"uuid\":\"f3a40142-3cf0-4567-a7cd-4a477d573f75\",\"born\":1967},\"label\":\"Person\"},{\"id\":27,\"data\":{\"name\":\"Christopher Guest\",\"uuid\":\"14830f1b-b169-4ee7-be49-732baf8c4b06\",\"born\":1948},\"label\":\"Person\"},{\"id\":28,\"data\":{\"name\":\"Rob Reiner\",\"uuid\":\"c0443f01-1ab6-4ccf-beda-a13b2d3d42b1\",\"born\":1947},\"label\":\"Person\"},{\"id\":29,\"data\":{\"name\":\"Aaron Sorkin\",\"uuid\":\"79c6026d-1c8c-491b-a625-03efe6a56906\",\"born\":1961},\"label\":\"Person\"},{\"id\":31,\"data\":{\"name\":\"Kelly McGillis\",\"uuid\":\"d19adb85-5adf-43d2-aa1a-cf693567ab54\",\"born\":1957},\"label\":\"Person\"},{\"id\":32,\"data\":{\"name\":\"Val Kilmer\",\"uuid\":\"239ab96b-77f5-4ee4-9dd4-0ee8ed9f9f72\",\"born\":1959},\"label\":\"Person\"},{\"id\":33,\"data\":{\"name\":\"Anthony Edwards\",\"uuid\":\"4f7c1f9c-b97b-491c-9a66-b0ac53039565\",\"born\":1962},\"label\":\"Person\"},{\"id\":34,\"data\":{\"name\":\"Tom Skerritt\",\"uuid\":\"8b7e826e-1990-4e0e-b065-549757747fe9\",\"born\":1933},\"label\":\"Person\"},{\"id\":35,\"data\":{\"name\":\"Meg Ryan\",\"uuid\":\"3e816c94-011e-4f07-a7d3-90995e044104\",\"born\":1961},\"label\":\"Person\"},{\"id\":36,\"data\":{\"name\":\"Tony Scott\",\"uuid\":\"0c4aca61-e151-4dfb-9251-14704a02af68\",\"born\":1944},\"label\":\"Person\"},{\"id\":37,\"data\":{\"name\":\"Jim Cash\",\"uuid\":\"d3ce6f37-a647-46bc-b6a2-05c9cafcf5e5\",\"born\":1941},\"label\":\"Person\"},{\"id\":39,\"data\":{\"name\":\"Renee Zellweger\",\"uuid\":\"7f7065de-c990-47ec-b904-ee305785a05a\",\"born\":1969},\"label\":\"Person\"},{\"id\":40,\"data\":{\"name\":\"Kelly Preston\",\"uuid\":\"81c9bdec-aa60-4514-b7c1-ee779e2988bb\",\"born\":1962},\"label\":\"Person\"},{\"id\":41,\"data\":{\"name\":\"Jerry O\\u0027Connell\",\"uuid\":\"5770d2e2-6d8a-4aa9-8193-3a7ebd0973bc\",\"born\":1974},\"label\":\"Person\"},{\"id\":42,\"data\":{\"name\":\"Jay Mohr\",\"uuid\":\"52e59985-4958-4627-a98c-658ef8333e98\",\"born\":1970},\"label\":\"Person\"},{\"id\":43,\"data\":{\"name\":\"Bonnie Hunt\",\"uuid\":\"7e7094e9-53a7-48f3-a834-05d826ec9c9b\",\"born\":1961},\"label\":\"Person\"},{\"id\":44,\"data\":{\"name\":\"Regina King\",\"uuid\":\"792642aa-a848-49ce-9fa4-e6df1cbfafc5\",\"born\":1971},\"label\":\"Person\"},{\"id\":45,\"data\":{\"name\":\"Jonathan Lipnicki\",\"uuid\":\"755bd4e6-d03b-4f22-aeb2-254bf3fe260c\",\"born\":1996},\"label\":\"Person\"},{\"id\":46,\"data\":{\"name\":\"Cameron Crowe\",\"uuid\":\"9c34a2d8-ebce-42e4-b2c7-ef7c4c4a3d90\",\"born\":1957},\"label\":\"Person\"},{\"id\":48,\"data\":{\"name\":\"River Phoenix\",\"uuid\":\"caeb3022-de24-4a9e-abe9-101a4ff5b753\",\"born\":1970},\"label\":\"Person\"},{\"id\":49,\"data\":{\"name\":\"Corey Feldman\",\"uuid\":\"bff69af2-2c0d-4b05-ae29-8672e802dd2f\",\"born\":1971},\"label\":\"Person\"},{\"id\":50,\"data\":{\"name\":\"Wil Wheaton\",\"uuid\":\"fb8109b3-e3f2-43ed-9a40-e05bfd7661e5\",\"born\":1972},\"label\":\"Person\"},{\"id\":51,\"data\":{\"name\":\"John Cusack\",\"uuid\":\"faa4714d-e697-4086-bacc-bac6db6c21dc\",\"born\":1966},\"label\":\"Person\"},{\"id\":52,\"data\":{\"name\":\"Marshall Bell\",\"uuid\":\"6921ea83-9d70-4f9f-974e-5616f70af638\",\"born\":1942},\"label\":\"Person\"},{\"id\":54,\"data\":{\"name\":\"Helen Hunt\",\"uuid\":\"415c0868-1557-4e5c-890a-957320794f46\",\"born\":1963},\"label\":\"Person\"},{\"id\":55,\"data\":{\"name\":\"Greg Kinnear\",\"uuid\":\"e5c6f97f-cdef-44fa-b79b-cd2296c0a7b9\",\"born\":1963},\"label\":\"Person\"},{\"id\":56,\"data\":{\"name\":\"James L. Brooks\",\"uuid\":\"0354c08c-6a7d-4c49-a53c-ce7dfddcbeac\",\"born\":1940},\"label\":\"Person\"},{\"id\":58,\"data\":{\"name\":\"Annabella Sciorra\",\"uuid\":\"3b7dba60-6b65-409e-8226-219d79ef53dc\",\"born\":1960},\"label\":\"Person\"},{\"id\":59,\"data\":{\"name\":\"Max von Sydow\",\"uuid\":\"f8bff9d1-9783-4fa4-a04b-773396dab3b6\",\"born\":1929},\"label\":\"Person\"},{\"id\":60,\"data\":{\"name\":\"Werner Herzog\",\"uuid\":\"8ae41b55-2a8d-4d86-b723-6c9229b76f56\",\"born\":1942},\"label\":\"Person\"},{\"id\":61,\"data\":{\"name\":\"Robin Williams\",\"uuid\":\"e7f3551f-4d20-48ad-9589-60bdb8f485b2\",\"born\":1951},\"label\":\"Person\"},{\"id\":62,\"data\":{\"name\":\"Vincent Ward\",\"uuid\":\"6ff26c54-7da5-4139-b8e1-0c7b0e2e71cd\",\"born\":1956},\"label\":\"Person\"},{\"id\":64,\"data\":{\"name\":\"Ethan Hawke\",\"uuid\":\"a589f074-efb6-4ae8-a6f8-096ec528f759\",\"born\":1970},\"label\":\"Person\"},{\"id\":65,\"data\":{\"name\":\"Rick Yune\",\"uuid\":\"3ae8897f-95d0-4667-ab37-917fe17fa3aa\",\"born\":1971},\"label\":\"Person\"},{\"id\":66,\"data\":{\"name\":\"James Cromwell\",\"uuid\":\"07a259ca-fada-473f-bfc5-3130dbe051ac\",\"born\":1940},\"label\":\"Person\"},{\"id\":67,\"data\":{\"name\":\"Scott Hicks\",\"uuid\":\"4e32e620-2356-41e4-bc90-fe8606985dff\",\"born\":1953},\"label\":\"Person\"},{\"id\":69,\"data\":{\"name\":\"Parker Posey\",\"uuid\":\"fd0592ae-eea2-4eac-9424-1603e5ca31b4\",\"born\":1968},\"label\":\"Person\"},{\"id\":70,\"data\":{\"name\":\"Dave Chappelle\",\"uuid\":\"0b9fa943-34b2-45ea-b703-042af795bc42\",\"born\":1973},\"label\":\"Person\"},{\"id\":71,\"data\":{\"name\":\"Steve Zahn\",\"uuid\":\"a42494f2-8581-4390-89b4-1b95f17c492f\",\"born\":1967},\"label\":\"Person\"},{\"id\":72,\"data\":{\"name\":\"Tom Hanks\",\"uuid\":\"f02fd294-c937-4ddf-8bc1-1c01b620b882\",\"born\":1956},\"label\":\"Person\"},{\"id\":73,\"data\":{\"name\":\"Nora Ephron\",\"uuid\":\"c930d5ce-1b02-4876-8506-e166b2167387\",\"born\":1941},\"label\":\"Person\"},{\"id\":75,\"data\":{\"name\":\"Rita Wilson\",\"uuid\":\"a6c24f50-4aac-4e0b-9dcf-24a042c8667a\",\"born\":1956},\"label\":\"Person\"},{\"id\":76,\"data\":{\"name\":\"Bill Pullman\",\"uuid\":\"0192e075-8fff-4739-8d28-fcf3f91f1a1a\",\"born\":1953},\"label\":\"Person\"},{\"id\":77,\"data\":{\"name\":\"Victor Garber\",\"uuid\":\"69997a9d-ef9b-45ba-a1d0-ed52563b4f34\",\"born\":1949},\"label\":\"Person\"},{\"id\":78,\"data\":{\"name\":\"Rosie O\\u0027Donnell\",\"uuid\":\"c8d859f3-bf9a-4d27-9778-8828c9743574\",\"born\":1962},\"label\":\"Person\"},{\"id\":80,\"data\":{\"name\":\"John Patrick Stanley\",\"uuid\":\"ad732c94-c99a-430d-9e78-5dbf6a5e0899\",\"born\":1950},\"label\":\"Person\"},{\"id\":81,\"data\":{\"name\":\"Nathan Lane\",\"uuid\":\"45885719-e171-453e-be2e-1badb5f0a929\",\"born\":1956},\"label\":\"Person\"},{\"id\":83,\"data\":{\"name\":\"Billy Crystal\",\"uuid\":\"90555bc3-a576-47d7-b3ec-08b9553a42a9\",\"born\":1948},\"label\":\"Person\"},{\"id\":84,\"data\":{\"name\":\"Carrie Fisher\",\"uuid\":\"6a84543b-f5fc-49f5-964a-80efcf5ab114\",\"born\":1956},\"label\":\"Person\"},{\"id\":85,\"data\":{\"name\":\"Bruno Kirby\",\"uuid\":\"2d3b4cf2-21e1-479f-accf-4baef82a4e6a\",\"born\":1949},\"label\":\"Person\"},{\"id\":87,\"data\":{\"name\":\"Liv Tyler\",\"uuid\":\"d4d48298-6640-4f39-9a51-a981f0af7b4d\",\"born\":1977},\"label\":\"Person\"},{\"id\":89,\"data\":{\"name\":\"Brooke Langton\",\"uuid\":\"7141fe4c-a3bd-4faf-afda-61e6aaad65c2\",\"born\":1970},\"label\":\"Person\"},{\"id\":90,\"data\":{\"name\":\"Gene Hackman\",\"uuid\":\"5ba35a80-623b-44cc-b006-d21281bfc3db\",\"born\":1929},\"label\":\"Person\"},{\"id\":91,\"data\":{\"name\":\"Orlando Jones\",\"uuid\":\"e8190bad-41b0-4ac5-9df3-72de3805954d\",\"born\":1968},\"label\":\"Person\"},{\"id\":92,\"data\":{\"name\":\"Howard Deutch\",\"uuid\":\"7dfbaadf-66ea-4cc4-b27e-ecc2b4ea4cc6\",\"born\":1950},\"label\":\"Person\"},{\"id\":94,\"data\":{\"name\":\"Christian Bale\",\"uuid\":\"f82a1fce-754b-4048-a55e-c1e9f964e9fe\",\"born\":1974},\"label\":\"Person\"},{\"id\":95,\"data\":{\"name\":\"Zach Grenier\",\"uuid\":\"b631e9f5-f741-4fd1-9cb1-0553392ece5d\",\"born\":1954},\"label\":\"Person\"},{\"id\":97,\"data\":{\"name\":\"Mike Nichols\",\"uuid\":\"a434ca4d-e86b-4e43-81d0-aba0265d02ca\",\"born\":1931},\"label\":\"Person\"},{\"id\":99,\"data\":{\"name\":\"Richard Harris\",\"uuid\":\"64025c09-6ce9-4527-88ec-ce60918b6c1b\",\"born\":1930},\"label\":\"Person\"},{\"id\":100,\"data\":{\"name\":\"Clint Eastwood\",\"uuid\":\"97769882-0e02-4d09-9ad9-d90b775a6e04\",\"born\":1930},\"label\":\"Person\"},{\"id\":102,\"data\":{\"name\":\"Takeshi Kitano\",\"uuid\":\"699e89ff-deaa-444d-bd1d-deed2fdf4634\",\"born\":1947},\"label\":\"Person\"},{\"id\":103,\"data\":{\"name\":\"Dina Meyer\",\"uuid\":\"bd57f20b-7314-4f04-9207-2028dc7d5a35\",\"born\":1968},\"label\":\"Person\"},{\"id\":104,\"data\":{\"name\":\"Ice-T\",\"uuid\":\"7196e80f-a245-44eb-bc73-54d97964a1aa\",\"born\":1958},\"label\":\"Person\"},{\"id\":105,\"data\":{\"name\":\"Robert Longo\",\"uuid\":\"427b9ca1-18b9-4c75-8838-cae46f50817e\",\"born\":1953},\"label\":\"Person\"},{\"id\":107,\"data\":{\"name\":\"Halle Berry\",\"uuid\":\"aeeecb71-93e5-4c8f-92cc-1b5c70e97987\",\"born\":1966},\"label\":\"Person\"},{\"id\":108,\"data\":{\"name\":\"Jim Broadbent\",\"uuid\":\"e05b765a-4738-48b9-97bb-694dfd6efeb1\",\"born\":1949},\"label\":\"Person\"},{\"id\":109,\"data\":{\"name\":\"Tom Tykwer\",\"uuid\":\"739dea8f-f99c-4c00-a570-b485ba0f9091\",\"born\":1965},\"label\":\"Person\"},{\"id\":110,\"data\":{\"name\":\"David Mitchell\",\"uuid\":\"283ed41f-8c72-4e35-9cf1-aae0ef7b5ec0\",\"born\":1969},\"label\":\"Person\"},{\"id\":111,\"data\":{\"name\":\"Stefan Arndt\",\"uuid\":\"55e685cf-09f8-4ca6-bb2c-d0ebec9fbc18\",\"born\":1961},\"label\":\"Person\"},{\"id\":113,\"data\":{\"name\":\"Ian McKellen\",\"uuid\":\"e10c2a66-13b2-4360-a24e-0bb8d43592f4\",\"born\":1939},\"label\":\"Person\"},{\"id\":114,\"data\":{\"name\":\"Audrey Tautou\",\"uuid\":\"9d93c4cb-f093-4a44-ae35-5ca1e0a7163c\",\"born\":1976},\"label\":\"Person\"},{\"id\":115,\"data\":{\"name\":\"Paul Bettany\",\"uuid\":\"9643913a-ee79-4c45-b0ca-6ed858eb882d\",\"born\":1971},\"label\":\"Person\"},{\"id\":116,\"data\":{\"name\":\"Ron Howard\",\"uuid\":\"f56e2d03-d0b8-4426-971c-9dff46963b5a\",\"born\":1954},\"label\":\"Person\"},{\"id\":118,\"data\":{\"name\":\"Natalie Portman\",\"uuid\":\"00fe6d51-a578-4f3c-81da-e1049e08461a\",\"born\":1981},\"label\":\"Person\"},{\"id\":119,\"data\":{\"name\":\"Stephen Rea\",\"uuid\":\"63a1822c-9574-436f-9625-4c8124a0a09e\",\"born\":1946},\"label\":\"Person\"},{\"id\":120,\"data\":{\"name\":\"John Hurt\",\"uuid\":\"d69566e2-6940-423b-b9ae-5a9f312369df\",\"born\":1940},\"label\":\"Person\"},{\"id\":121,\"data\":{\"name\":\"Ben Miles\",\"uuid\":\"a0c14f3e-48ad-428d-b58b-c0147c1fd0d1\",\"born\":1967},\"label\":\"Person\"},{\"id\":123,\"data\":{\"name\":\"Emile Hirsch\",\"uuid\":\"c7c51e65-4320-4464-84e0-1b0ea309dc1b\",\"born\":1985},\"label\":\"Person\"},{\"id\":124,\"data\":{\"name\":\"John Goodman\",\"uuid\":\"794e8038-9972-4cae-b9f9-48b456a2cf2d\",\"born\":1960},\"label\":\"Person\"},{\"id\":125,\"data\":{\"name\":\"Susan Sarandon\",\"uuid\":\"07077fae-7d14-4965-8dd8-a6fd5cacbefd\",\"born\":1946},\"label\":\"Person\"},{\"id\":126,\"data\":{\"name\":\"Matthew Fox\",\"uuid\":\"d7f25eae-fd3d-4dcd-aee4-0e372b54ccf6\",\"born\":1966},\"label\":\"Person\"},{\"id\":127,\"data\":{\"name\":\"Christina Ricci\",\"uuid\":\"c07356e0-b0fa-4e00-905e-924872333524\",\"born\":1980},\"label\":\"Person\"},{\"id\":128,\"data\":{\"name\":\"Rain\",\"uuid\":\"e7c8aa9a-9a6a-4a12-ad7f-8e9f26956130\",\"born\":1982},\"label\":\"Person\"},{\"id\":130,\"data\":{\"name\":\"Naomie Harris\",\"uuid\":\"d283de33-8b55-4d59-bbd3-959e7dcf38ba\"},\"label\":\"Person\"},{\"id\":132,\"data\":{\"name\":\"Michael Clarke Duncan\",\"uuid\":\"f7a609be-d3c5-42e4-9c3c-13a6709c9092\",\"born\":1957},\"label\":\"Person\"},{\"id\":133,\"data\":{\"name\":\"David Morse\",\"uuid\":\"cb2a0b35-7b65-41f9-9cf2-9c662eaeee4c\",\"born\":1953},\"label\":\"Person\"},{\"id\":134,\"data\":{\"name\":\"Sam Rockwell\",\"uuid\":\"baa953a6-0f43-4fee-8cc1-91554f467136\",\"born\":1968},\"label\":\"Person\"},{\"id\":135,\"data\":{\"name\":\"Gary Sinise\",\"uuid\":\"81dd05ee-d51b-4492-8bdd-7bfdaf386df8\",\"born\":1955},\"label\":\"Person\"},{\"id\":136,\"data\":{\"name\":\"Patricia Clarkson\",\"uuid\":\"41e39151-58de-4149-8ccc-0d076fb5aab4\",\"born\":1959},\"label\":\"Person\"},{\"id\":137,\"data\":{\"name\":\"Frank Darabont\",\"uuid\":\"573c8052-15f8-4ace-b2a8-8b132b29d967\",\"born\":1959},\"label\":\"Person\"},{\"id\":139,\"data\":{\"name\":\"Frank Langella\",\"uuid\":\"c32d1823-9f8b-41ad-a0eb-06ef76dd33cc\",\"born\":1938},\"label\":\"Person\"},{\"id\":140,\"data\":{\"name\":\"Michael Sheen\",\"uuid\":\"e032fd60-3016-4168-bff9-c9fbe9a20fdc\",\"born\":1969},\"label\":\"Person\"},{\"id\":141,\"data\":{\"name\":\"Oliver Platt\",\"uuid\":\"73fee97d-07d0-4fd7-87e5-c52e4e77f28a\",\"born\":1960},\"label\":\"Person\"},{\"id\":143,\"data\":{\"name\":\"Danny DeVito\",\"uuid\":\"13772410-c24d-4692-b8ef-80dcd840e386\",\"born\":1944},\"label\":\"Person\"},{\"id\":144,\"data\":{\"name\":\"John C. Reilly\",\"uuid\":\"e9fcdb67-1ca1-48bc-8829-0d96aa70b866\",\"born\":1965},\"label\":\"Person\"},{\"id\":146,\"data\":{\"name\":\"Ed Harris\",\"uuid\":\"c130c103-496c-4e69-88db-6d4289da97fc\",\"born\":1950},\"label\":\"Person\"},{\"id\":147,\"data\":{\"name\":\"Bill Paxton\",\"uuid\":\"22de5b35-fd56-41e6-b390-7a1d031a5c28\",\"born\":1955},\"label\":\"Person\"},{\"id\":149,\"data\":{\"name\":\"Philip Seymour Hoffman\",\"uuid\":\"564ee3bf-5f8b-4e60-977b-2777ebe5be68\",\"born\":1967},\"label\":\"Person\"},{\"id\":150,\"data\":{\"name\":\"Jan de Bont\",\"uuid\":\"fd453e96-dc96-49f7-af21-66c892090855\",\"born\":1943},\"label\":\"Person\"},{\"id\":152,\"data\":{\"name\":\"Robert Zemeckis\",\"uuid\":\"336d4336-e984-4c36-b206-862e5fca0ab4\",\"born\":1951},\"label\":\"Person\"},{\"id\":154,\"data\":{\"name\":\"Milos Forman\",\"uuid\":\"2de086f5-13b0-4531-b7cd-6bcbe39624a5\",\"born\":1932},\"label\":\"Person\"},{\"id\":156,\"data\":{\"name\":\"Diane Keaton\",\"uuid\":\"914f2de9-d787-4d47-adbc-a0b16bd1c680\",\"born\":1946},\"label\":\"Person\"},{\"id\":157,\"data\":{\"name\":\"Nancy Meyers\",\"uuid\":\"d1f5a62a-74a3-4897-bcc2-de5a0a7ca09d\",\"born\":1949},\"label\":\"Person\"},{\"id\":159,\"data\":{\"name\":\"Chris Columbus\",\"uuid\":\"5bcb6e98-fb1c-4514-aade-0fd3109977b7\",\"born\":1958},\"label\":\"Person\"},{\"id\":161,\"data\":{\"name\":\"Julia Roberts\",\"uuid\":\"01010b47-ef0e-44ad-a201-f9dfa51ce6dd\",\"born\":1967},\"label\":\"Person\"},{\"id\":164,\"data\":{\"name\":\"Madonna\",\"uuid\":\"b7587d82-88e7-4012-82b8-e2ff0723ea2e\",\"born\":1954},\"label\":\"Person\"},{\"id\":165,\"data\":{\"name\":\"Geena Davis\",\"uuid\":\"81d06e93-d658-45fb-937b-6430f1ffc3ef\",\"born\":1956},\"label\":\"Person\"},{\"id\":166,\"data\":{\"name\":\"Lori Petty\",\"uuid\":\"2e148356-e119-472c-bfbc-5f9c03a03817\",\"born\":1963},\"label\":\"Person\"},{\"id\":167,\"data\":{\"name\":\"Penny Marshall\",\"uuid\":\"16ccced0-5422-42cb-9874-7e49b3c16fc2\",\"born\":1943},\"label\":\"Person\"},{\"id\":168,\"data\":{\"name\":\"Paul Blythe\",\"uuid\":\"aeedf1ab-6c33-4cb6-9557-188545d44987\"},\"label\":\"Person\"},{\"id\":169,\"data\":{\"name\":\"Angela Scope\",\"uuid\":\"be6134c1-dfc6-4d64-993b-bdfb0138d8fe\"},\"label\":\"Person\"},{\"id\":170,\"data\":{\"name\":\"Jessica Thompson\",\"uuid\":\"f3bf8c29-54e5-4d6f-a41e-7c98ce7020b0\"},\"label\":\"Person\"},{\"id\":171,\"data\":{\"name\":\"James Thompson\",\"uuid\":\"e01a03f4-9db4-44e0-bf92-79df9139b72e\"},\"label\":\"Person\"}],\"edges\":[],\"labels\":{\"Movie\":\"#522A50\",\"Person\":\"#4907F5\",\"NotFracchia\":\"#E86E21\",\"MyCaseNode\":\"#325DC5\",\"NodePeriodic\":\"#23F440\",\"End\":\"#0C644A\",\"Start\":\"#77B986\",\"Batch\":\"#9A6C66\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636045445009_612766002",
      "id": "paragraph_1636045445009_612766002",
      "dateCreated": "2021-11-04 17:04:05.009",
      "dateStarted": "2022-03-22 13:33:56.200",
      "dateFinished": "2022-03-22 13:33:56.270",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### Delete the entire database\n\nWe can use the `apoc.periodic.truncate` to delete periodically the entire database. This procedure uses the apoc.periodic.iterate under the hood.\nThe procedure is useful when you’re in the prototyping phase and you’re defining your graph model or your ingestion strategies.\n\n\u003cpre\u003e\nCALL apoc.periodic.truncate({dropSchema: true})\n\u003c/pre\u003e\nWith dropSchema\u003dtrue/false that eventually drops indexes and constraints.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 13:19:23.278",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eDelete the entire database\u003c/h3\u003e\n\u003cp\u003eWe can use the \u003ccode\u003eapoc.periodic.truncate\u003c/code\u003e to delete periodically the entire database. This procedure uses the apoc.periodic.iterate under the hood.\u003cbr /\u003e\nThe procedure is useful when you’re in the prototyping phase and you’re defining your graph model or your ingestion strategies.\u003c/p\u003e\n\u003cpre\u003e\nCALL apoc.periodic.truncate({dropSchema: true})\n\u003c/pre\u003e\n\u003cp\u003eWith dropSchema\u003dtrue/false that eventually drops indexes and constraints.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635848145239_975766747",
      "id": "paragraph_1635848145239_975766747",
      "dateCreated": "2021-11-02 10:15:45.240",
      "dateStarted": "2021-11-24 13:19:23.279",
      "dateFinished": "2021-11-24 13:19:23.295",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## [Statistics and analysis](http://localhost:8080/#/notebook/2GKUM18D6)",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:35:36.734",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2GKUM18D6\"\u003eStatistics and analysis\u003c/a\u003e\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635518678615_1647023307",
      "id": "paragraph_1635518678615_1647023307",
      "dateCreated": "2021-10-29 14:44:38.615",
      "dateStarted": "2022-03-22 13:35:36.732",
      "dateFinished": "2022-03-22 13:35:36.745",
      "status": "FINISHED"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-22 13:29:29.527",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1647955769526_839575996",
      "id": "paragraph_1647955769526_839575996",
      "dateCreated": "2022-03-22 13:29:29.527",
      "status": "READY"
    }
  ],
  "name": "1. Conditional and batch data",
  "id": "2GK7PWGHH",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}