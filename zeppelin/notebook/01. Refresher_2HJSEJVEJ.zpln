{
  "paragraphs": [
    {
      "text": "%md\n\n# If-else statements\n\nSometimes queries require conditional execution logic that can’t be adequately expressed in Cypher. \n\nFor example, to simulate a conditional with pure Cypher we could execute for example:\n`MATCH (n:Test) FOREACH(ignoreMe IN CASE WHEN EXISTS(s.myProp) THEN [1] ELSE [] END | SET n.otherProp \u003d 0)`\n\nThe `FOREACH` clause can be used to update data, but with more complex use cases (for example a `MATCH`), we cannot use it.\n\nSo if I want to do more complex conditional executions, I can use `apoc.when` / `apoc.case` procedure.\n- `apoc.when(condition, ifQuery, elseQuery, {parameters})` - only for read queries\n- `apoc.case([listOfConditionals], elseQuery, {parameters})` - only for read queries\n- `apoc.do.when` - equals to apoc.when but we can also execute \u0027write\u0027 statements\n- `apoc.do.case` - equals to apoc.case but we can also execute \u0027write\u0027 statements\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:42:46.521",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eIf-else statements\u003c/h1\u003e\n\u003cp\u003eSometimes queries require conditional execution logic that can’t be adequately expressed in Cypher.\u003c/p\u003e\n\u003cp\u003eFor example, to simulate a conditional with pure Cypher we could execute for example:\u003cbr /\u003e\n\u003ccode\u003eMATCH (n:Test) FOREACH(ignoreMe IN CASE WHEN EXISTS(s.myProp) THEN [1] ELSE [] END | SET n.otherProp \u003d 0)\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eFOREACH\u003c/code\u003e clause can be used to update data, but with more complex use cases (for example a \u003ccode\u003eMATCH\u003c/code\u003e), we cannot use it.\u003c/p\u003e\n\u003cp\u003eSo if I want to do more complex conditional executions, I can use \u003ccode\u003eapoc.when\u003c/code\u003e / \u003ccode\u003eapoc.case\u003c/code\u003e procedure.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.when(condition, ifQuery, elseQuery, {parameters})\u003c/code\u003e - only for read queries\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.case([listOfConditionals], elseQuery, {parameters})\u003c/code\u003e - only for read queries\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.do.when\u003c/code\u003e - equals to apoc.when but we can also execute \u0026lsquo;write\u0026rsquo; statements\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.do.case\u003c/code\u003e - equals to apoc.case but we can also execute \u0026lsquo;write\u0026rsquo; statements\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032608300_2063200215",
      "id": "paragraph_1668032608300_2063200215",
      "dateCreated": "2022-11-09 22:23:28.302",
      "dateStarted": "2022-11-10 15:42:46.521",
      "dateFinished": "2022-11-10 15:42:46.553",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nmatch (n:Person)\nwith n\ncall apoc.when(\n  n.name \u003d \u0027Giandomenico Fracchia\u0027,\n  \u0027RETURN \"yes \" + name as result\u0027,\n  \u0027RETURN \"no \" + name as result\u0027, \n  {name: n.name})\nyield value\n\nreturn value.result as result",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:42:59.445",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "result": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "result\n\"yes Giandomenico Fracchia\"\n\"no Carrie-Anne Moss\"\n\"no Laurence Fishburne\"\n\"no Hugo Weaving\"\n\"no Lilly Wachowski\"\n\"no Lana Wachowski\"\n\"no Franco e Ciccio\"\n\"no Emil Eifrem\"\n\"no Charlize Theron\"\n\"no Al Pacino\"\n\"no Taylor Hackford\"\n\"no Tom Cruise\"\n\"no Jack Nicholson\"\n\"no Demi Moore\"\n\"no Kevin Bacon\"\n\"no Kiefer Sutherland\"\n\"no Noah Wyle\"\n\"no Cuba Gooding Jr.\"\n\"no Kevin Pollak\"\n\"no J.T. Walsh\"\n\"no James Marshall\"\n\"no Christopher Guest\"\n\"no Rob Reiner\"\n\"no Aaron Sorkin\"\n\"no Kelly McGillis\"\n\"no Val Kilmer\"\n\"no Anthony Edwards\"\n\"no Tom Skerritt\"\n\"no Meg Ryan\"\n\"no Tony Scott\"\n\"no Jim Cash\"\n\"no Renee Zellweger\"\n\"no Kelly Preston\"\n\"no Jerry O\u0027Connell\"\n\"no Jay Mohr\"\n\"no Bonnie Hunt\"\n\"no Regina King\"\n\"no Jonathan Lipnicki\"\n\"no Cameron Crowe\"\n\"no River Phoenix\"\n\"no Corey Feldman\"\n\"no Wil Wheaton\"\n\"no John Cusack\"\n\"no Marshall Bell\"\n\"no Helen Hunt\"\n\"no Greg Kinnear\"\n\"no James L. Brooks\"\n\"no Annabella Sciorra\"\n\"no Max von Sydow\"\n\"no Werner Herzog\"\n\"no Robin Williams\"\n\"no Vincent Ward\"\n\"no Ethan Hawke\"\n\"no Rick Yune\"\n\"no James Cromwell\"\n\"no Scott Hicks\"\n\"no Parker Posey\"\n\"no Dave Chappelle\"\n\"no Steve Zahn\"\n\"no Tom Hanks\"\n\"no Nora Ephron\"\n\"no Rita Wilson\"\n\"no Bill Pullman\"\n\"no Victor Garber\"\n\"no Rosie O\u0027Donnell\"\n\"no John Patrick Stanley\"\n\"no Nathan Lane\"\n\"no Billy Crystal\"\n\"no Carrie Fisher\"\n\"no Bruno Kirby\"\n\"no Liv Tyler\"\n\"no Brooke Langton\"\n\"no Gene Hackman\"\n\"no Orlando Jones\"\n\"no Howard Deutch\"\n\"no Christian Bale\"\n\"no Zach Grenier\"\n\"no Mike Nichols\"\n\"no Richard Harris\"\n\"no Clint Eastwood\"\n\"no Takeshi Kitano\"\n\"no Dina Meyer\"\n\"no Ice-T\"\n\"no Robert Longo\"\n\"no Halle Berry\"\n\"no Jim Broadbent\"\n\"no Tom Tykwer\"\n\"no David Mitchell\"\n\"no Stefan Arndt\"\n\"no Ian McKellen\"\n\"no Audrey Tautou\"\n\"no Paul Bettany\"\n\"no Ron Howard\"\n\"no Natalie Portman\"\n\"no Stephen Rea\"\n\"no John Hurt\"\n\"no Ben Miles\"\n\"no Emile Hirsch\"\n\"no John Goodman\"\n\"no Susan Sarandon\"\n\"no Matthew Fox\"\n\"no Christina Ricci\"\n\"no Rain\"\n\"no Naomie Harris\"\n\"no Michael Clarke Duncan\"\n\"no David Morse\"\n\"no Sam Rockwell\"\n\"no Gary Sinise\"\n\"no Patricia Clarkson\"\n\"no Frank Darabont\"\n\"no Frank Langella\"\n\"no Michael Sheen\"\n\"no Oliver Platt\"\n\"no Danny DeVito\"\n\"no John C. Reilly\"\n\"no Ed Harris\"\n\"no Bill Paxton\"\n\"no Philip Seymour Hoffman\"\n\"no Jan de Bont\"\n\"no Robert Zemeckis\"\n\"no Milos Forman\"\n\"no Diane Keaton\"\n\"no Nancy Meyers\"\n\"no Chris Columbus\"\n\"no Julia Roberts\"\n\"no Madonna\"\n\"no Geena Davis\"\n\"no Lori Petty\"\n\"no Penny Marshall\"\n\"no Paul Blythe\"\n\"no Angela Scope\"\n\"no Jessica Thompson\"\n\"no James Thompson\"\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032643328_1938116374",
      "id": "paragraph_1668032643328_1938116374",
      "dateCreated": "2022-11-09 22:24:03.329",
      "dateStarted": "2022-11-10 15:42:52.306",
      "dateFinished": "2022-11-10 15:42:53.818",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n    match (n:Person)\n    with n\n    CALL apoc.do.when(n.name \u003d \u0027Giandomenico Fracchia\u0027, \n        \u0027create (n)-[:HAS_MOVIE]-\u003e(:Movie {name: \"The movie about \" + n.name}) return n\u0027,            // create a node Movie from node\n        \u0027create (node:NotFracchia {name: n.name}) return n\u0027,  // create a node with `NotFracchia` label\n        {n: n}) // map of parameters, in this case $born \u003d n.born\n    yield value \n    return value.n.name, value.n.born",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:05.586",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "value.n.name": "string",
                      "value.n.born": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "value.n.name\tvalue.n.born\n\"Giandomenico Fracchia\"\t1964\n\"Carrie-Anne Moss\"\t1967\n\"Laurence Fishburne\"\t1961\n\"Hugo Weaving\"\t1960\n\"Lilly Wachowski\"\t1967\n\"Lana Wachowski\"\t1965\n\"Franco e Ciccio\"\t1952\n\"Emil Eifrem\"\t1978\n\"Charlize Theron\"\t1975\n\"Al Pacino\"\t1940\n\"Taylor Hackford\"\t1944\n\"Tom Cruise\"\t1962\n\"Jack Nicholson\"\t1937\n\"Demi Moore\"\t1962\n\"Kevin Bacon\"\t1958\n\"Kiefer Sutherland\"\t1966\n\"Noah Wyle\"\t1971\n\"Cuba Gooding Jr.\"\t1968\n\"Kevin Pollak\"\t1957\n\"J.T. Walsh\"\t1943\n\"James Marshall\"\t1967\n\"Christopher Guest\"\t1948\n\"Rob Reiner\"\t1947\n\"Aaron Sorkin\"\t1961\n\"Kelly McGillis\"\t1957\n\"Val Kilmer\"\t1959\n\"Anthony Edwards\"\t1962\n\"Tom Skerritt\"\t1933\n\"Meg Ryan\"\t1961\n\"Tony Scott\"\t1944\n\"Jim Cash\"\t1941\n\"Renee Zellweger\"\t1969\n\"Kelly Preston\"\t1962\n\"Jerry O\u0027Connell\"\t1974\n\"Jay Mohr\"\t1970\n\"Bonnie Hunt\"\t1961\n\"Regina King\"\t1971\n\"Jonathan Lipnicki\"\t1996\n\"Cameron Crowe\"\t1957\n\"River Phoenix\"\t1970\n\"Corey Feldman\"\t1971\n\"Wil Wheaton\"\t1972\n\"John Cusack\"\t1966\n\"Marshall Bell\"\t1942\n\"Helen Hunt\"\t1963\n\"Greg Kinnear\"\t1963\n\"James L. Brooks\"\t1940\n\"Annabella Sciorra\"\t1960\n\"Max von Sydow\"\t1929\n\"Werner Herzog\"\t1942\n\"Robin Williams\"\t1951\n\"Vincent Ward\"\t1956\n\"Ethan Hawke\"\t1970\n\"Rick Yune\"\t1971\n\"James Cromwell\"\t1940\n\"Scott Hicks\"\t1953\n\"Parker Posey\"\t1968\n\"Dave Chappelle\"\t1973\n\"Steve Zahn\"\t1967\n\"Tom Hanks\"\t1956\n\"Nora Ephron\"\t1941\n\"Rita Wilson\"\t1956\n\"Bill Pullman\"\t1953\n\"Victor Garber\"\t1949\n\"Rosie O\u0027Donnell\"\t1962\n\"John Patrick Stanley\"\t1950\n\"Nathan Lane\"\t1956\n\"Billy Crystal\"\t1948\n\"Carrie Fisher\"\t1956\n\"Bruno Kirby\"\t1949\n\"Liv Tyler\"\t1977\n\"Brooke Langton\"\t1970\n\"Gene Hackman\"\t1929\n\"Orlando Jones\"\t1968\n\"Howard Deutch\"\t1950\n\"Christian Bale\"\t1974\n\"Zach Grenier\"\t1954\n\"Mike Nichols\"\t1931\n\"Richard Harris\"\t1930\n\"Clint Eastwood\"\t1930\n\"Takeshi Kitano\"\t1947\n\"Dina Meyer\"\t1968\n\"Ice-T\"\t1958\n\"Robert Longo\"\t1953\n\"Halle Berry\"\t1966\n\"Jim Broadbent\"\t1949\n\"Tom Tykwer\"\t1965\n\"David Mitchell\"\t1969\n\"Stefan Arndt\"\t1961\n\"Ian McKellen\"\t1939\n\"Audrey Tautou\"\t1976\n\"Paul Bettany\"\t1971\n\"Ron Howard\"\t1954\n\"Natalie Portman\"\t1981\n\"Stephen Rea\"\t1946\n\"John Hurt\"\t1940\n\"Ben Miles\"\t1967\n\"Emile Hirsch\"\t1985\n\"John Goodman\"\t1960\n\"Susan Sarandon\"\t1946\n\"Matthew Fox\"\t1966\n\"Christina Ricci\"\t1980\n\"Rain\"\t1982\n\"Naomie Harris\"\tNULL\n\"Michael Clarke Duncan\"\t1957\n\"David Morse\"\t1953\n\"Sam Rockwell\"\t1968\n\"Gary Sinise\"\t1955\n\"Patricia Clarkson\"\t1959\n\"Frank Darabont\"\t1959\n\"Frank Langella\"\t1938\n\"Michael Sheen\"\t1969\n\"Oliver Platt\"\t1960\n\"Danny DeVito\"\t1944\n\"John C. Reilly\"\t1965\n\"Ed Harris\"\t1950\n\"Bill Paxton\"\t1955\n\"Philip Seymour Hoffman\"\t1967\n\"Jan de Bont\"\t1943\n\"Robert Zemeckis\"\t1951\n\"Milos Forman\"\t1932\n\"Diane Keaton\"\t1946\n\"Nancy Meyers\"\t1949\n\"Chris Columbus\"\t1958\n\"Julia Roberts\"\t1967\n\"Madonna\"\t1954\n\"Geena Davis\"\t1956\n\"Lori Petty\"\t1963\n\"Penny Marshall\"\t1943\n\"Paul Blythe\"\tNULL\n\"Angela Scope\"\tNULL\n\"Jessica Thompson\"\tNULL\n\"James Thompson\"\tNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032645595_2126420981",
      "id": "paragraph_1668032645595_2126420981",
      "dateCreated": "2022-11-09 22:24:05.595",
      "dateStarted": "2022-11-10 15:43:03.805",
      "dateFinished": "2022-11-10 15:43:04.789",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nmatch (n:NotFracchia) return n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:25.058",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":256,\"data\":{\"name\":\"Halle Berry\"},\"label\":\"NotFracchia\"},{\"id\":257,\"data\":{\"name\":\"Jim Broadbent\"},\"label\":\"NotFracchia\"},{\"id\":258,\"data\":{\"name\":\"Tom Tykwer\"},\"label\":\"NotFracchia\"},{\"id\":259,\"data\":{\"name\":\"David Mitchell\"},\"label\":\"NotFracchia\"},{\"id\":260,\"data\":{\"name\":\"Stefan Arndt\"},\"label\":\"NotFracchia\"},{\"id\":261,\"data\":{\"name\":\"Ian McKellen\"},\"label\":\"NotFracchia\"},{\"id\":262,\"data\":{\"name\":\"Audrey Tautou\"},\"label\":\"NotFracchia\"},{\"id\":263,\"data\":{\"name\":\"Paul Bettany\"},\"label\":\"NotFracchia\"},{\"id\":264,\"data\":{\"name\":\"Ron Howard\"},\"label\":\"NotFracchia\"},{\"id\":265,\"data\":{\"name\":\"Natalie Portman\"},\"label\":\"NotFracchia\"},{\"id\":266,\"data\":{\"name\":\"Stephen Rea\"},\"label\":\"NotFracchia\"},{\"id\":267,\"data\":{\"name\":\"John Hurt\"},\"label\":\"NotFracchia\"},{\"id\":268,\"data\":{\"name\":\"Ben Miles\"},\"label\":\"NotFracchia\"},{\"id\":269,\"data\":{\"name\":\"Emile Hirsch\"},\"label\":\"NotFracchia\"},{\"id\":270,\"data\":{\"name\":\"John Goodman\"},\"label\":\"NotFracchia\"},{\"id\":271,\"data\":{\"name\":\"Susan Sarandon\"},\"label\":\"NotFracchia\"},{\"id\":272,\"data\":{\"name\":\"Matthew Fox\"},\"label\":\"NotFracchia\"},{\"id\":273,\"data\":{\"name\":\"Christina Ricci\"},\"label\":\"NotFracchia\"},{\"id\":274,\"data\":{\"name\":\"Rain\"},\"label\":\"NotFracchia\"},{\"id\":275,\"data\":{\"name\":\"Naomie Harris\"},\"label\":\"NotFracchia\"},{\"id\":276,\"data\":{\"name\":\"Michael Clarke Duncan\"},\"label\":\"NotFracchia\"},{\"id\":277,\"data\":{\"name\":\"David Morse\"},\"label\":\"NotFracchia\"},{\"id\":278,\"data\":{\"name\":\"Sam Rockwell\"},\"label\":\"NotFracchia\"},{\"id\":279,\"data\":{\"name\":\"Gary Sinise\"},\"label\":\"NotFracchia\"},{\"id\":280,\"data\":{\"name\":\"Patricia Clarkson\"},\"label\":\"NotFracchia\"},{\"id\":281,\"data\":{\"name\":\"Frank Darabont\"},\"label\":\"NotFracchia\"},{\"id\":282,\"data\":{\"name\":\"Frank Langella\"},\"label\":\"NotFracchia\"},{\"id\":283,\"data\":{\"name\":\"Michael Sheen\"},\"label\":\"NotFracchia\"},{\"id\":284,\"data\":{\"name\":\"Oliver Platt\"},\"label\":\"NotFracchia\"},{\"id\":285,\"data\":{\"name\":\"Danny DeVito\"},\"label\":\"NotFracchia\"},{\"id\":286,\"data\":{\"name\":\"John C. Reilly\"},\"label\":\"NotFracchia\"},{\"id\":287,\"data\":{\"name\":\"Ed Harris\"},\"label\":\"NotFracchia\"},{\"id\":288,\"data\":{\"name\":\"Bill Paxton\"},\"label\":\"NotFracchia\"},{\"id\":289,\"data\":{\"name\":\"Philip Seymour Hoffman\"},\"label\":\"NotFracchia\"},{\"id\":290,\"data\":{\"name\":\"Jan de Bont\"},\"label\":\"NotFracchia\"},{\"id\":291,\"data\":{\"name\":\"Robert Zemeckis\"},\"label\":\"NotFracchia\"},{\"id\":292,\"data\":{\"name\":\"Milos Forman\"},\"label\":\"NotFracchia\"},{\"id\":293,\"data\":{\"name\":\"Diane Keaton\"},\"label\":\"NotFracchia\"},{\"id\":294,\"data\":{\"name\":\"Nancy Meyers\"},\"label\":\"NotFracchia\"},{\"id\":295,\"data\":{\"name\":\"Chris Columbus\"},\"label\":\"NotFracchia\"},{\"id\":296,\"data\":{\"name\":\"Julia Roberts\"},\"label\":\"NotFracchia\"},{\"id\":297,\"data\":{\"name\":\"Madonna\"},\"label\":\"NotFracchia\"},{\"id\":298,\"data\":{\"name\":\"Geena Davis\"},\"label\":\"NotFracchia\"},{\"id\":299,\"data\":{\"name\":\"Lori Petty\"},\"label\":\"NotFracchia\"},{\"id\":300,\"data\":{\"name\":\"Penny Marshall\"},\"label\":\"NotFracchia\"},{\"id\":301,\"data\":{\"name\":\"Paul Blythe\"},\"label\":\"NotFracchia\"},{\"id\":302,\"data\":{\"name\":\"Angela Scope\"},\"label\":\"NotFracchia\"},{\"id\":303,\"data\":{\"name\":\"Jessica Thompson\"},\"label\":\"NotFracchia\"},{\"id\":304,\"data\":{\"name\":\"James Thompson\"},\"label\":\"NotFracchia\"},{\"id\":173,\"data\":{\"name\":\"Carrie-Anne Moss\"},\"label\":\"NotFracchia\"},{\"id\":174,\"data\":{\"name\":\"Laurence Fishburne\"},\"label\":\"NotFracchia\"},{\"id\":175,\"data\":{\"name\":\"Hugo Weaving\"},\"label\":\"NotFracchia\"},{\"id\":176,\"data\":{\"name\":\"Lilly Wachowski\"},\"label\":\"NotFracchia\"},{\"id\":177,\"data\":{\"name\":\"Lana Wachowski\"},\"label\":\"NotFracchia\"},{\"id\":178,\"data\":{\"name\":\"Franco e Ciccio\"},\"label\":\"NotFracchia\"},{\"id\":179,\"data\":{\"name\":\"Emil Eifrem\"},\"label\":\"NotFracchia\"},{\"id\":180,\"data\":{\"name\":\"Charlize Theron\"},\"label\":\"NotFracchia\"},{\"id\":181,\"data\":{\"name\":\"Al Pacino\"},\"label\":\"NotFracchia\"},{\"id\":182,\"data\":{\"name\":\"Taylor Hackford\"},\"label\":\"NotFracchia\"},{\"id\":183,\"data\":{\"name\":\"Tom Cruise\"},\"label\":\"NotFracchia\"},{\"id\":184,\"data\":{\"name\":\"Jack Nicholson\"},\"label\":\"NotFracchia\"},{\"id\":185,\"data\":{\"name\":\"Demi Moore\"},\"label\":\"NotFracchia\"},{\"id\":186,\"data\":{\"name\":\"Kevin Bacon\"},\"label\":\"NotFracchia\"},{\"id\":187,\"data\":{\"name\":\"Kiefer Sutherland\"},\"label\":\"NotFracchia\"},{\"id\":188,\"data\":{\"name\":\"Noah Wyle\"},\"label\":\"NotFracchia\"},{\"id\":189,\"data\":{\"name\":\"Cuba Gooding Jr.\"},\"label\":\"NotFracchia\"},{\"id\":190,\"data\":{\"name\":\"Kevin Pollak\"},\"label\":\"NotFracchia\"},{\"id\":191,\"data\":{\"name\":\"J.T. Walsh\"},\"label\":\"NotFracchia\"},{\"id\":192,\"data\":{\"name\":\"James Marshall\"},\"label\":\"NotFracchia\"},{\"id\":193,\"data\":{\"name\":\"Christopher Guest\"},\"label\":\"NotFracchia\"},{\"id\":194,\"data\":{\"name\":\"Rob Reiner\"},\"label\":\"NotFracchia\"},{\"id\":195,\"data\":{\"name\":\"Aaron Sorkin\"},\"label\":\"NotFracchia\"},{\"id\":196,\"data\":{\"name\":\"Kelly McGillis\"},\"label\":\"NotFracchia\"},{\"id\":197,\"data\":{\"name\":\"Val Kilmer\"},\"label\":\"NotFracchia\"},{\"id\":198,\"data\":{\"name\":\"Anthony Edwards\"},\"label\":\"NotFracchia\"},{\"id\":199,\"data\":{\"name\":\"Tom Skerritt\"},\"label\":\"NotFracchia\"},{\"id\":200,\"data\":{\"name\":\"Meg Ryan\"},\"label\":\"NotFracchia\"},{\"id\":201,\"data\":{\"name\":\"Tony Scott\"},\"label\":\"NotFracchia\"},{\"id\":202,\"data\":{\"name\":\"Jim Cash\"},\"label\":\"NotFracchia\"},{\"id\":203,\"data\":{\"name\":\"Renee Zellweger\"},\"label\":\"NotFracchia\"},{\"id\":204,\"data\":{\"name\":\"Kelly Preston\"},\"label\":\"NotFracchia\"},{\"id\":205,\"data\":{\"name\":\"Jerry O\\u0027Connell\"},\"label\":\"NotFracchia\"},{\"id\":206,\"data\":{\"name\":\"Jay Mohr\"},\"label\":\"NotFracchia\"},{\"id\":207,\"data\":{\"name\":\"Bonnie Hunt\"},\"label\":\"NotFracchia\"},{\"id\":208,\"data\":{\"name\":\"Regina King\"},\"label\":\"NotFracchia\"},{\"id\":209,\"data\":{\"name\":\"Jonathan Lipnicki\"},\"label\":\"NotFracchia\"},{\"id\":210,\"data\":{\"name\":\"Cameron Crowe\"},\"label\":\"NotFracchia\"},{\"id\":211,\"data\":{\"name\":\"River Phoenix\"},\"label\":\"NotFracchia\"},{\"id\":212,\"data\":{\"name\":\"Corey Feldman\"},\"label\":\"NotFracchia\"},{\"id\":213,\"data\":{\"name\":\"Wil Wheaton\"},\"label\":\"NotFracchia\"},{\"id\":214,\"data\":{\"name\":\"John Cusack\"},\"label\":\"NotFracchia\"},{\"id\":215,\"data\":{\"name\":\"Marshall Bell\"},\"label\":\"NotFracchia\"},{\"id\":216,\"data\":{\"name\":\"Helen Hunt\"},\"label\":\"NotFracchia\"},{\"id\":217,\"data\":{\"name\":\"Greg Kinnear\"},\"label\":\"NotFracchia\"},{\"id\":218,\"data\":{\"name\":\"James L. Brooks\"},\"label\":\"NotFracchia\"},{\"id\":219,\"data\":{\"name\":\"Annabella Sciorra\"},\"label\":\"NotFracchia\"},{\"id\":220,\"data\":{\"name\":\"Max von Sydow\"},\"label\":\"NotFracchia\"},{\"id\":221,\"data\":{\"name\":\"Werner Herzog\"},\"label\":\"NotFracchia\"},{\"id\":222,\"data\":{\"name\":\"Robin Williams\"},\"label\":\"NotFracchia\"},{\"id\":223,\"data\":{\"name\":\"Vincent Ward\"},\"label\":\"NotFracchia\"},{\"id\":224,\"data\":{\"name\":\"Ethan Hawke\"},\"label\":\"NotFracchia\"},{\"id\":225,\"data\":{\"name\":\"Rick Yune\"},\"label\":\"NotFracchia\"},{\"id\":226,\"data\":{\"name\":\"James Cromwell\"},\"label\":\"NotFracchia\"},{\"id\":227,\"data\":{\"name\":\"Scott Hicks\"},\"label\":\"NotFracchia\"},{\"id\":228,\"data\":{\"name\":\"Parker Posey\"},\"label\":\"NotFracchia\"},{\"id\":229,\"data\":{\"name\":\"Dave Chappelle\"},\"label\":\"NotFracchia\"},{\"id\":230,\"data\":{\"name\":\"Steve Zahn\"},\"label\":\"NotFracchia\"},{\"id\":231,\"data\":{\"name\":\"Tom Hanks\"},\"label\":\"NotFracchia\"},{\"id\":232,\"data\":{\"name\":\"Nora Ephron\"},\"label\":\"NotFracchia\"},{\"id\":233,\"data\":{\"name\":\"Rita Wilson\"},\"label\":\"NotFracchia\"},{\"id\":234,\"data\":{\"name\":\"Bill Pullman\"},\"label\":\"NotFracchia\"},{\"id\":235,\"data\":{\"name\":\"Victor Garber\"},\"label\":\"NotFracchia\"},{\"id\":236,\"data\":{\"name\":\"Rosie O\\u0027Donnell\"},\"label\":\"NotFracchia\"},{\"id\":237,\"data\":{\"name\":\"John Patrick Stanley\"},\"label\":\"NotFracchia\"},{\"id\":238,\"data\":{\"name\":\"Nathan Lane\"},\"label\":\"NotFracchia\"},{\"id\":239,\"data\":{\"name\":\"Billy Crystal\"},\"label\":\"NotFracchia\"},{\"id\":240,\"data\":{\"name\":\"Carrie Fisher\"},\"label\":\"NotFracchia\"},{\"id\":241,\"data\":{\"name\":\"Bruno Kirby\"},\"label\":\"NotFracchia\"},{\"id\":242,\"data\":{\"name\":\"Liv Tyler\"},\"label\":\"NotFracchia\"},{\"id\":243,\"data\":{\"name\":\"Brooke Langton\"},\"label\":\"NotFracchia\"},{\"id\":244,\"data\":{\"name\":\"Gene Hackman\"},\"label\":\"NotFracchia\"},{\"id\":245,\"data\":{\"name\":\"Orlando Jones\"},\"label\":\"NotFracchia\"},{\"id\":246,\"data\":{\"name\":\"Howard Deutch\"},\"label\":\"NotFracchia\"},{\"id\":247,\"data\":{\"name\":\"Christian Bale\"},\"label\":\"NotFracchia\"},{\"id\":248,\"data\":{\"name\":\"Zach Grenier\"},\"label\":\"NotFracchia\"},{\"id\":249,\"data\":{\"name\":\"Mike Nichols\"},\"label\":\"NotFracchia\"},{\"id\":250,\"data\":{\"name\":\"Richard Harris\"},\"label\":\"NotFracchia\"},{\"id\":251,\"data\":{\"name\":\"Clint Eastwood\"},\"label\":\"NotFracchia\"},{\"id\":252,\"data\":{\"name\":\"Takeshi Kitano\"},\"label\":\"NotFracchia\"},{\"id\":253,\"data\":{\"name\":\"Dina Meyer\"},\"label\":\"NotFracchia\"},{\"id\":254,\"data\":{\"name\":\"Ice-T\"},\"label\":\"NotFracchia\"},{\"id\":255,\"data\":{\"name\":\"Robert Longo\"},\"label\":\"NotFracchia\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032665289_386804541",
      "id": "paragraph_1668032665289_386804541",
      "dateCreated": "2022-11-09 22:24:25.289",
      "dateStarted": "2022-11-10 15:43:24.209",
      "dateFinished": "2022-11-10 15:43:24.424",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nmatch (f:NotFracchia) return f",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:26.700",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":256,\"data\":{\"name\":\"Halle Berry\"},\"label\":\"NotFracchia\"},{\"id\":257,\"data\":{\"name\":\"Jim Broadbent\"},\"label\":\"NotFracchia\"},{\"id\":258,\"data\":{\"name\":\"Tom Tykwer\"},\"label\":\"NotFracchia\"},{\"id\":259,\"data\":{\"name\":\"David Mitchell\"},\"label\":\"NotFracchia\"},{\"id\":260,\"data\":{\"name\":\"Stefan Arndt\"},\"label\":\"NotFracchia\"},{\"id\":261,\"data\":{\"name\":\"Ian McKellen\"},\"label\":\"NotFracchia\"},{\"id\":262,\"data\":{\"name\":\"Audrey Tautou\"},\"label\":\"NotFracchia\"},{\"id\":263,\"data\":{\"name\":\"Paul Bettany\"},\"label\":\"NotFracchia\"},{\"id\":264,\"data\":{\"name\":\"Ron Howard\"},\"label\":\"NotFracchia\"},{\"id\":265,\"data\":{\"name\":\"Natalie Portman\"},\"label\":\"NotFracchia\"},{\"id\":266,\"data\":{\"name\":\"Stephen Rea\"},\"label\":\"NotFracchia\"},{\"id\":267,\"data\":{\"name\":\"John Hurt\"},\"label\":\"NotFracchia\"},{\"id\":268,\"data\":{\"name\":\"Ben Miles\"},\"label\":\"NotFracchia\"},{\"id\":269,\"data\":{\"name\":\"Emile Hirsch\"},\"label\":\"NotFracchia\"},{\"id\":270,\"data\":{\"name\":\"John Goodman\"},\"label\":\"NotFracchia\"},{\"id\":271,\"data\":{\"name\":\"Susan Sarandon\"},\"label\":\"NotFracchia\"},{\"id\":272,\"data\":{\"name\":\"Matthew Fox\"},\"label\":\"NotFracchia\"},{\"id\":273,\"data\":{\"name\":\"Christina Ricci\"},\"label\":\"NotFracchia\"},{\"id\":274,\"data\":{\"name\":\"Rain\"},\"label\":\"NotFracchia\"},{\"id\":275,\"data\":{\"name\":\"Naomie Harris\"},\"label\":\"NotFracchia\"},{\"id\":276,\"data\":{\"name\":\"Michael Clarke Duncan\"},\"label\":\"NotFracchia\"},{\"id\":277,\"data\":{\"name\":\"David Morse\"},\"label\":\"NotFracchia\"},{\"id\":278,\"data\":{\"name\":\"Sam Rockwell\"},\"label\":\"NotFracchia\"},{\"id\":279,\"data\":{\"name\":\"Gary Sinise\"},\"label\":\"NotFracchia\"},{\"id\":280,\"data\":{\"name\":\"Patricia Clarkson\"},\"label\":\"NotFracchia\"},{\"id\":281,\"data\":{\"name\":\"Frank Darabont\"},\"label\":\"NotFracchia\"},{\"id\":282,\"data\":{\"name\":\"Frank Langella\"},\"label\":\"NotFracchia\"},{\"id\":283,\"data\":{\"name\":\"Michael Sheen\"},\"label\":\"NotFracchia\"},{\"id\":284,\"data\":{\"name\":\"Oliver Platt\"},\"label\":\"NotFracchia\"},{\"id\":285,\"data\":{\"name\":\"Danny DeVito\"},\"label\":\"NotFracchia\"},{\"id\":286,\"data\":{\"name\":\"John C. Reilly\"},\"label\":\"NotFracchia\"},{\"id\":287,\"data\":{\"name\":\"Ed Harris\"},\"label\":\"NotFracchia\"},{\"id\":288,\"data\":{\"name\":\"Bill Paxton\"},\"label\":\"NotFracchia\"},{\"id\":289,\"data\":{\"name\":\"Philip Seymour Hoffman\"},\"label\":\"NotFracchia\"},{\"id\":290,\"data\":{\"name\":\"Jan de Bont\"},\"label\":\"NotFracchia\"},{\"id\":291,\"data\":{\"name\":\"Robert Zemeckis\"},\"label\":\"NotFracchia\"},{\"id\":292,\"data\":{\"name\":\"Milos Forman\"},\"label\":\"NotFracchia\"},{\"id\":293,\"data\":{\"name\":\"Diane Keaton\"},\"label\":\"NotFracchia\"},{\"id\":294,\"data\":{\"name\":\"Nancy Meyers\"},\"label\":\"NotFracchia\"},{\"id\":295,\"data\":{\"name\":\"Chris Columbus\"},\"label\":\"NotFracchia\"},{\"id\":296,\"data\":{\"name\":\"Julia Roberts\"},\"label\":\"NotFracchia\"},{\"id\":297,\"data\":{\"name\":\"Madonna\"},\"label\":\"NotFracchia\"},{\"id\":298,\"data\":{\"name\":\"Geena Davis\"},\"label\":\"NotFracchia\"},{\"id\":299,\"data\":{\"name\":\"Lori Petty\"},\"label\":\"NotFracchia\"},{\"id\":300,\"data\":{\"name\":\"Penny Marshall\"},\"label\":\"NotFracchia\"},{\"id\":301,\"data\":{\"name\":\"Paul Blythe\"},\"label\":\"NotFracchia\"},{\"id\":302,\"data\":{\"name\":\"Angela Scope\"},\"label\":\"NotFracchia\"},{\"id\":303,\"data\":{\"name\":\"Jessica Thompson\"},\"label\":\"NotFracchia\"},{\"id\":304,\"data\":{\"name\":\"James Thompson\"},\"label\":\"NotFracchia\"},{\"id\":173,\"data\":{\"name\":\"Carrie-Anne Moss\"},\"label\":\"NotFracchia\"},{\"id\":174,\"data\":{\"name\":\"Laurence Fishburne\"},\"label\":\"NotFracchia\"},{\"id\":175,\"data\":{\"name\":\"Hugo Weaving\"},\"label\":\"NotFracchia\"},{\"id\":176,\"data\":{\"name\":\"Lilly Wachowski\"},\"label\":\"NotFracchia\"},{\"id\":177,\"data\":{\"name\":\"Lana Wachowski\"},\"label\":\"NotFracchia\"},{\"id\":178,\"data\":{\"name\":\"Franco e Ciccio\"},\"label\":\"NotFracchia\"},{\"id\":179,\"data\":{\"name\":\"Emil Eifrem\"},\"label\":\"NotFracchia\"},{\"id\":180,\"data\":{\"name\":\"Charlize Theron\"},\"label\":\"NotFracchia\"},{\"id\":181,\"data\":{\"name\":\"Al Pacino\"},\"label\":\"NotFracchia\"},{\"id\":182,\"data\":{\"name\":\"Taylor Hackford\"},\"label\":\"NotFracchia\"},{\"id\":183,\"data\":{\"name\":\"Tom Cruise\"},\"label\":\"NotFracchia\"},{\"id\":184,\"data\":{\"name\":\"Jack Nicholson\"},\"label\":\"NotFracchia\"},{\"id\":185,\"data\":{\"name\":\"Demi Moore\"},\"label\":\"NotFracchia\"},{\"id\":186,\"data\":{\"name\":\"Kevin Bacon\"},\"label\":\"NotFracchia\"},{\"id\":187,\"data\":{\"name\":\"Kiefer Sutherland\"},\"label\":\"NotFracchia\"},{\"id\":188,\"data\":{\"name\":\"Noah Wyle\"},\"label\":\"NotFracchia\"},{\"id\":189,\"data\":{\"name\":\"Cuba Gooding Jr.\"},\"label\":\"NotFracchia\"},{\"id\":190,\"data\":{\"name\":\"Kevin Pollak\"},\"label\":\"NotFracchia\"},{\"id\":191,\"data\":{\"name\":\"J.T. Walsh\"},\"label\":\"NotFracchia\"},{\"id\":192,\"data\":{\"name\":\"James Marshall\"},\"label\":\"NotFracchia\"},{\"id\":193,\"data\":{\"name\":\"Christopher Guest\"},\"label\":\"NotFracchia\"},{\"id\":194,\"data\":{\"name\":\"Rob Reiner\"},\"label\":\"NotFracchia\"},{\"id\":195,\"data\":{\"name\":\"Aaron Sorkin\"},\"label\":\"NotFracchia\"},{\"id\":196,\"data\":{\"name\":\"Kelly McGillis\"},\"label\":\"NotFracchia\"},{\"id\":197,\"data\":{\"name\":\"Val Kilmer\"},\"label\":\"NotFracchia\"},{\"id\":198,\"data\":{\"name\":\"Anthony Edwards\"},\"label\":\"NotFracchia\"},{\"id\":199,\"data\":{\"name\":\"Tom Skerritt\"},\"label\":\"NotFracchia\"},{\"id\":200,\"data\":{\"name\":\"Meg Ryan\"},\"label\":\"NotFracchia\"},{\"id\":201,\"data\":{\"name\":\"Tony Scott\"},\"label\":\"NotFracchia\"},{\"id\":202,\"data\":{\"name\":\"Jim Cash\"},\"label\":\"NotFracchia\"},{\"id\":203,\"data\":{\"name\":\"Renee Zellweger\"},\"label\":\"NotFracchia\"},{\"id\":204,\"data\":{\"name\":\"Kelly Preston\"},\"label\":\"NotFracchia\"},{\"id\":205,\"data\":{\"name\":\"Jerry O\\u0027Connell\"},\"label\":\"NotFracchia\"},{\"id\":206,\"data\":{\"name\":\"Jay Mohr\"},\"label\":\"NotFracchia\"},{\"id\":207,\"data\":{\"name\":\"Bonnie Hunt\"},\"label\":\"NotFracchia\"},{\"id\":208,\"data\":{\"name\":\"Regina King\"},\"label\":\"NotFracchia\"},{\"id\":209,\"data\":{\"name\":\"Jonathan Lipnicki\"},\"label\":\"NotFracchia\"},{\"id\":210,\"data\":{\"name\":\"Cameron Crowe\"},\"label\":\"NotFracchia\"},{\"id\":211,\"data\":{\"name\":\"River Phoenix\"},\"label\":\"NotFracchia\"},{\"id\":212,\"data\":{\"name\":\"Corey Feldman\"},\"label\":\"NotFracchia\"},{\"id\":213,\"data\":{\"name\":\"Wil Wheaton\"},\"label\":\"NotFracchia\"},{\"id\":214,\"data\":{\"name\":\"John Cusack\"},\"label\":\"NotFracchia\"},{\"id\":215,\"data\":{\"name\":\"Marshall Bell\"},\"label\":\"NotFracchia\"},{\"id\":216,\"data\":{\"name\":\"Helen Hunt\"},\"label\":\"NotFracchia\"},{\"id\":217,\"data\":{\"name\":\"Greg Kinnear\"},\"label\":\"NotFracchia\"},{\"id\":218,\"data\":{\"name\":\"James L. Brooks\"},\"label\":\"NotFracchia\"},{\"id\":219,\"data\":{\"name\":\"Annabella Sciorra\"},\"label\":\"NotFracchia\"},{\"id\":220,\"data\":{\"name\":\"Max von Sydow\"},\"label\":\"NotFracchia\"},{\"id\":221,\"data\":{\"name\":\"Werner Herzog\"},\"label\":\"NotFracchia\"},{\"id\":222,\"data\":{\"name\":\"Robin Williams\"},\"label\":\"NotFracchia\"},{\"id\":223,\"data\":{\"name\":\"Vincent Ward\"},\"label\":\"NotFracchia\"},{\"id\":224,\"data\":{\"name\":\"Ethan Hawke\"},\"label\":\"NotFracchia\"},{\"id\":225,\"data\":{\"name\":\"Rick Yune\"},\"label\":\"NotFracchia\"},{\"id\":226,\"data\":{\"name\":\"James Cromwell\"},\"label\":\"NotFracchia\"},{\"id\":227,\"data\":{\"name\":\"Scott Hicks\"},\"label\":\"NotFracchia\"},{\"id\":228,\"data\":{\"name\":\"Parker Posey\"},\"label\":\"NotFracchia\"},{\"id\":229,\"data\":{\"name\":\"Dave Chappelle\"},\"label\":\"NotFracchia\"},{\"id\":230,\"data\":{\"name\":\"Steve Zahn\"},\"label\":\"NotFracchia\"},{\"id\":231,\"data\":{\"name\":\"Tom Hanks\"},\"label\":\"NotFracchia\"},{\"id\":232,\"data\":{\"name\":\"Nora Ephron\"},\"label\":\"NotFracchia\"},{\"id\":233,\"data\":{\"name\":\"Rita Wilson\"},\"label\":\"NotFracchia\"},{\"id\":234,\"data\":{\"name\":\"Bill Pullman\"},\"label\":\"NotFracchia\"},{\"id\":235,\"data\":{\"name\":\"Victor Garber\"},\"label\":\"NotFracchia\"},{\"id\":236,\"data\":{\"name\":\"Rosie O\\u0027Donnell\"},\"label\":\"NotFracchia\"},{\"id\":237,\"data\":{\"name\":\"John Patrick Stanley\"},\"label\":\"NotFracchia\"},{\"id\":238,\"data\":{\"name\":\"Nathan Lane\"},\"label\":\"NotFracchia\"},{\"id\":239,\"data\":{\"name\":\"Billy Crystal\"},\"label\":\"NotFracchia\"},{\"id\":240,\"data\":{\"name\":\"Carrie Fisher\"},\"label\":\"NotFracchia\"},{\"id\":241,\"data\":{\"name\":\"Bruno Kirby\"},\"label\":\"NotFracchia\"},{\"id\":242,\"data\":{\"name\":\"Liv Tyler\"},\"label\":\"NotFracchia\"},{\"id\":243,\"data\":{\"name\":\"Brooke Langton\"},\"label\":\"NotFracchia\"},{\"id\":244,\"data\":{\"name\":\"Gene Hackman\"},\"label\":\"NotFracchia\"},{\"id\":245,\"data\":{\"name\":\"Orlando Jones\"},\"label\":\"NotFracchia\"},{\"id\":246,\"data\":{\"name\":\"Howard Deutch\"},\"label\":\"NotFracchia\"},{\"id\":247,\"data\":{\"name\":\"Christian Bale\"},\"label\":\"NotFracchia\"},{\"id\":248,\"data\":{\"name\":\"Zach Grenier\"},\"label\":\"NotFracchia\"},{\"id\":249,\"data\":{\"name\":\"Mike Nichols\"},\"label\":\"NotFracchia\"},{\"id\":250,\"data\":{\"name\":\"Richard Harris\"},\"label\":\"NotFracchia\"},{\"id\":251,\"data\":{\"name\":\"Clint Eastwood\"},\"label\":\"NotFracchia\"},{\"id\":252,\"data\":{\"name\":\"Takeshi Kitano\"},\"label\":\"NotFracchia\"},{\"id\":253,\"data\":{\"name\":\"Dina Meyer\"},\"label\":\"NotFracchia\"},{\"id\":254,\"data\":{\"name\":\"Ice-T\"},\"label\":\"NotFracchia\"},{\"id\":255,\"data\":{\"name\":\"Robert Longo\"},\"label\":\"NotFracchia\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032674035_646419497",
      "id": "paragraph_1668032674035_646419497",
      "dateCreated": "2022-11-09 22:24:34.035",
      "dateStarted": "2022-11-10 15:43:25.847",
      "dateFinished": "2022-11-10 15:43:25.972",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// if name is Giandomenico Fracchia we return list of \u0027title\u0027 movies related\n// if name contains \u0027Carrie\u0027 we return list of \u0027title\u0027 and \u0027tagline\u0027 movies related\n// otherwise we return list of \u0027released\u0027 movies related\n\nMATCH (n:Person)\nCALL apoc.case([                // list of pairs (condition and query)\n  n.name \u003d \u0027Giandomenico Fracchia\u0027, \"RETURN [(n)-[]-(m:Movie) | m.title] as selection\",\n  n.name contains \u0027Carrie\u0027, \"RETURN [(n)-[]-(m:Movie) | \u0027title: \u0027 + m.title + \u0027, tagline: \u0027 + m.tagline] as selection\"],   \n  \u0027RETURN [(n)-[]-(m:Movie) | m.released] as selection\u0027,                                         \n  {n: n}\n)\nYIELD value\nRETURN n.name, value.selection as selection;",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:36.565",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "selection": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tselection\n\"Giandomenico Fracchia\"\t[null,\"The Replacements\",\"Something\u0027s Gotta Give\",\"Johnny Mnemonic\",\"The Devil\u0027s Advocate\",\"The Matrix Revolutions\",\"The Matrix Reloaded\",\"The Matrix\"]\n\"Carrie-Anne Moss\"\t[\"title: The Matrix Revolutions, tagline: Everything that has a beginning has an end\",\"title: The Matrix Reloaded, tagline: Free your mind\",\"title: The Matrix, tagline: Welcome to the Real World\"]\n\"Laurence Fishburne\"\t[2003,2003,1999]\n\"Hugo Weaving\"\t[2012,2006,2003,2003,1999]\n\"Lilly Wachowski\"\t[2008,2006,2006,2008,2012,2009,2003,2003,1999]\n\"Lana Wachowski\"\t[2006,2008,2012,2006,2008,2009,2003,2003,1999]\n\"Franco e Ciccio\"\t[2009,2008,2006,2003,2003,1999]\n\"Emil Eifrem\"\t[1999]\n\"Charlize Theron\"\t[1996,1997]\n\"Al Pacino\"\t[1997]\n\"Taylor Hackford\"\t[1997]\n\"Tom Cruise\"\t[2000,1986,1992]\n\"Jack Nicholson\"\t[1997,1992,2003,1975,1992]\n\"Demi Moore\"\t[1992]\n\"Kevin Bacon\"\t[2008,1995,1992]\n\"Kiefer Sutherland\"\t[1986,1992]\n\"Noah Wyle\"\t[1992]\n\"Cuba Gooding Jr.\"\t[1992,2000,1997,1998]\n\"Kevin Pollak\"\t[1992]\n\"J.T. Walsh\"\t[1992,1992]\n\"James Marshall\"\t[2006,1992,2009]\n\"Christopher Guest\"\t[1992]\n\"Rob Reiner\"\t[1986,1998,1998,1992]\n\"Aaron Sorkin\"\t[1992,1992]\n\"Kelly McGillis\"\t[1986]\n\"Val Kilmer\"\t[1986]\n\"Anthony Edwards\"\t[1986]\n\"Tom Skerritt\"\t[1986]\n\"Meg Ryan\"\t[1990,1998,1998,1986,1993]\n\"Tony Scott\"\t[1986]\n\"Jim Cash\"\t[1986]\n\"Renee Zellweger\"\t[2000]\n\"Kelly Preston\"\t[2000]\n\"Jerry O\u0027Connell\"\t[2000,1986]\n\"Jay Mohr\"\t[2000]\n\"Bonnie Hunt\"\t[1999,2000]\n\"Regina King\"\t[2000]\n\"Jonathan Lipnicki\"\t[2000]\n\"Cameron Crowe\"\t[2000,2000,2000]\n\"River Phoenix\"\t[1986]\n\"Corey Feldman\"\t[1986]\n\"Wil Wheaton\"\t[1986]\n\"John Cusack\"\t[1986]\n\"Marshall Bell\"\t[1986,2006]\n\"Helen Hunt\"\t[2000,1997,1996]\n\"Greg Kinnear\"\t[1997,1998]\n\"James L. Brooks\"\t[1997]\n\"Annabella Sciorra\"\t[1998]\n\"Max von Sydow\"\t[1998,1999]\n\"Werner Herzog\"\t[1998,2006]\n\"Robin Williams\"\t[1998,1999,1996]\n\"Vincent Ward\"\t[1998]\n\"Ethan Hawke\"\t[1999]\n\"Rick Yune\"\t[2009,1999]\n\"James Cromwell\"\t[1999,1999]\n\"Scott Hicks\"\t[1999]\n\"Parker Posey\"\t[1998]\n\"Dave Chappelle\"\t[1998]\n\"Steve Zahn\"\t[1998,2006]\n\"Tom Hanks\"\t[2000,2007,1996,1993,1996,1998,1995,1999,1992,2006,2012,2004,1990]\n\"Nora Ephron\"\t[1993,1998,1998,1998]\n\"Rita Wilson\"\t[1993]\n\"Bill Pullman\"\t[1993]\n\"Victor Garber\"\t[1993]\n\"Rosie O\u0027Donnell\"\t[1992,1993]\n\"John Patrick Stanley\"\t[1990]\n\"Nathan Lane\"\t[1990,1996]\n\"Billy Crystal\"\t[1998]\n\"Carrie Fisher\"\t[\"title: When Herry Met Sally, tagline: Can two friends sleep together and still love each other in the morning?\"]\n\"Bruno Kirby\"\t[1998]\n\"Liv Tyler\"\t[1996]\n\"Brooke Langton\"\t[2000]\n\"Gene Hackman\"\t[1996,1992,2000]\n\"Orlando Jones\"\t[2000]\n\"Howard Deutch\"\t[2000]\n\"Christian Bale\"\t[2006]\n\"Zach Grenier\"\t[2006,1996]\n\"Mike Nichols\"\t[2007,1996]\n\"Richard Harris\"\t[1992]\n\"Clint Eastwood\"\t[1992,1992]\n\"Takeshi Kitano\"\t[1995]\n\"Dina Meyer\"\t[1995]\n\"Ice-T\"\t[1995]\n\"Robert Longo\"\t[1995]\n\"Halle Berry\"\t[2012]\n\"Jim Broadbent\"\t[2012]\n\"Tom Tykwer\"\t[2012]\n\"David Mitchell\"\t[2012]\n\"Stefan Arndt\"\t[2012]\n\"Ian McKellen\"\t[2006]\n\"Audrey Tautou\"\t[2006]\n\"Paul Bettany\"\t[2006]\n\"Ron Howard\"\t[1995,2006,2008]\n\"Natalie Portman\"\t[2006]\n\"Stephen Rea\"\t[2006]\n\"John Hurt\"\t[2006]\n\"Ben Miles\"\t[2008,2009,2006]\n\"Emile Hirsch\"\t[2008]\n\"John Goodman\"\t[2008]\n\"Susan Sarandon\"\t[2008]\n\"Matthew Fox\"\t[2008]\n\"Christina Ricci\"\t[2008]\n\"Rain\"\t[2008,2009]\n\"Naomie Harris\"\t[2009]\n\"Michael Clarke Duncan\"\t[1999]\n\"David Morse\"\t[1999]\n\"Sam Rockwell\"\t[2008,1999]\n\"Gary Sinise\"\t[1995,1999]\n\"Patricia Clarkson\"\t[1999]\n\"Frank Darabont\"\t[1999]\n\"Frank Langella\"\t[2008]\n\"Michael Sheen\"\t[2008]\n\"Oliver Platt\"\t[2008,1999]\n\"Danny DeVito\"\t[1992,1992,1975]\n\"John C. Reilly\"\t[1992]\n\"Ed Harris\"\t[1995]\n\"Bill Paxton\"\t[1992,1996,1995]\n\"Philip Seymour Hoffman\"\t[1996,2007]\n\"Jan de Bont\"\t[1996]\n\"Robert Zemeckis\"\t[2004,2000]\n\"Milos Forman\"\t[1975]\n\"Diane Keaton\"\t[2003]\n\"Nancy Meyers\"\t[2003,2003,2003]\n\"Chris Columbus\"\t[1999]\n\"Julia Roberts\"\t[2007]\n\"Madonna\"\t[1992]\n\"Geena Davis\"\t[1992]\n\"Lori Petty\"\t[1992]\n\"Penny Marshall\"\t[1992]\n\"Paul Blythe\"\t[]\n\"Angela Scope\"\t[2000]\n\"Jessica Thompson\"\t[2000,1996,2012,2006,1992,2000]\n\"James Thompson\"\t[2000,2006]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032682688_179384793",
      "id": "paragraph_1668032682688_179384793",
      "dateCreated": "2022-11-09 22:24:42.688",
      "dateStarted": "2022-11-10 15:43:34.851",
      "dateFinished": "2022-11-10 15:43:35.904",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nMATCH (n:Person)\nCALL apoc.do.case([                // list of pairs (condition and query)\n  n.name \u003d \u0027Giandomenico Fracchia\u0027, \"WITH $n as n CREATE (n)-[:MY_CASE_REL]-\u003e(:MyCaseNode {myId: 1})\",\n  n.name contains \u0027Carrie\u0027, \"WITH $n as n CREATE (n)-[:MY_CASE_REL]-\u003e(:MyCaseNode {myId: 2})\"],   \n  \u0027\u0027,                                         \n  {n: n}\n)\nYIELD value RETURN n.name;",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:43.747",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\n\"Laurence Fishburne\"\n\"Hugo Weaving\"\n\"Lilly Wachowski\"\n\"Lana Wachowski\"\n\"Franco e Ciccio\"\n\"Emil Eifrem\"\n\"Charlize Theron\"\n\"Al Pacino\"\n\"Taylor Hackford\"\n\"Tom Cruise\"\n\"Jack Nicholson\"\n\"Demi Moore\"\n\"Kevin Bacon\"\n\"Kiefer Sutherland\"\n\"Noah Wyle\"\n\"Cuba Gooding Jr.\"\n\"Kevin Pollak\"\n\"J.T. Walsh\"\n\"James Marshall\"\n\"Christopher Guest\"\n\"Rob Reiner\"\n\"Aaron Sorkin\"\n\"Kelly McGillis\"\n\"Val Kilmer\"\n\"Anthony Edwards\"\n\"Tom Skerritt\"\n\"Meg Ryan\"\n\"Tony Scott\"\n\"Jim Cash\"\n\"Renee Zellweger\"\n\"Kelly Preston\"\n\"Jerry O\u0027Connell\"\n\"Jay Mohr\"\n\"Bonnie Hunt\"\n\"Regina King\"\n\"Jonathan Lipnicki\"\n\"Cameron Crowe\"\n\"River Phoenix\"\n\"Corey Feldman\"\n\"Wil Wheaton\"\n\"John Cusack\"\n\"Marshall Bell\"\n\"Helen Hunt\"\n\"Greg Kinnear\"\n\"James L. Brooks\"\n\"Annabella Sciorra\"\n\"Max von Sydow\"\n\"Werner Herzog\"\n\"Robin Williams\"\n\"Vincent Ward\"\n\"Ethan Hawke\"\n\"Rick Yune\"\n\"James Cromwell\"\n\"Scott Hicks\"\n\"Parker Posey\"\n\"Dave Chappelle\"\n\"Steve Zahn\"\n\"Tom Hanks\"\n\"Nora Ephron\"\n\"Rita Wilson\"\n\"Bill Pullman\"\n\"Victor Garber\"\n\"Rosie O\u0027Donnell\"\n\"John Patrick Stanley\"\n\"Nathan Lane\"\n\"Billy Crystal\"\n\"Bruno Kirby\"\n\"Liv Tyler\"\n\"Brooke Langton\"\n\"Gene Hackman\"\n\"Orlando Jones\"\n\"Howard Deutch\"\n\"Christian Bale\"\n\"Zach Grenier\"\n\"Mike Nichols\"\n\"Richard Harris\"\n\"Clint Eastwood\"\n\"Takeshi Kitano\"\n\"Dina Meyer\"\n\"Ice-T\"\n\"Robert Longo\"\n\"Halle Berry\"\n\"Jim Broadbent\"\n\"Tom Tykwer\"\n\"David Mitchell\"\n\"Stefan Arndt\"\n\"Ian McKellen\"\n\"Audrey Tautou\"\n\"Paul Bettany\"\n\"Ron Howard\"\n\"Natalie Portman\"\n\"Stephen Rea\"\n\"John Hurt\"\n\"Ben Miles\"\n\"Emile Hirsch\"\n\"John Goodman\"\n\"Susan Sarandon\"\n\"Matthew Fox\"\n\"Christina Ricci\"\n\"Rain\"\n\"Naomie Harris\"\n\"Michael Clarke Duncan\"\n\"David Morse\"\n\"Sam Rockwell\"\n\"Gary Sinise\"\n\"Patricia Clarkson\"\n\"Frank Darabont\"\n\"Frank Langella\"\n\"Michael Sheen\"\n\"Oliver Platt\"\n\"Danny DeVito\"\n\"John C. Reilly\"\n\"Ed Harris\"\n\"Bill Paxton\"\n\"Philip Seymour Hoffman\"\n\"Jan de Bont\"\n\"Robert Zemeckis\"\n\"Milos Forman\"\n\"Diane Keaton\"\n\"Nancy Meyers\"\n\"Chris Columbus\"\n\"Julia Roberts\"\n\"Madonna\"\n\"Geena Davis\"\n\"Lori Petty\"\n\"Penny Marshall\"\n\"Paul Blythe\"\n\"Angela Scope\"\n\"Jessica Thompson\"\n\"James Thompson\"\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032690798_1523486053",
      "id": "paragraph_1668032690798_1523486053",
      "dateCreated": "2022-11-09 22:24:50.798",
      "dateStarted": "2022-11-10 15:43:42.808",
      "dateFinished": "2022-11-10 15:43:43.090",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nmatch (n)-[:MY_CASE_REL]-\u003e(m:MyCaseNode)\nreturn n.name, m.myId",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:46.302",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "m.myId": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tm.myId\n\"Giandomenico Fracchia\"\t1\n\"Carrie-Anne Moss\"\t2\n\"Carrie Fisher\"\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032694914_498395274",
      "id": "paragraph_1668032694914_498395274",
      "dateCreated": "2022-11-09 22:24:54.914",
      "dateStarted": "2022-11-10 15:43:45.526",
      "dateFinished": "2022-11-10 15:43:45.624",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n\n## Conditional exception\n\nApoc also provide a procedure to raise an exception with a specific message when predicate is false.\n\n\u003cpre\u003e\napoc.util.validate(predicate, message, params) - if the `predicate` is true raise an exception with `message`.\n\u003c/pre\u003e\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:40.881",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eConditional exception\u003c/h2\u003e\n\u003cp\u003eApoc also provide a procedure to raise an exception with a specific message when predicate is false.\u003c/p\u003e\n\u003cpre\u003e\napoc.util.validate(predicate, message, params) - if the `predicate` is true raise an exception with `message`.\n\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032715900_339806760",
      "id": "paragraph_1668032715900_339806760",
      "dateCreated": "2022-11-09 22:25:15.900",
      "dateStarted": "2022-11-10 15:43:40.886",
      "dateFinished": "2022-11-10 15:43:40.904",
      "status": "FINISHED"
    },
    {
      "title": "this fails",
      "text": "%neo4j\nMATCH (n:Person) WITH n.name \u003d \u0027Giandomenico Fracchia\u0027 as booleanPredicate, n\nCALL apoc.util.validate(booleanPredicate,\u0027Person with name %s found\u0027,[n.name])\nRETURN count(*)",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:10.624",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Failed to invoke procedure `apoc.util.validate`: Caused by: java.lang.RuntimeException: Person with name Giandomenico Fracchia found"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032721586_1186077163",
      "id": "paragraph_1668032721586_1186077163",
      "dateCreated": "2022-11-09 22:25:21.586",
      "dateStarted": "2022-11-10 15:43:50.069",
      "dateFinished": "2022-11-10 15:43:50.255",
      "status": "ERROR"
    },
    {
      "text": "%neo4j\nMATCH (n:Person) WITH n.name \u003d \u0027Not Existent\u0027 as booleanPredicate, n\nCALL apoc.util.validate(booleanPredicate,\u0027Person with name %s found\u0027,[n.name])\nRETURN count(*)",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:43:54.211",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "count(*)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "count(*)\n133\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032746928_1888804831",
      "id": "paragraph_1668032746928_1888804831",
      "dateCreated": "2022-11-09 22:25:46.928",
      "dateStarted": "2022-11-10 15:43:53.420",
      "dateFinished": "2022-11-10 15:43:53.495",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nWe have also `apoc.util.validatePredicate(predicate, message, params)`, equivalent but it\u0027s a function.\n\n```\nMATCH (a:Person)\nWHERE apoc.util.validatePredicate(true,\u0027Person with name %s found\u0027,[n.name])\nRETURN a\n```",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:14.744",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe have also \u003ccode\u003eapoc.util.validatePredicate(predicate, message, params)\u003c/code\u003e, equivalent but it\u0026rsquo;s a function.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eMATCH (a:Person)\nWHERE apoc.util.validatePredicate(true,\u0027Person with name %s found\u0027,[n.name])\nRETURN a\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032779682_2139821743",
      "id": "paragraph_1668032779682_2139821743",
      "dateCreated": "2022-11-09 22:26:19.682",
      "dateStarted": "2022-11-10 15:44:14.750",
      "dateFinished": "2022-11-10 15:44:14.764",
      "status": "FINISHED"
    },
    {
      "text": "%md\n# Triggers\n\nIn a trigger you register Cypher statements that are called when data in Neo4j is changed (created, updated, deleted).\nYou can run them before or after commit.\n\n\u003cpre\u003e\nYou have to enable trigger through the config `apoc.trigger.enabled\u003dtrue` to use it.\n\u003c/pre\u003e\n\n\nTo add a trigger you can execute this query:\n`CALL apoc.trigger.add(triggerName, statement, selector, params)`\n\nSecond param is the statement, in which you can put these parameters: `$createdNodes`, `$deletedNodes` etc.,\n\n- `transactionId` - the id of the transaction\n- `commitTime` - the date of the transaction in milliseconds\n- `createdNodes` - list of created nodes\n- `createdRelationships` - list of created relationships\n- `deletedNodes` - list of deleted nodes\n- `deletedRelationships` - list of deleted relationships\n- `removedLabels` - map of label - list of nodes\n- `assignedLabels` - map of label - list of nodes\n- `removedNodeProperties` - Map\u003cString, List\u003e, see below\n- `removedRelationshipProperties` - Map\u003cString, List\u003e, see below\n- `assignedNodeProperties` - Map\u003cString, List\u003e, see below\n- `assignedRelationshipProperties` - Map\u003cString, List\u003e, see below\n\nIf I have 2 nodes `(:Test {a: 1})`, `(:Test {b:1})`,\nif I execute `MATCH (n:Test) SET n.a\u003d2, n.b\u003d3` in a trigger\nthe `$assignedNodeProperties` will be this one (where map keys are property names):\n```\n{\n   a: [{\n         node : NODE(1),\n         new: 2,\n         old: 1,\n         key: \"a\"\n      },\n      {\n         node: NODE(2),\n         new: 2,\n         old: null,\n         key: \"a\"\n      }],\n   \n   b: [{\n         node: NODE(1),\n         new: 3,\n         old: null,\n         key: \"b\"\n      },\n      {\n         node: NODE(2),\n         new: 3,\n         old: 1,\n         key: \"b\"\n      }]\n}\n```\nSame structure for `removedNodeProperties`. \nThe `removedRelationshipProperties` and `assignedRelationshipProperties` have `relationship : REL` instead of `node : NODE`.\n\n\nYou can use these helper functions to extract nodes or relationships by label/relationship-type or updated property key.\n\n- `apoc.trigger.nodesByLabel($assignedLabels/$assignedNodeProperties,\u0027Label\u0027)` - function to filter entries by label, to be used within a trigger statement with `$assignedLabels`\n- `apoc.trigger.propertiesByKey($assignedNodeProperties,\u0027key\u0027)` - function to filter propertyEntries by property-key, to be used within a trigger statement with `$assignedNodeProperties`, `$assignedRelationshipProperties`, `$removedNodeProperties` and `$removedRelationshipProperties` .\n    So in previous case `apoc.trigger.propertiesByKey($assignedNodeProperties,\u0027b\u0027)` return only second array, \n    that is `[{node:NODE(1), new:3, old:null, key:\"b\"}, {node:NODE(2), new:3, old:1, key:\"b\"}]`\n\n\n\nThe `selector` parameter could be `{phase:PHASENAME\u0027}`\nwhere `PHASENAME` is:\n\n- `before (default)` - The trigger will be activate right `before` the commit\n- `rollback` - The trigger will be activate right after the  `rollback`\n- `after` - The trigger will be activate right after the `commit`\n- `afterAsync` - The trigger will be activate right after the commit and inside a new transaction and thread so that will not\nimpact the original one. Useful for heavy operations without to not blocking the original transaction.\n\n\nInto the 4th argument, you can put additional parameters: `{params: {paramMap}}` \n\n\n## Other trigger procedures:\n\nIn addition to `trigger.add` there are:\n\n- `CALL apoc.trigger.remove(name)`\n- `CALL apoc.trigger.removeAll()`\n- `CALL apoc.trigger.list()`\n- `CALL apoc.trigger.pause(name)`\n- `CALL apoc.trigger.resume(name)`\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:17.052",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eTriggers\u003c/h1\u003e\n\u003cp\u003eIn a trigger you register Cypher statements that are called when data in Neo4j is changed (created, updated, deleted).\u003cbr /\u003e\nYou can run them before or after commit.\u003c/p\u003e\n\u003cpre\u003e\nYou have to enable trigger through the config `apoc.trigger.enabled\u003dtrue` to use it.\n\u003c/pre\u003e\n\u003cp\u003eTo add a trigger you can execute this query:\u003cbr /\u003e\n\u003ccode\u003eCALL apoc.trigger.add(triggerName, statement, selector, params)\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSecond param is the statement, in which you can put these parameters: \u003ccode\u003e$createdNodes\u003c/code\u003e, \u003ccode\u003e$deletedNodes\u003c/code\u003e etc.,\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etransactionId\u003c/code\u003e - the id of the transaction\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecommitTime\u003c/code\u003e - the date of the transaction in milliseconds\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecreatedNodes\u003c/code\u003e - list of created nodes\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecreatedRelationships\u003c/code\u003e - list of created relationships\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edeletedNodes\u003c/code\u003e - list of deleted nodes\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edeletedRelationships\u003c/code\u003e - list of deleted relationships\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eremovedLabels\u003c/code\u003e - map of label - list of nodes\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eassignedLabels\u003c/code\u003e - map of label - list of nodes\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eremovedNodeProperties\u003c/code\u003e - Map\u0026lt;String, List\u0026gt;, see below\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eremovedRelationshipProperties\u003c/code\u003e - Map\u0026lt;String, List\u0026gt;, see below\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eassignedNodeProperties\u003c/code\u003e - Map\u0026lt;String, List\u0026gt;, see below\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eassignedRelationshipProperties\u003c/code\u003e - Map\u0026lt;String, List\u0026gt;, see below\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf I have 2 nodes \u003ccode\u003e(:Test {a: 1})\u003c/code\u003e, \u003ccode\u003e(:Test {b:1})\u003c/code\u003e,\u003cbr /\u003e\nif I execute \u003ccode\u003eMATCH (n:Test) SET n.a\u003d2, n.b\u003d3\u003c/code\u003e in a trigger\u003cbr /\u003e\nthe \u003ccode\u003e$assignedNodeProperties\u003c/code\u003e will be this one (where map keys are property names):\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\n   a: [{\n         node : NODE(1),\n         new: 2,\n         old: 1,\n         key: \u0026quot;a\u0026quot;\n      },\n      {\n         node: NODE(2),\n         new: 2,\n         old: null,\n         key: \u0026quot;a\u0026quot;\n      }],\n   \n   b: [{\n         node: NODE(1),\n         new: 3,\n         old: null,\n         key: \u0026quot;b\u0026quot;\n      },\n      {\n         node: NODE(2),\n         new: 3,\n         old: 1,\n         key: \u0026quot;b\u0026quot;\n      }]\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSame structure for \u003ccode\u003eremovedNodeProperties\u003c/code\u003e.\u003cbr /\u003e\nThe \u003ccode\u003eremovedRelationshipProperties\u003c/code\u003e and \u003ccode\u003eassignedRelationshipProperties\u003c/code\u003e have \u003ccode\u003erelationship : REL\u003c/code\u003e instead of \u003ccode\u003enode : NODE\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou can use these helper functions to extract nodes or relationships by label/relationship-type or updated property key.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.trigger.nodesByLabel($assignedLabels/$assignedNodeProperties,\u0027Label\u0027)\u003c/code\u003e - function to filter entries by label, to be used within a trigger statement with \u003ccode\u003e$assignedLabels\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.trigger.propertiesByKey($assignedNodeProperties,\u0027key\u0027)\u003c/code\u003e - function to filter propertyEntries by property-key, to be used within a trigger statement with \u003ccode\u003e$assignedNodeProperties\u003c/code\u003e, \u003ccode\u003e$assignedRelationshipProperties\u003c/code\u003e, \u003ccode\u003e$removedNodeProperties\u003c/code\u003e and \u003ccode\u003e$removedRelationshipProperties\u003c/code\u003e .\u003cbr /\u003e\nSo in previous case \u003ccode\u003eapoc.trigger.propertiesByKey($assignedNodeProperties,\u0027b\u0027)\u003c/code\u003e return only second array,\u003cbr /\u003e\nthat is \u003ccode\u003e[{node:NODE(1), new:3, old:null, key:\u0026quot;b\u0026quot;}, {node:NODE(2), new:3, old:1, key:\u0026quot;b\u0026quot;}]\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe \u003ccode\u003eselector\u003c/code\u003e parameter could be \u003ccode\u003e{phase:PHASENAME\u0027}\u003c/code\u003e\u003cbr /\u003e\nwhere \u003ccode\u003ePHASENAME\u003c/code\u003e is:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebefore (default)\u003c/code\u003e - The trigger will be activate right \u003ccode\u003ebefore\u003c/code\u003e the commit\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erollback\u003c/code\u003e - The trigger will be activate right after the  \u003ccode\u003erollback\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eafter\u003c/code\u003e - The trigger will be activate right after the \u003ccode\u003ecommit\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eafterAsync\u003c/code\u003e - The trigger will be activate right after the commit and inside a new transaction and thread so that will not\u003cbr /\u003e\nimpact the original one. Useful for heavy operations without to not blocking the original transaction.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eInto the 4th argument, you can put additional parameters: \u003ccode\u003e{params: {paramMap}}\u003c/code\u003e\u003c/p\u003e\n\u003ch2\u003eOther trigger procedures:\u003c/h2\u003e\n\u003cp\u003eIn addition to \u003ccode\u003etrigger.add\u003c/code\u003e there are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.trigger.remove(name)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.trigger.removeAll()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.trigger.list()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.trigger.pause(name)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.trigger.resume(name)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667994694627_988315837",
      "id": "paragraph_1667994694627_988315837",
      "dateCreated": "2022-11-09 11:51:34.627",
      "dateStarted": "2022-11-10 15:44:17.056",
      "dateFinished": "2022-11-10 15:44:17.089",
      "status": "FINISHED"
    },
    {
      "title": "Install a trigger",
      "text": "%neo4j\n\n// We could add a trigger that when is added a specific property on a node, that property is added to all the nodes connected to this node\n\nCALL apoc.trigger.add(\u0027setlabels\u0027,\u0027UNWIND apoc.trigger.nodesByLabel($assignedLabels,\"Trigger\") AS n SET n.datetime \u003d $datetime\u0027,\n{phase:\u0027afterAsync\u0027}, \n{params: {datetime: datetime()}}) // param to be used in trigger query",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:24.410",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "query": "string",
                      "selector.phase": "string",
                      "params.datetime": "string",
                      "installed": "string",
                      "paused": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tquery\tselector.phase\tparams.datetime\tinstalled\tpaused\n\"setlabels\"\t\"UNWIND apoc.trigger.nodesByLabel($assignedLabels,\\\"Trigger\\\") AS n SET n.datetime \u003d $datetime\"\tafterAsync\t2022-11-09T21:56:53.882Z\tFALSE\tFALSE\n\"setlabels\"\t\"UNWIND apoc.trigger.nodesByLabel($assignedLabels,\\\"Trigger\\\") AS n SET n.datetime \u003d $datetime\"\tafterAsync\t2022-11-10T15:44:24.453Z\tTRUE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995100780_592832699",
      "id": "paragraph_1667995100780_592832699",
      "dateCreated": "2022-11-09 11:58:20.781",
      "dateStarted": "2022-11-10 15:44:24.432",
      "dateFinished": "2022-11-10 15:44:24.727",
      "status": "FINISHED"
    },
    {
      "title": "Query to trigger ",
      "text": "%neo4j\n\nMATCH (d:Person {name:\u0027Giandomenico Fracchia\u0027})\nSET d:Trigger\nRETURN d",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:27.965",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "datetime": "string",
                      "born": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2,\"data\":{\"name\":\"Giandomenico Fracchia\",\"datetime\":\"2022-11-09T21:56:53.882Z\",\"born\":1964},\"label\":\"Person\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995129012_37577474",
      "id": "paragraph_1667995129012_37577474",
      "dateCreated": "2022-11-09 11:58:49.012",
      "dateStarted": "2022-11-10 15:44:27.510",
      "dateFinished": "2022-11-10 15:44:27.634",
      "status": "FINISHED"
    },
    {
      "title": "Check trigger execution",
      "text": "%neo4j\n\nMATCH (p:Person {name:\u0027Giandomenico Fracchia\u0027}) RETURN p",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:30.090",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "datetime": "string",
                      "born": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2,\"data\":{\"name\":\"Giandomenico Fracchia\",\"datetime\":\"2022-11-09T21:56:53.882Z\",\"born\":1964},\"label\":\"Person\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995146867_689163869",
      "id": "paragraph_1667995146867_689163869",
      "dateCreated": "2022-11-09 11:59:06.867",
      "dateStarted": "2022-11-10 15:44:30.120",
      "dateFinished": "2022-11-10 15:44:30.200",
      "status": "FINISHED"
    },
    {
      "title": "$createdNodes parameter",
      "text": "%neo4j\n// 3rd parameter is null, so phase is \u0027before\u0027 by default\nCALL apoc.trigger.add(\u0027unique\u0027,\u0027UNWIND $createdNodes AS n SET n.datetime \u003d $datetime\u0027, null, {params: {datetime: datetime()}}); ",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:45.498",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "query": "string",
                      "selector": "string",
                      "params.datetime": "string",
                      "installed": "string",
                      "paused": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tquery\tselector\tparams.datetime\tinstalled\tpaused\n\"unique\"\t\"UNWIND $createdNodes AS n SET n.datetime \u003d $datetime\"\tNULL\t2022-11-10T15:44:44.624Z\tTRUE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995150741_1291954193",
      "id": "paragraph_1667995150741_1291954193",
      "dateCreated": "2022-11-09 11:59:10.741",
      "dateStarted": "2022-11-10 15:44:44.561",
      "dateFinished": "2022-11-10 15:44:44.734",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\nCREATE (n:NodeWithTime);\nMATCH (n:NodeWithTime) RETURN n;",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:50.059",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "datetime": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":308,\"data\":{\"datetime\":\"2022-11-10T15:44:44.624Z\"},\"label\":\"NodeWithTime\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\",\"NodeWithTime\":\"#6B979E\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995156445_1979948635",
      "id": "paragraph_1667995156445_1979948635",
      "dateCreated": "2022-11-09 11:59:16.445",
      "dateStarted": "2022-11-10 15:44:49.126",
      "dateFinished": "2022-11-10 15:44:49.291",
      "status": "FINISHED"
    },
    {
      "title": "Enforcing property type",
      "text": "%neo4j\n\n// Enforcing property type, for this example, we would like that all the `reference` node properties are of type `STRING`\n\nCALL apoc.trigger.add(\"forceStringType\",\n\"unwind apoc.trigger.propertiesByKey($assignedNodeProperties, \u0027reference\u0027) AS props \nWITH props.new as prop CALL apoc.util.validate(apoc.meta.type(prop) \u003c\u003e \u0027STRING\u0027, \u0027expected string property type, got %s\u0027, [apoc.meta.type(prop)]) RETURN null\", {phase:\u0027before\u0027})",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:44:54.694",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "query": "string",
                      "selector.phase": "string",
                      "installed": "string",
                      "paused": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tquery\tselector.phase\tinstalled\tpaused\n\"forceStringType\"\t\"unwind apoc.trigger.propertiesByKey($assignedNodeProperties, \u0027reference\u0027) AS props \nWITH props.new as prop CALL apoc.util.validate(apoc.meta.type(prop) \u003c\u003e \u0027STRING\u0027, \u0027expected string property type, got %s\u0027, [apoc.meta.type(prop)]) RETURN null\"\tbefore\tTRUE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995160499_1250882764",
      "id": "paragraph_1667995160499_1250882764",
      "dateCreated": "2022-11-09 11:59:20.500",
      "dateStarted": "2022-11-10 15:44:53.630",
      "dateFinished": "2022-11-10 15:44:53.871",
      "status": "FINISHED"
    },
    {
      "title": "Check prop type constraint",
      "text": "%neo4j\nCREATE (a:Node) SET a.reference \u003d 1",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:45:15.659",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Error executing triggers {forceStringType\u003dFailed to invoke procedure `apoc.util.validate`: Caused by: java.lang.RuntimeException: expected string property type, got INTEGER}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995213962_2018621058",
      "id": "paragraph_1667995213962_2018621058",
      "dateCreated": "2022-11-09 12:00:13.962",
      "dateStarted": "2022-11-10 15:45:15.677",
      "dateFinished": "2022-11-10 15:45:15.848",
      "status": "ERROR"
    },
    {
      "title": "Check prop type constraint",
      "text": "%neo4j\nCREATE (a:Node) SET a.reference \u003d \"1\"",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:45:22.591",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668095118587_1111300626",
      "id": "paragraph_1668095118587_1111300626",
      "dateCreated": "2022-11-10 15:45:18.587",
      "status": "READY"
    },
    {
      "title": "apoc.trigger.list",
      "text": "%neo4j\nCALL apoc.trigger.list",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:45:24.697",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "query": "string",
                      "selector.phase": "string",
                      "installed": "string",
                      "paused": "string",
                      "selector": "string",
                      "params.datetime": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tquery\tselector.phase\tinstalled\tpaused\tselector\tparams.datetime\n\"forceStringType\"\t\"unwind apoc.trigger.propertiesByKey($assignedNodeProperties, \u0027reference\u0027) AS props \nWITH props.new as prop CALL apoc.util.validate(apoc.meta.type(prop) \u003c\u003e \u0027STRING\u0027, \u0027expected string property type, got %s\u0027, [apoc.meta.type(prop)]) RETURN null\"\tbefore\tTRUE\tFALSE\t\t\n\"unique\"\t\"UNWIND $createdNodes AS n SET n.datetime \u003d $datetime\"\t\tTRUE\tFALSE\tNULL\t2022-11-10T15:44:44.624Z\n\"setlabels\"\t\"UNWIND apoc.trigger.nodesByLabel($assignedLabels,\\\"Trigger\\\") AS n SET n.datetime \u003d $datetime\"\tafterAsync\tTRUE\tFALSE\t\t2022-11-10T15:44:24.453Z\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995221894_555340299",
      "id": "paragraph_1667995221894_555340299",
      "dateCreated": "2022-11-09 12:00:21.894",
      "dateStarted": "2022-11-10 15:45:23.580",
      "dateFinished": "2022-11-10 15:45:23.665",
      "status": "FINISHED"
    },
    {
      "title": "apoc.trigger.removeAll",
      "text": "%neo4j\nCALL apoc.trigger.removeAll",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:45:28.794",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "query": "string",
                      "selector.phase": "string",
                      "params.datetime": "string",
                      "installed": "string",
                      "paused": "string",
                      "selector": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tquery\tselector.phase\tparams.datetime\tinstalled\tpaused\tselector\n\"setlabels\"\t\"UNWIND apoc.trigger.nodesByLabel($assignedLabels,\\\"Trigger\\\") AS n SET n.datetime \u003d $datetime\"\tafterAsync\t2022-11-10T15:44:24.453Z\tFALSE\tFALSE\t\n\"unique\"\t\"UNWIND $createdNodes AS n SET n.datetime \u003d $datetime\"\t\t2022-11-10T15:44:44.624Z\tFALSE\tFALSE\tNULL\n\"forceStringType\"\t\"unwind apoc.trigger.propertiesByKey($assignedNodeProperties, \u0027reference\u0027) AS props \nWITH props.new as prop CALL apoc.util.validate(apoc.meta.type(prop) \u003c\u003e \u0027STRING\u0027, \u0027expected string property type, got %s\u0027, [apoc.meta.type(prop)]) RETURN null\"\tbefore\t\tFALSE\tFALSE\t\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995227281_420748581",
      "id": "paragraph_1667995227281_420748581",
      "dateCreated": "2022-11-09 12:00:27.281",
      "dateStarted": "2022-11-10 15:45:27.478",
      "dateFinished": "2022-11-10 15:45:27.565",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\u003cpre\u003e\nNote in Neo4j Cluster: to add or remove triggers you generally need to point with the `bolt://` protocol to the core with system database as a LEADER. \nYou can know which is the correct core with the procedure\n\u003c/pre\u003e\n\n\u003cimg width\u003d\"300\" src\u003d\"https://github.com/larusba/apoc-academy/raw/test_html_ext/zeppelin/cluster.png\" /\u003e",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:45:41.303",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cpre\u003e\nNote in Neo4j Cluster: to add or remove triggers you generally need to point with the `bolt://` protocol to the core with system database as a LEADER. \nYou can know which is the correct core with the procedure\n\u003c/pre\u003e\n\u003cimg width\u003d\"300\" src\u003d\"https://github.com/larusba/apoc-academy/raw/test_html_ext/zeppelin/cluster.png\" /\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667828319523_1055843655",
      "id": "paragraph_1667828319523_1055843655",
      "dateCreated": "2022-11-07 13:38:39.523",
      "dateStarted": "2022-11-10 15:45:41.304",
      "dateFinished": "2022-11-10 15:45:41.318",
      "status": "FINISHED"
    },
    {
      "text": "%md\nThe above cluster issue affetcs also the `apoc.custom.*`, `apoc.uuid.*` and `apoc.dv.*` procedure.\n\nhttp://localhost:8080/#/notebook/2GMKN71T8\n\nhttp://localhost:8080/#/notebook/2GK4BTA5G\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:45:44.944",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe above cluster issue affetcs also the \u003ccode\u003eapoc.custom.*\u003c/code\u003e, \u003ccode\u003eapoc.uuid.*\u003c/code\u003e and \u003ccode\u003eapoc.dv.*\u003c/code\u003e procedure.\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2GMKN71T8\"\u003ehttp://localhost:8080/#/notebook/2GMKN71T8\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2GK4BTA5G\"\u003ehttp://localhost:8080/#/notebook/2GK4BTA5G\u003c/a\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667828592522_678275850",
      "id": "paragraph_1667828592522_678275850",
      "dateCreated": "2022-11-07 13:43:12.522",
      "dateStarted": "2022-11-10 15:45:44.948",
      "dateFinished": "2022-11-10 15:45:44.959",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Batching data\n\nApoc provides some procedures to split the data in batches to handle performance and memory issues:\n- `apoc.periodic.iterate`\n- `apoc.periodic.commit`\n- `apoc.periodic.truncate`\n\nThe `apoc.periodic.iterate(data-driven, operation, $config)` procedure is helpful when you need to handle large amounts of data for import, refactoring, and other cases that require large transactions. \n\nIt provides a way to batch the data by dividing the workload into two parts:\n\n- a `data-driven` statement: This defines how you select what data needs handled. You can provide a Cypher statement to select from existing graph data, read external data from a file or API, or retrieve data from another datastore.\n- an `operation` statement: This defines what you want done to the selected data. You can do things like execute Cypher for updating or creating/deleting the data or run other procedures to manipulate and transform values before loading.\n\nThe data-driven statement is provided as the first statement that results in a stream of values to be processed. \nThe results of the data-driven statement are passed to the operation statement as parameters and the operation statement is provided as the second statement to process one element at a time or a batch at a time\n\nWe can use the following configurations as 3rd parameter:\n\n- `batchSize (default: 10000)` - run the specified number of operation statements in a single transaction\n- `parallel (default: false)` - run operation statements in paralle\n- `retries (default: 0)` - if the operation statement fails with an error, sleep 100ms and retry until retries-count is reached\n- `batchMode (default: \"BATCH\")` - how data-driven statements should be processed by operation statement. See below\n- `params (default: EmtpyMap)` - externally pass in map of params\n- `concurrency (default: 50)` - number of concurrent tasks are generated when using `parallel:true`\n\n\u003cpre\u003e\nFor complex operations like updating or removing relationships, \neither do not use `parallel: true` or make sure that you batch the work in a way that each subgraph of data is updated in one operation,\notherwise might deadlock due to conflicts [same relationship updated twice]\n\u003c/pre\u003e\n\n`batchMode` can have 3 values. \n`SINGLE` to perform one operation at a time. \nBoth `BATCH` and `BATCH_SINGLE` execute operation statement once per batchSize and the results of data-driven statement will be grouped in a `$_batch`. For example, in this case:\n\n| first      | second |\n| ----------- | ----------- | \n| alpha      | beta       | \n| gamma   | delta        |\n| ...        | ... |\n\n`$_batch` will be a list of maps: `[{first: \u0027alpha\u0027, second: \u0027beta\u0027} , {first: \u0027gamma\u0027, second: \u0027delta\u0027}  .....]`\n\n\nBut with `BATCH` will be executed an unpacking of batch, that is:\n\n\u003cpre\u003e\nUNWIND $_batch AS _batch\nWITH _batch.field1 AS field1, _batch.field2 AS field2\n\u003c/pre\u003e\n\nInstead with `BATCH_SINGLE` the unpacking have to be executed into the operation statement.\nThe operation query can access the batched values via the `$_batch` parameter.\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:46:49.924",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eBatching data\u003c/h1\u003e\n\u003cp\u003eApoc provides some procedures to split the data in batches to handle performance and memory issues:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.periodic.iterate\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.periodic.commit\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.periodic.truncate\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe \u003ccode\u003eapoc.periodic.iterate(data-driven, operation, $config)\u003c/code\u003e procedure is helpful when you need to handle large amounts of data for import, refactoring, and other cases that require large transactions.\u003c/p\u003e\n\u003cp\u003eIt provides a way to batch the data by dividing the workload into two parts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ea \u003ccode\u003edata-driven\u003c/code\u003e statement: This defines how you select what data needs handled. You can provide a Cypher statement to select from existing graph data, read external data from a file or API, or retrieve data from another datastore.\u003c/li\u003e\n\u003cli\u003ean \u003ccode\u003eoperation\u003c/code\u003e statement: This defines what you want done to the selected data. You can do things like execute Cypher for updating or creating/deleting the data or run other procedures to manipulate and transform values before loading.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe data-driven statement is provided as the first statement that results in a stream of values to be processed.\u003cbr /\u003e\nThe results of the data-driven statement are passed to the operation statement as parameters and the operation statement is provided as the second statement to process one element at a time or a batch at a time\u003c/p\u003e\n\u003cp\u003eWe can use the following configurations as 3rd parameter:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebatchSize (default: 10000)\u003c/code\u003e - run the specified number of operation statements in a single transaction\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eparallel (default: false)\u003c/code\u003e - run operation statements in paralle\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eretries (default: 0)\u003c/code\u003e - if the operation statement fails with an error, sleep 100ms and retry until retries-count is reached\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebatchMode (default: \u0026quot;BATCH\u0026quot;)\u003c/code\u003e - how data-driven statements should be processed by operation statement. See below\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eparams (default: EmtpyMap)\u003c/code\u003e - externally pass in map of params\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econcurrency (default: 50)\u003c/code\u003e - number of concurrent tasks are generated when using \u003ccode\u003eparallel:true\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\nFor complex operations like updating or removing relationships, \neither do not use `parallel: true` or make sure that you batch the work in a way that each subgraph of data is updated in one operation,\notherwise might deadlock due to conflicts [same relationship updated twice]\n\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003ebatchMode\u003c/code\u003e can have 3 values.\u003cbr /\u003e\n\u003ccode\u003eSINGLE\u003c/code\u003e to perform one operation at a time.\u003cbr /\u003e\nBoth \u003ccode\u003eBATCH\u003c/code\u003e and \u003ccode\u003eBATCH_SINGLE\u003c/code\u003e execute operation statement once per batchSize and the results of data-driven statement will be grouped in a \u003ccode\u003e$_batch\u003c/code\u003e. For example, in this case:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\u003cth\u003efirst\u003c/th\u003e\u003cth\u003esecond\u003c/th\u003e\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\u003ctd\u003ealpha\u003c/td\u003e\u003ctd\u003ebeta\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003egamma\u003c/td\u003e\u003ctd\u003edelta\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003e\u0026hellip;\u003c/td\u003e\u003ctd\u003e\u0026hellip;\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003ccode\u003e$_batch\u003c/code\u003e will be a list of maps: \u003ccode\u003e[{first: \u0027alpha\u0027, second: \u0027beta\u0027} , {first: \u0027gamma\u0027, second: \u0027delta\u0027} .....]\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eBut with \u003ccode\u003eBATCH\u003c/code\u003e will be executed an unpacking of batch, that is:\u003c/p\u003e\n\u003cpre\u003e\nUNWIND $_batch AS _batch\nWITH _batch.field1 AS field1, _batch.field2 AS field2\n\u003c/pre\u003e\n\u003cp\u003eInstead with \u003ccode\u003eBATCH_SINGLE\u003c/code\u003e the unpacking have to be executed into the operation statement.\u003cbr /\u003e\nThe operation query can access the batched values via the \u003ccode\u003e$_batch\u003c/code\u003e parameter.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667828699876_281303502",
      "id": "paragraph_1667828699876_281303502",
      "dateCreated": "2022-11-07 13:44:59.876",
      "dateStarted": "2022-11-10 15:46:49.925",
      "dateFinished": "2022-11-10 15:46:49.949",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\ncall apoc.periodic.iterate(\n  \"UNWIND range(99) as id RETURN id\",\n  \"CREATE (:NodePeriodic {myProp: id, time: timestamp()})-[rel:MY_PERIODIC_REL]-\u003e(:End {id: id})\", // this is a single element of batch UNWINDed\n  {batchMode: \u0027BATCH\u0027,batchSize:10, parallel:false})\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:47:47.670",
      "config": {
        "colWidth": 8.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "batches": "string",
                      "total": "string",
                      "timeTaken": "string",
                      "committedOperations": "string",
                      "failedOperations": "string",
                      "failedBatches": "string",
                      "retries": "string",
                      "batch.total": "string",
                      "batch.committed": "string",
                      "batch.failed": "string",
                      "operations.total": "string",
                      "operations.committed": "string",
                      "operations.failed": "string",
                      "wasTerminated": "string",
                      "updateStatistics.nodesDeleted": "string",
                      "updateStatistics.labelsAdded": "string",
                      "updateStatistics.relationshipsCreated": "string",
                      "updateStatistics.nodesCreated": "string",
                      "updateStatistics.propertiesSet": "string",
                      "updateStatistics.relationshipsDeleted": "string",
                      "updateStatistics.labelsRemoved": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "batches\ttotal\ttimeTaken\tcommittedOperations\tfailedOperations\tfailedBatches\tretries\tbatch.total\tbatch.committed\tbatch.failed\toperations.total\toperations.committed\toperations.failed\twasTerminated\tupdateStatistics.nodesDeleted\tupdateStatistics.labelsAdded\tupdateStatistics.relationshipsCreated\tupdateStatistics.nodesCreated\tupdateStatistics.propertiesSet\tupdateStatistics.relationshipsDeleted\tupdateStatistics.labelsRemoved\n100\t999\t0\t999\t0\t0\t0\t100\t100\t0\t999\t999\t0\tFALSE\t0\t1998\t999\t1998\t2997\t0\t0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032906192_882914248",
      "id": "paragraph_1668032906192_882914248",
      "dateCreated": "2022-11-09 22:28:26.192",
      "dateStarted": "2022-11-10 15:47:04.226",
      "dateFinished": "2022-11-10 15:47:05.476",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nmatch (s:NodePeriodic) \nreturn count(s);",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:47:11.483",
      "config": {
        "colWidth": 4.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "count(s)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "count(s)\n999\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032920669_452461876",
      "id": "paragraph_1668032920669_452461876",
      "dateCreated": "2022-11-09 22:28:40.669",
      "dateStarted": "2022-11-10 15:47:10.483",
      "dateFinished": "2022-11-10 15:47:10.568",
      "status": "FINISHED"
    },
    {
      "title": " apoc.periodic.iterate with BATCH_SINGLE",
      "text": "%neo4j\n\n// the `$_batch` is [{n: Node(1)}, {n: Node(2)}, ....]\nCALL apoc.periodic.iterate(\n  \"MATCH (n:NodePeriodic) RETURN n\",\n  \"WITH $_batch as b CREATE (batch:Batch) set batch.prop \u003d [item in b | item.n.myProp]\", // we create for each batch a list of \u0027myProp\u0027s\n  {batchMode: \u0027BATCH_SINGLE\u0027,batchSize:10, parallel:false})\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:47:15.023",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "batches": "string",
                      "total": "string",
                      "timeTaken": "string",
                      "committedOperations": "string",
                      "failedOperations": "string",
                      "failedBatches": "string",
                      "retries": "string",
                      "batch.total": "string",
                      "batch.committed": "string",
                      "batch.failed": "string",
                      "operations.total": "string",
                      "operations.committed": "string",
                      "operations.failed": "string",
                      "wasTerminated": "string",
                      "updateStatistics.nodesDeleted": "string",
                      "updateStatistics.labelsAdded": "string",
                      "updateStatistics.relationshipsCreated": "string",
                      "updateStatistics.nodesCreated": "string",
                      "updateStatistics.propertiesSet": "string",
                      "updateStatistics.relationshipsDeleted": "string",
                      "updateStatistics.labelsRemoved": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "batches\ttotal\ttimeTaken\tcommittedOperations\tfailedOperations\tfailedBatches\tretries\tbatch.total\tbatch.committed\tbatch.failed\toperations.total\toperations.committed\toperations.failed\twasTerminated\tupdateStatistics.nodesDeleted\tupdateStatistics.labelsAdded\tupdateStatistics.relationshipsCreated\tupdateStatistics.nodesCreated\tupdateStatistics.propertiesSet\tupdateStatistics.relationshipsDeleted\tupdateStatistics.labelsRemoved\n100\t999\t0\t999\t0\t0\t0\t100\t100\t0\t999\t999\t0\tFALSE\t0\t100\t0\t100\t100\t0\t0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032938060_1574402081",
      "id": "paragraph_1668032938060_1574402081",
      "dateCreated": "2022-11-09 22:28:58.060",
      "dateStarted": "2022-11-10 15:47:12.975",
      "dateFinished": "2022-11-10 15:47:13.776",
      "status": "FINISHED"
    },
    {
      "title": "Check result",
      "text": "%neo4j\n\nMATCH (n:Batch) return n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:47:29.899",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "prop": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2309,\"data\":{\"prop\":[1,2,3,4,5,6,7,8,9,10]},\"label\":\"Batch\"},{\"id\":2310,\"data\":{\"prop\":[11,12,13,14,15,16,17,18,19,20]},\"label\":\"Batch\"},{\"id\":2311,\"data\":{\"prop\":[21,22,23,24,25,26,27,28,29,30]},\"label\":\"Batch\"},{\"id\":2312,\"data\":{\"prop\":[31,32,33,34,35,36,37,38,39,40]},\"label\":\"Batch\"},{\"id\":2313,\"data\":{\"prop\":[41,42,43,44,45,46,47,48,49,50]},\"label\":\"Batch\"},{\"id\":2314,\"data\":{\"prop\":[51,52,53,54,55,56,57,58,59,60]},\"label\":\"Batch\"},{\"id\":2315,\"data\":{\"prop\":[61,62,63,64,65,66,67,68,69,70]},\"label\":\"Batch\"},{\"id\":2316,\"data\":{\"prop\":[71,72,73,74,75,76,77,78,79,80]},\"label\":\"Batch\"},{\"id\":2317,\"data\":{\"prop\":[81,82,83,84,85,86,87,88,89,90]},\"label\":\"Batch\"},{\"id\":2318,\"data\":{\"prop\":[91,92,93,94,95,96,97,98,99,100]},\"label\":\"Batch\"},{\"id\":2319,\"data\":{\"prop\":[101,102,103,104,105,106,107,108,109,110]},\"label\":\"Batch\"},{\"id\":2320,\"data\":{\"prop\":[111,112,113,114,115,116,117,118,119,120]},\"label\":\"Batch\"},{\"id\":2321,\"data\":{\"prop\":[121,122,123,124,125,126,127,128,129,130]},\"label\":\"Batch\"},{\"id\":2322,\"data\":{\"prop\":[131,132,133,134,135,136,137,138,139,140]},\"label\":\"Batch\"},{\"id\":2323,\"data\":{\"prop\":[141,142,143,144,145,146,147,148,149,150]},\"label\":\"Batch\"},{\"id\":2324,\"data\":{\"prop\":[151,152,153,154,155,156,157,158,159,160]},\"label\":\"Batch\"},{\"id\":2325,\"data\":{\"prop\":[161,162,163,164,165,166,167,168,169,170]},\"label\":\"Batch\"},{\"id\":2326,\"data\":{\"prop\":[171,172,173,174,175,176,177,178,179,180]},\"label\":\"Batch\"},{\"id\":2327,\"data\":{\"prop\":[181,182,183,184,185,186,187,188,189,190]},\"label\":\"Batch\"},{\"id\":2328,\"data\":{\"prop\":[191,192,193,194,195,196,197,198,199,200]},\"label\":\"Batch\"},{\"id\":2329,\"data\":{\"prop\":[201,202,203,204,205,206,207,208,209,210]},\"label\":\"Batch\"},{\"id\":2330,\"data\":{\"prop\":[211,212,213,214,215,216,217,218,219,220]},\"label\":\"Batch\"},{\"id\":2331,\"data\":{\"prop\":[221,222,223,224,225,226,227,228,229,230]},\"label\":\"Batch\"},{\"id\":2332,\"data\":{\"prop\":[231,232,233,234,235,236,237,238,239,240]},\"label\":\"Batch\"},{\"id\":2333,\"data\":{\"prop\":[241,242,243,244,245,246,247,248,249,250]},\"label\":\"Batch\"},{\"id\":2334,\"data\":{\"prop\":[251,252,253,254,255,256,257,258,259,260]},\"label\":\"Batch\"},{\"id\":2335,\"data\":{\"prop\":[261,262,263,264,265,266,267,268,269,270]},\"label\":\"Batch\"},{\"id\":2336,\"data\":{\"prop\":[271,272,273,274,275,276,277,278,279,280]},\"label\":\"Batch\"},{\"id\":2337,\"data\":{\"prop\":[281,282,283,284,285,286,287,288,289,290]},\"label\":\"Batch\"},{\"id\":2338,\"data\":{\"prop\":[291,292,293,294,295,296,297,298,299,300]},\"label\":\"Batch\"},{\"id\":2339,\"data\":{\"prop\":[301,302,303,304,305,306,307,308,309,310]},\"label\":\"Batch\"},{\"id\":2340,\"data\":{\"prop\":[311,312,313,314,315,316,317,318,319,320]},\"label\":\"Batch\"},{\"id\":2341,\"data\":{\"prop\":[321,322,323,324,325,326,327,328,329,330]},\"label\":\"Batch\"},{\"id\":2342,\"data\":{\"prop\":[331,332,333,334,335,336,337,338,339,340]},\"label\":\"Batch\"},{\"id\":2343,\"data\":{\"prop\":[341,342,343,344,345,346,347,348,349,350]},\"label\":\"Batch\"},{\"id\":2344,\"data\":{\"prop\":[351,352,353,354,355,356,357,358,359,360]},\"label\":\"Batch\"},{\"id\":2345,\"data\":{\"prop\":[361,362,363,364,365,366,367,368,369,370]},\"label\":\"Batch\"},{\"id\":2346,\"data\":{\"prop\":[371,372,373,374,375,376,377,378,379,380]},\"label\":\"Batch\"},{\"id\":2347,\"data\":{\"prop\":[381,382,383,384,385,386,387,388,389,390]},\"label\":\"Batch\"},{\"id\":2348,\"data\":{\"prop\":[391,392,393,394,395,396,397,398,399,400]},\"label\":\"Batch\"},{\"id\":2349,\"data\":{\"prop\":[401,402,403,404,405,406,407,408,409,410]},\"label\":\"Batch\"},{\"id\":2350,\"data\":{\"prop\":[411,412,413,414,415,416,417,418,419,420]},\"label\":\"Batch\"},{\"id\":2351,\"data\":{\"prop\":[421,422,423,424,425,426,427,428,429,430]},\"label\":\"Batch\"},{\"id\":2352,\"data\":{\"prop\":[431,432,433,434,435,436,437,438,439,440]},\"label\":\"Batch\"},{\"id\":2353,\"data\":{\"prop\":[441,442,443,444,445,446,447,448,449,450]},\"label\":\"Batch\"},{\"id\":2354,\"data\":{\"prop\":[451,452,453,454,455,456,457,458,459,460]},\"label\":\"Batch\"},{\"id\":2355,\"data\":{\"prop\":[461,462,463,464,465,466,467,468,469,470]},\"label\":\"Batch\"},{\"id\":2356,\"data\":{\"prop\":[471,472,473,474,475,476,477,478,479,480]},\"label\":\"Batch\"},{\"id\":2357,\"data\":{\"prop\":[481,482,483,484,485,486,487,488,489,490]},\"label\":\"Batch\"},{\"id\":2358,\"data\":{\"prop\":[491,492,493,494,495,496,497,498,499,500]},\"label\":\"Batch\"},{\"id\":2359,\"data\":{\"prop\":[501,502,503,504,505,506,507,508,509,510]},\"label\":\"Batch\"},{\"id\":2360,\"data\":{\"prop\":[511,512,513,514,515,516,517,518,519,520]},\"label\":\"Batch\"},{\"id\":2361,\"data\":{\"prop\":[521,522,523,524,525,526,527,528,529,530]},\"label\":\"Batch\"},{\"id\":2362,\"data\":{\"prop\":[531,532,533,534,535,536,537,538,539,540]},\"label\":\"Batch\"},{\"id\":2363,\"data\":{\"prop\":[541,542,543,544,545,546,547,548,549,550]},\"label\":\"Batch\"},{\"id\":2364,\"data\":{\"prop\":[551,552,553,554,555,556,557,558,559,560]},\"label\":\"Batch\"},{\"id\":2365,\"data\":{\"prop\":[561,562,563,564,565,566,567,568,569,570]},\"label\":\"Batch\"},{\"id\":2366,\"data\":{\"prop\":[571,572,573,574,575,576,577,578,579,580]},\"label\":\"Batch\"},{\"id\":2367,\"data\":{\"prop\":[581,582,583,584,585,586,587,588,589,590]},\"label\":\"Batch\"},{\"id\":2368,\"data\":{\"prop\":[591,592,593,594,595,596,597,598,599,600]},\"label\":\"Batch\"},{\"id\":2369,\"data\":{\"prop\":[601,602,603,604,605,606,607,608,609,610]},\"label\":\"Batch\"},{\"id\":2370,\"data\":{\"prop\":[611,612,613,614,615,616,617,618,619,620]},\"label\":\"Batch\"},{\"id\":2371,\"data\":{\"prop\":[621,622,623,624,625,626,627,628,629,630]},\"label\":\"Batch\"},{\"id\":2372,\"data\":{\"prop\":[631,632,633,634,635,636,637,638,639,640]},\"label\":\"Batch\"},{\"id\":2373,\"data\":{\"prop\":[641,642,643,644,645,646,647,648,649,650]},\"label\":\"Batch\"},{\"id\":2374,\"data\":{\"prop\":[651,652,653,654,655,656,657,658,659,660]},\"label\":\"Batch\"},{\"id\":2375,\"data\":{\"prop\":[661,662,663,664,665,666,667,668,669,670]},\"label\":\"Batch\"},{\"id\":2376,\"data\":{\"prop\":[671,672,673,674,675,676,677,678,679,680]},\"label\":\"Batch\"},{\"id\":2377,\"data\":{\"prop\":[681,682,683,684,685,686,687,688,689,690]},\"label\":\"Batch\"},{\"id\":2378,\"data\":{\"prop\":[691,692,693,694,695,696,697,698,699,700]},\"label\":\"Batch\"},{\"id\":2379,\"data\":{\"prop\":[701,702,703,704,705,706,707,708,709,710]},\"label\":\"Batch\"},{\"id\":2380,\"data\":{\"prop\":[711,712,713,714,715,716,717,718,719,720]},\"label\":\"Batch\"},{\"id\":2381,\"data\":{\"prop\":[721,722,723,724,725,726,727,728,729,730]},\"label\":\"Batch\"},{\"id\":2382,\"data\":{\"prop\":[731,732,733,734,735,736,737,738,739,740]},\"label\":\"Batch\"},{\"id\":2383,\"data\":{\"prop\":[741,742,743,744,745,746,747,748,749,750]},\"label\":\"Batch\"},{\"id\":2384,\"data\":{\"prop\":[751,752,753,754,755,756,757,758,759,760]},\"label\":\"Batch\"},{\"id\":2385,\"data\":{\"prop\":[761,762,763,764,765,766,767,768,769,770]},\"label\":\"Batch\"},{\"id\":2386,\"data\":{\"prop\":[771,772,773,774,775,776,777,778,779,780]},\"label\":\"Batch\"},{\"id\":2387,\"data\":{\"prop\":[781,782,783,784,785,786,787,788,789,790]},\"label\":\"Batch\"},{\"id\":2388,\"data\":{\"prop\":[791,792,793,794,795,796,797,798,799,800]},\"label\":\"Batch\"},{\"id\":2389,\"data\":{\"prop\":[801,802,803,804,805,806,807,808,809,810]},\"label\":\"Batch\"},{\"id\":2390,\"data\":{\"prop\":[811,812,813,814,815,816,817,818,819,820]},\"label\":\"Batch\"},{\"id\":2391,\"data\":{\"prop\":[821,822,823,824,825,826,827,828,829,830]},\"label\":\"Batch\"},{\"id\":2392,\"data\":{\"prop\":[831,832,833,834,835,836,837,838,839,840]},\"label\":\"Batch\"},{\"id\":2393,\"data\":{\"prop\":[841,842,843,844,845,846,847,848,849,850]},\"label\":\"Batch\"},{\"id\":2394,\"data\":{\"prop\":[851,852,853,854,855,856,857,858,859,860]},\"label\":\"Batch\"},{\"id\":2395,\"data\":{\"prop\":[861,862,863,864,865,866,867,868,869,870]},\"label\":\"Batch\"},{\"id\":2396,\"data\":{\"prop\":[871,872,873,874,875,876,877,878,879,880]},\"label\":\"Batch\"},{\"id\":2397,\"data\":{\"prop\":[881,882,883,884,885,886,887,888,889,890]},\"label\":\"Batch\"},{\"id\":2398,\"data\":{\"prop\":[891,892,893,894,895,896,897,898,899,900]},\"label\":\"Batch\"},{\"id\":2399,\"data\":{\"prop\":[901,902,903,904,905,906,907,908,909,910]},\"label\":\"Batch\"},{\"id\":2400,\"data\":{\"prop\":[911,912,913,914,915,916,917,918,919,920]},\"label\":\"Batch\"},{\"id\":2401,\"data\":{\"prop\":[921,922,923,924,925,926,927,928,929,930]},\"label\":\"Batch\"},{\"id\":2402,\"data\":{\"prop\":[931,932,933,934,935,936,937,938,939,940]},\"label\":\"Batch\"},{\"id\":2403,\"data\":{\"prop\":[941,942,943,944,945,946,947,948,949,950]},\"label\":\"Batch\"},{\"id\":2404,\"data\":{\"prop\":[951,952,953,954,955,956,957,958,959,960]},\"label\":\"Batch\"},{\"id\":2405,\"data\":{\"prop\":[961,962,963,964,965,966,967,968,969,970]},\"label\":\"Batch\"},{\"id\":2406,\"data\":{\"prop\":[971,972,973,974,975,976,977,978,979,980]},\"label\":\"Batch\"},{\"id\":2407,\"data\":{\"prop\":[981,982,983,984,985,986,987,988,989,990]},\"label\":\"Batch\"},{\"id\":2408,\"data\":{\"prop\":[991,992,993,994,995,996,997,998,999]},\"label\":\"Batch\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\",\"NodeWithTime\":\"#6B979E\",\"Node\":\"#9505E9\",\"NodePeriodic\":\"#CC8524\",\"End\":\"#EAC4AF\",\"Batch\":\"#7860E1\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032958445_1119340035",
      "id": "paragraph_1668032958445_1119340035",
      "dateCreated": "2022-11-09 22:29:18.445",
      "dateStarted": "2022-11-10 15:47:21.431",
      "dateFinished": "2022-11-10 15:47:21.620",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### Periodic commit\n\nEspecially for graph processing it is useful to run a query repeatedly in separate transactions until it doesn’t generates any results anymore. \n\nIn this case, we can use `apoc.periodic.commit(query, $param)`, \nwith which the query is executed in separate transactions until it returns `0`.\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:47:50.628",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePeriodic commit\u003c/h3\u003e\n\u003cp\u003eEspecially for graph processing it is useful to run a query repeatedly in separate transactions until it doesn’t generates any results anymore.\u003c/p\u003e\n\u003cp\u003eIn this case, we can use \u003ccode\u003eapoc.periodic.commit(query, $param)\u003c/code\u003e,\u003cbr /\u003e\nwith which the query is executed in separate transactions until it returns \u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033160924_148632673",
      "id": "paragraph_1668033160924_148632673",
      "dateCreated": "2022-11-09 22:32:40.924",
      "dateStarted": "2022-11-10 15:47:50.631",
      "dateFinished": "2022-11-10 15:47:50.643",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// apoc.periodic.commit must contain a LIMIT clause to batch results\n// we limit the result\n// note: apoc.create.uuid() is a simple function which generate an UUID, e.g. \u00273a4500b3-350e-43e9-aadb-d839eeb23b62\u0027\nCALL apoc.periodic.commit(\n    \"MATCH (person:Person) WHERE NOT exists(person.uuid) with person LIMIT $limit  SET person.uuid \u003d apoc.create.uuid() RETURN count(*)\", // until count is 0, we continue the execution\n  {limit:10})",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:47:56.617",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "updates": "string",
                      "executions": "string",
                      "runtime": "string",
                      "batches": "string",
                      "failedBatches": "string",
                      "failedCommits": "string",
                      "wasTerminated": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "updates\texecutions\truntime\tbatches\tfailedBatches\tfailedCommits\twasTerminated\n133\t14\t0\t15\t0\t0\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033163039_1988255740",
      "id": "paragraph_1668033163039_1988255740",
      "dateCreated": "2022-11-09 22:32:43.039",
      "dateStarted": "2022-11-10 15:47:54.987",
      "dateFinished": "2022-11-10 15:47:55.507",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nmatch (person:Person) return person",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:48:00.186",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "datetime": "string",
                      "uuid": "string",
                      "born": "string",
                      "children": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2,\"data\":{\"name\":\"Giandomenico Fracchia\",\"datetime\":\"2022-11-09T21:56:53.882Z\",\"uuid\":\"101f2db8-253b-4b1f-b7a1-74f1cd13eb01\",\"born\":1964},\"label\":\"Person\"},{\"id\":3,\"data\":{\"name\":\"Carrie-Anne Moss\",\"children\":[\"Al\",\"John\",\"Jack\"],\"uuid\":\"8f2f9b9b-e735-4faf-a256-e186134a9675\",\"born\":1967},\"label\":\"Person\"},{\"id\":4,\"data\":{\"name\":\"Laurence Fishburne\",\"children\":[\"Naruto\",\"Sasuke\",\"Sakura\"],\"uuid\":\"08f407c6-6a7f-4691-ba9d-aa35851053ae\",\"born\":1961},\"label\":\"Person\"},{\"id\":5,\"data\":{\"name\":\"Hugo Weaving\",\"uuid\":\"daf3453b-4ea9-4852-806f-9a4f008fd3b0\",\"born\":1960},\"label\":\"Person\"},{\"id\":6,\"data\":{\"name\":\"Lilly Wachowski\",\"uuid\":\"67d4ac84-7cdf-4714-b55b-9e9a17b0b311\",\"born\":1967},\"label\":\"Person\"},{\"id\":7,\"data\":{\"name\":\"Lana Wachowski\",\"uuid\":\"d596d519-bf9d-41af-a3b7-66953567a0b1\",\"born\":1965},\"label\":\"Person\"},{\"id\":8,\"data\":{\"name\":\"Franco e Ciccio\",\"uuid\":\"925f4254-3b9f-4f02-8361-b209df74c6e3\",\"born\":1952},\"label\":\"Person\"},{\"id\":9,\"data\":{\"name\":\"Emil Eifrem\",\"uuid\":\"2c9419df-b664-4b41-bccb-ec4d5b2cfae5\",\"born\":1978},\"label\":\"Person\"},{\"id\":13,\"data\":{\"name\":\"Charlize Theron\",\"uuid\":\"c41cccdd-1a8c-4503-8070-9708ff21bed9\",\"born\":1975},\"label\":\"Person\"},{\"id\":14,\"data\":{\"name\":\"Al Pacino\",\"uuid\":\"5d613e87-86df-4ddc-80b4-111a4b3414d3\",\"born\":1940},\"label\":\"Person\"},{\"id\":15,\"data\":{\"name\":\"Taylor Hackford\",\"uuid\":\"6db1645e-1296-454f-a223-614676d03232\",\"born\":1944},\"label\":\"Person\"},{\"id\":17,\"data\":{\"name\":\"Tom Cruise\",\"uuid\":\"82d9c2ee-ea7b-4245-8dba-589999db18fe\",\"born\":1962},\"label\":\"Person\"},{\"id\":18,\"data\":{\"name\":\"Jack Nicholson\",\"uuid\":\"44986dd3-1db8-4c89-bfee-1077044d0a0f\",\"born\":1937},\"label\":\"Person\"},{\"id\":19,\"data\":{\"name\":\"Demi Moore\",\"uuid\":\"e9e26a37-3d26-4c5f-b526-4178412ddd3f\",\"born\":1962},\"label\":\"Person\"},{\"id\":20,\"data\":{\"name\":\"Kevin Bacon\",\"uuid\":\"b312a725-1a6d-406f-83ae-062646997ae2\",\"born\":1958},\"label\":\"Person\"},{\"id\":21,\"data\":{\"name\":\"Kiefer Sutherland\",\"uuid\":\"7dccccea-2792-4793-a33a-8bdd097d7315\",\"born\":1966},\"label\":\"Person\"},{\"id\":22,\"data\":{\"name\":\"Noah Wyle\",\"uuid\":\"e3846f43-a7ee-4b66-aaba-b8643da27b38\",\"born\":1971},\"label\":\"Person\"},{\"id\":23,\"data\":{\"name\":\"Cuba Gooding Jr.\",\"uuid\":\"0d552d1f-465f-48f3-b4a5-b569637d6049\",\"born\":1968},\"label\":\"Person\"},{\"id\":24,\"data\":{\"name\":\"Kevin Pollak\",\"uuid\":\"57068f97-d85c-49ac-a9d3-e12d056349bd\",\"born\":1957},\"label\":\"Person\"},{\"id\":25,\"data\":{\"name\":\"J.T. Walsh\",\"uuid\":\"b86fa9c5-6690-439d-8fc4-072efa9cfc64\",\"born\":1943},\"label\":\"Person\"},{\"id\":26,\"data\":{\"name\":\"James Marshall\",\"uuid\":\"c7e89782-5944-438a-afc2-d7a1ee130966\",\"born\":1967},\"label\":\"Person\"},{\"id\":27,\"data\":{\"name\":\"Christopher Guest\",\"uuid\":\"c1afc9c6-b69e-43b6-be84-3c5b4086a34a\",\"born\":1948},\"label\":\"Person\"},{\"id\":28,\"data\":{\"name\":\"Rob Reiner\",\"uuid\":\"9d80de2f-4acd-44c2-bc37-661348ed8764\",\"born\":1947},\"label\":\"Person\"},{\"id\":29,\"data\":{\"name\":\"Aaron Sorkin\",\"uuid\":\"3f2f2a2d-dd1e-497d-9eed-4753c095e95d\",\"born\":1961},\"label\":\"Person\"},{\"id\":31,\"data\":{\"name\":\"Kelly McGillis\",\"uuid\":\"a685a2e3-3de8-4827-84fc-4662b2d505ec\",\"born\":1957},\"label\":\"Person\"},{\"id\":32,\"data\":{\"name\":\"Val Kilmer\",\"uuid\":\"009e136d-a526-409d-984a-1042a39d3fd4\",\"born\":1959},\"label\":\"Person\"},{\"id\":33,\"data\":{\"name\":\"Anthony Edwards\",\"uuid\":\"63d5a596-a9b4-4020-81aa-c2f6659701c9\",\"born\":1962},\"label\":\"Person\"},{\"id\":34,\"data\":{\"name\":\"Tom Skerritt\",\"uuid\":\"60071d18-43d5-4c2b-abc5-b6ba72fc6ddd\",\"born\":1933},\"label\":\"Person\"},{\"id\":35,\"data\":{\"name\":\"Meg Ryan\",\"uuid\":\"0d2f763a-e4c6-48c7-8428-4a8517fc48c8\",\"born\":1961},\"label\":\"Person\"},{\"id\":36,\"data\":{\"name\":\"Tony Scott\",\"uuid\":\"e007463b-a6a6-4929-a7dd-e57a03799581\",\"born\":1944},\"label\":\"Person\"},{\"id\":37,\"data\":{\"name\":\"Jim Cash\",\"uuid\":\"12498db3-c8b9-46b1-9f3d-943d01cd96fa\",\"born\":1941},\"label\":\"Person\"},{\"id\":39,\"data\":{\"name\":\"Renee Zellweger\",\"uuid\":\"16150c10-061d-4c0e-a7a6-9c143b5fdf80\",\"born\":1969},\"label\":\"Person\"},{\"id\":40,\"data\":{\"name\":\"Kelly Preston\",\"uuid\":\"1712b617-9aea-4b80-81ad-2f268fbe3759\",\"born\":1962},\"label\":\"Person\"},{\"id\":41,\"data\":{\"name\":\"Jerry O\\u0027Connell\",\"uuid\":\"08d94db0-0f4d-4264-a39d-499f8c332cd8\",\"born\":1974},\"label\":\"Person\"},{\"id\":42,\"data\":{\"name\":\"Jay Mohr\",\"uuid\":\"1aa7abba-89f0-4d2c-863f-a728b37fb2a5\",\"born\":1970},\"label\":\"Person\"},{\"id\":43,\"data\":{\"name\":\"Bonnie Hunt\",\"uuid\":\"18c1dfbb-8914-48ec-adec-d4a3583bacfd\",\"born\":1961},\"label\":\"Person\"},{\"id\":44,\"data\":{\"name\":\"Regina King\",\"uuid\":\"f25aebc0-604c-4245-95b1-2c75920235d8\",\"born\":1971},\"label\":\"Person\"},{\"id\":45,\"data\":{\"name\":\"Jonathan Lipnicki\",\"uuid\":\"ce140e03-5648-405b-ae61-50d170b2a7a0\",\"born\":1996},\"label\":\"Person\"},{\"id\":46,\"data\":{\"name\":\"Cameron Crowe\",\"uuid\":\"f1f2d360-163f-4f61-b9f4-f3805cef0fa7\",\"born\":1957},\"label\":\"Person\"},{\"id\":48,\"data\":{\"name\":\"River Phoenix\",\"uuid\":\"c357f88e-1b0e-46d2-8de5-947aa390ece4\",\"born\":1970},\"label\":\"Person\"},{\"id\":49,\"data\":{\"name\":\"Corey Feldman\",\"uuid\":\"8c3feb36-5c02-453a-8b20-f5408ad5bc6a\",\"born\":1971},\"label\":\"Person\"},{\"id\":50,\"data\":{\"name\":\"Wil Wheaton\",\"uuid\":\"27992978-9bbd-4549-8e20-53a04812e142\",\"born\":1972},\"label\":\"Person\"},{\"id\":51,\"data\":{\"name\":\"John Cusack\",\"uuid\":\"ff7cf31c-4e31-4706-bde5-9cdc89f3c9c9\",\"born\":1966},\"label\":\"Person\"},{\"id\":52,\"data\":{\"name\":\"Marshall Bell\",\"uuid\":\"3ab1b835-98aa-433c-a0f5-b5273d36939f\",\"born\":1942},\"label\":\"Person\"},{\"id\":54,\"data\":{\"name\":\"Helen Hunt\",\"uuid\":\"4fb72567-57ff-4cde-bb34-75a98455e023\",\"born\":1963},\"label\":\"Person\"},{\"id\":55,\"data\":{\"name\":\"Greg Kinnear\",\"uuid\":\"f89fc92e-4135-4c6c-a521-5d27c8c998fd\",\"born\":1963},\"label\":\"Person\"},{\"id\":56,\"data\":{\"name\":\"James L. Brooks\",\"uuid\":\"29a56866-6b47-4f54-b2d4-4bbe66df7998\",\"born\":1940},\"label\":\"Person\"},{\"id\":58,\"data\":{\"name\":\"Annabella Sciorra\",\"uuid\":\"1e00505b-ea27-48ff-b6f8-e5eabae6a968\",\"born\":1960},\"label\":\"Person\"},{\"id\":59,\"data\":{\"name\":\"Max von Sydow\",\"uuid\":\"a74af0de-7783-40bc-b47f-578f5275fd10\",\"born\":1929},\"label\":\"Person\"},{\"id\":60,\"data\":{\"name\":\"Werner Herzog\",\"uuid\":\"7d4b32e2-1302-4392-9905-f29ab430cb84\",\"born\":1942},\"label\":\"Person\"},{\"id\":61,\"data\":{\"name\":\"Robin Williams\",\"uuid\":\"ce92caa2-96ae-41c0-9f3e-90272645cf33\",\"born\":1951},\"label\":\"Person\"},{\"id\":62,\"data\":{\"name\":\"Vincent Ward\",\"uuid\":\"feb1c56d-2c77-419f-955b-f8f1afd0ec09\",\"born\":1956},\"label\":\"Person\"},{\"id\":64,\"data\":{\"name\":\"Ethan Hawke\",\"uuid\":\"c31e7ae9-84f7-4579-bf65-14547a8db5e6\",\"born\":1970},\"label\":\"Person\"},{\"id\":65,\"data\":{\"name\":\"Rick Yune\",\"uuid\":\"e5232306-8697-44f1-936c-81cffeec6590\",\"born\":1971},\"label\":\"Person\"},{\"id\":66,\"data\":{\"name\":\"James Cromwell\",\"uuid\":\"abc221ce-0dc2-4cae-837e-22c144552939\",\"born\":1940},\"label\":\"Person\"},{\"id\":67,\"data\":{\"name\":\"Scott Hicks\",\"uuid\":\"9a0a85e2-e350-41fb-a64e-7e1cedac70de\",\"born\":1953},\"label\":\"Person\"},{\"id\":69,\"data\":{\"name\":\"Parker Posey\",\"uuid\":\"3a2fb085-72c1-4bea-8e9e-9987c5a7793d\",\"born\":1968},\"label\":\"Person\"},{\"id\":70,\"data\":{\"name\":\"Dave Chappelle\",\"uuid\":\"db215979-cbc7-4568-aeb2-5a1cdccfb025\",\"born\":1973},\"label\":\"Person\"},{\"id\":71,\"data\":{\"name\":\"Steve Zahn\",\"uuid\":\"06b0ebc5-48f0-418c-8ed3-9767222b0240\",\"born\":1967},\"label\":\"Person\"},{\"id\":72,\"data\":{\"name\":\"Tom Hanks\",\"uuid\":\"907f4a44-3d00-4549-9d34-533171dabaeb\",\"born\":1956},\"label\":\"Person\"},{\"id\":73,\"data\":{\"name\":\"Nora Ephron\",\"uuid\":\"f3089c2f-f464-41ed-8abc-aa9340207bce\",\"born\":1941},\"label\":\"Person\"},{\"id\":75,\"data\":{\"name\":\"Rita Wilson\",\"uuid\":\"fd8309aa-3457-4e8c-a14f-97972c478e46\",\"born\":1956},\"label\":\"Person\"},{\"id\":76,\"data\":{\"name\":\"Bill Pullman\",\"uuid\":\"713cded3-6863-4217-933b-798f9fd8072e\",\"born\":1953},\"label\":\"Person\"},{\"id\":77,\"data\":{\"name\":\"Victor Garber\",\"uuid\":\"192f63be-a7a0-4804-a20e-d1c145ae64dc\",\"born\":1949},\"label\":\"Person\"},{\"id\":78,\"data\":{\"name\":\"Rosie O\\u0027Donnell\",\"uuid\":\"559ffc7b-d601-47d7-8a49-8ec63c1675e7\",\"born\":1962},\"label\":\"Person\"},{\"id\":80,\"data\":{\"name\":\"John Patrick Stanley\",\"uuid\":\"4736dabd-7cce-476f-b997-027c4a0f0001\",\"born\":1950},\"label\":\"Person\"},{\"id\":81,\"data\":{\"name\":\"Nathan Lane\",\"uuid\":\"c63dbe03-2efb-4878-a290-66f4e91e2a1c\",\"born\":1956},\"label\":\"Person\"},{\"id\":83,\"data\":{\"name\":\"Billy Crystal\",\"uuid\":\"6465676c-6187-4af9-976c-4536a1677398\",\"born\":1948},\"label\":\"Person\"},{\"id\":84,\"data\":{\"name\":\"Carrie Fisher\",\"uuid\":\"6e963608-5246-4e14-bcfd-3249377763e4\",\"born\":1956},\"label\":\"Person\"},{\"id\":85,\"data\":{\"name\":\"Bruno Kirby\",\"uuid\":\"5adbd75a-9efc-46fa-b796-a8b78b69629c\",\"born\":1949},\"label\":\"Person\"},{\"id\":87,\"data\":{\"name\":\"Liv Tyler\",\"uuid\":\"ff7512f1-a189-4045-a2a2-034150f71f6c\",\"born\":1977},\"label\":\"Person\"},{\"id\":89,\"data\":{\"name\":\"Brooke Langton\",\"uuid\":\"40d0936c-3ccf-4d18-82b2-72168f375f71\",\"born\":1970},\"label\":\"Person\"},{\"id\":90,\"data\":{\"name\":\"Gene Hackman\",\"uuid\":\"4809d807-6278-4b3e-a420-3b4d330880ee\",\"born\":1929},\"label\":\"Person\"},{\"id\":91,\"data\":{\"name\":\"Orlando Jones\",\"uuid\":\"30aa6c91-d0a1-4a3a-a804-9f626dd930f3\",\"born\":1968},\"label\":\"Person\"},{\"id\":92,\"data\":{\"name\":\"Howard Deutch\",\"uuid\":\"bb2101ac-8867-4105-83b6-6966f102d872\",\"born\":1950},\"label\":\"Person\"},{\"id\":94,\"data\":{\"name\":\"Christian Bale\",\"uuid\":\"efb9ac63-a956-4601-aa2d-531689355774\",\"born\":1974},\"label\":\"Person\"},{\"id\":95,\"data\":{\"name\":\"Zach Grenier\",\"uuid\":\"cca004c3-5082-46e0-90ca-172229c19245\",\"born\":1954},\"label\":\"Person\"},{\"id\":97,\"data\":{\"name\":\"Mike Nichols\",\"uuid\":\"5a9927f6-2269-44fc-bbd4-01afeaf7509e\",\"born\":1931},\"label\":\"Person\"},{\"id\":99,\"data\":{\"name\":\"Richard Harris\",\"uuid\":\"01d47491-c327-40eb-b10b-23e9556c0aa7\",\"born\":1930},\"label\":\"Person\"},{\"id\":100,\"data\":{\"name\":\"Clint Eastwood\",\"uuid\":\"71aa4289-ee3a-4716-9dc6-697d6bdf242c\",\"born\":1930},\"label\":\"Person\"},{\"id\":102,\"data\":{\"name\":\"Takeshi Kitano\",\"uuid\":\"c97d7681-67bc-4ddd-85e0-eed9fa79ef96\",\"born\":1947},\"label\":\"Person\"},{\"id\":103,\"data\":{\"name\":\"Dina Meyer\",\"uuid\":\"4bb57cd0-5dfe-4c6a-8b16-59658f47c21f\",\"born\":1968},\"label\":\"Person\"},{\"id\":104,\"data\":{\"name\":\"Ice-T\",\"uuid\":\"2f4003b8-88fc-4439-81d2-b22067acc15d\",\"born\":1958},\"label\":\"Person\"},{\"id\":105,\"data\":{\"name\":\"Robert Longo\",\"uuid\":\"bd4f7e28-58be-40e2-aa60-1e6dbd6fa41d\",\"born\":1953},\"label\":\"Person\"},{\"id\":107,\"data\":{\"name\":\"Halle Berry\",\"uuid\":\"9ff4fb8d-13f6-421a-a792-22a6d41578b2\",\"born\":1966},\"label\":\"Person\"},{\"id\":108,\"data\":{\"name\":\"Jim Broadbent\",\"uuid\":\"df203605-5ef5-45cd-b9c9-e32822ee8769\",\"born\":1949},\"label\":\"Person\"},{\"id\":109,\"data\":{\"name\":\"Tom Tykwer\",\"uuid\":\"bdf70efe-bbfa-43c8-96b7-5b7797b9fd50\",\"born\":1965},\"label\":\"Person\"},{\"id\":110,\"data\":{\"name\":\"David Mitchell\",\"uuid\":\"8e396d46-1903-4e25-b6c5-895b8fe663bf\",\"born\":1969},\"label\":\"Person\"},{\"id\":111,\"data\":{\"name\":\"Stefan Arndt\",\"uuid\":\"5ca246c7-f4d3-494f-82a9-bc2f9cf5cf9b\",\"born\":1961},\"label\":\"Person\"},{\"id\":113,\"data\":{\"name\":\"Ian McKellen\",\"uuid\":\"6494aa25-5d19-4bf4-9737-c75f349209f4\",\"born\":1939},\"label\":\"Person\"},{\"id\":114,\"data\":{\"name\":\"Audrey Tautou\",\"uuid\":\"4445ce4e-28b9-4ace-9948-c28903765cfe\",\"born\":1976},\"label\":\"Person\"},{\"id\":115,\"data\":{\"name\":\"Paul Bettany\",\"uuid\":\"8554f3e4-7b28-4750-8d8d-1543068b447d\",\"born\":1971},\"label\":\"Person\"},{\"id\":116,\"data\":{\"name\":\"Ron Howard\",\"uuid\":\"d0769f93-6683-4704-aaa4-af3593e14e08\",\"born\":1954},\"label\":\"Person\"},{\"id\":118,\"data\":{\"name\":\"Natalie Portman\",\"uuid\":\"035b8b3f-5c9e-41b9-9da5-701f5a10d988\",\"born\":1981},\"label\":\"Person\"},{\"id\":119,\"data\":{\"name\":\"Stephen Rea\",\"uuid\":\"13cf47ad-a349-4603-9643-8ba2bcd24495\",\"born\":1946},\"label\":\"Person\"},{\"id\":120,\"data\":{\"name\":\"John Hurt\",\"uuid\":\"a7ae8aa5-2a9f-40a0-a9cc-339879ca22ca\",\"born\":1940},\"label\":\"Person\"},{\"id\":121,\"data\":{\"name\":\"Ben Miles\",\"uuid\":\"12e32c70-7ff2-48d3-a32e-4912d3388920\",\"born\":1967},\"label\":\"Person\"},{\"id\":123,\"data\":{\"name\":\"Emile Hirsch\",\"uuid\":\"70bac722-670d-4382-a219-14062f2316c5\",\"born\":1985},\"label\":\"Person\"},{\"id\":124,\"data\":{\"name\":\"John Goodman\",\"uuid\":\"271d52aa-c328-457d-9a1e-2d6bdb881310\",\"born\":1960},\"label\":\"Person\"},{\"id\":125,\"data\":{\"name\":\"Susan Sarandon\",\"uuid\":\"d5f2ca43-fa9f-4500-acb9-df34b25017e2\",\"born\":1946},\"label\":\"Person\"},{\"id\":126,\"data\":{\"name\":\"Matthew Fox\",\"uuid\":\"c12e8047-4b42-47cb-ba4b-4fce0d6312e1\",\"born\":1966},\"label\":\"Person\"},{\"id\":127,\"data\":{\"name\":\"Christina Ricci\",\"uuid\":\"2337578e-1c07-4673-84f3-8e4dd814132b\",\"born\":1980},\"label\":\"Person\"},{\"id\":128,\"data\":{\"name\":\"Rain\",\"uuid\":\"4d9ef13c-c948-4d88-978f-eba9a3d02bf0\",\"born\":1982},\"label\":\"Person\"},{\"id\":130,\"data\":{\"name\":\"Naomie Harris\",\"uuid\":\"af9ffdf3-83d6-49c1-b31a-e7c420d56837\"},\"label\":\"Person\"},{\"id\":132,\"data\":{\"name\":\"Michael Clarke Duncan\",\"uuid\":\"8542a265-517f-44ad-8b29-96c654f62f98\",\"born\":1957},\"label\":\"Person\"},{\"id\":133,\"data\":{\"name\":\"David Morse\",\"uuid\":\"51fd2bdb-b3c9-416e-8aa8-fa3bbc776def\",\"born\":1953},\"label\":\"Person\"},{\"id\":134,\"data\":{\"name\":\"Sam Rockwell\",\"uuid\":\"94ab350f-d673-494a-9f1b-1b10f9552aae\",\"born\":1968},\"label\":\"Person\"},{\"id\":135,\"data\":{\"name\":\"Gary Sinise\",\"uuid\":\"111ef491-673d-4bc8-a2f1-5298784d7344\",\"born\":1955},\"label\":\"Person\"},{\"id\":136,\"data\":{\"name\":\"Patricia Clarkson\",\"uuid\":\"9161d6fa-6939-4f76-94bd-af398df50950\",\"born\":1959},\"label\":\"Person\"},{\"id\":137,\"data\":{\"name\":\"Frank Darabont\",\"uuid\":\"3a2eb472-c010-4399-81e7-95437b28619a\",\"born\":1959},\"label\":\"Person\"},{\"id\":139,\"data\":{\"name\":\"Frank Langella\",\"uuid\":\"765ececd-08d9-4d0a-935a-95ef59364106\",\"born\":1938},\"label\":\"Person\"},{\"id\":140,\"data\":{\"name\":\"Michael Sheen\",\"uuid\":\"606a75c0-1e16-48df-9f3d-e7a983ef4d69\",\"born\":1969},\"label\":\"Person\"},{\"id\":141,\"data\":{\"name\":\"Oliver Platt\",\"uuid\":\"b2d612d3-fcdd-4d28-9f04-ab2edc92e413\",\"born\":1960},\"label\":\"Person\"},{\"id\":143,\"data\":{\"name\":\"Danny DeVito\",\"uuid\":\"9c1cbb4f-8b00-4f9c-a581-5d3453ed3811\",\"born\":1944},\"label\":\"Person\"},{\"id\":144,\"data\":{\"name\":\"John C. Reilly\",\"uuid\":\"ae6bdd58-e104-4784-99c9-0a1b812bb707\",\"born\":1965},\"label\":\"Person\"},{\"id\":146,\"data\":{\"name\":\"Ed Harris\",\"uuid\":\"7b8f6599-c0e1-4c7f-86b0-ccb775f15c01\",\"born\":1950},\"label\":\"Person\"},{\"id\":147,\"data\":{\"name\":\"Bill Paxton\",\"uuid\":\"ca0b6b67-d854-4c58-b201-38544394b445\",\"born\":1955},\"label\":\"Person\"},{\"id\":149,\"data\":{\"name\":\"Philip Seymour Hoffman\",\"uuid\":\"c330962d-9065-4520-8ac2-6e96b3fbf8cf\",\"born\":1967},\"label\":\"Person\"},{\"id\":150,\"data\":{\"name\":\"Jan de Bont\",\"uuid\":\"54e34c65-aa98-4a8b-816e-afba8ddd5c1a\",\"born\":1943},\"label\":\"Person\"},{\"id\":152,\"data\":{\"name\":\"Robert Zemeckis\",\"uuid\":\"6b17a6d1-01d9-4bbf-ab00-90eac66902d2\",\"born\":1951},\"label\":\"Person\"},{\"id\":154,\"data\":{\"name\":\"Milos Forman\",\"uuid\":\"d0542c68-0512-4b26-8226-59766a2d1ddd\",\"born\":1932},\"label\":\"Person\"},{\"id\":156,\"data\":{\"name\":\"Diane Keaton\",\"uuid\":\"eb7acb31-5239-4283-8df6-1aabf13b407f\",\"born\":1946},\"label\":\"Person\"},{\"id\":157,\"data\":{\"name\":\"Nancy Meyers\",\"uuid\":\"0efd30f5-4031-4777-a958-db7383d7364a\",\"born\":1949},\"label\":\"Person\"},{\"id\":159,\"data\":{\"name\":\"Chris Columbus\",\"uuid\":\"00006904-c34e-46dc-9d99-50812db93d50\",\"born\":1958},\"label\":\"Person\"},{\"id\":161,\"data\":{\"name\":\"Julia Roberts\",\"uuid\":\"871e63c2-48f2-4c9a-bb2b-4fd2fb1b67dd\",\"born\":1967},\"label\":\"Person\"},{\"id\":164,\"data\":{\"name\":\"Madonna\",\"uuid\":\"3631a945-e0e4-4594-882e-6e69fa2ac446\",\"born\":1954},\"label\":\"Person\"},{\"id\":165,\"data\":{\"name\":\"Geena Davis\",\"uuid\":\"29fb9c77-76bd-4a5d-a72d-1db2e8df2ccb\",\"born\":1956},\"label\":\"Person\"},{\"id\":166,\"data\":{\"name\":\"Lori Petty\",\"uuid\":\"1b91da5c-7813-4db7-ac75-f6a04e210614\",\"born\":1963},\"label\":\"Person\"},{\"id\":167,\"data\":{\"name\":\"Penny Marshall\",\"uuid\":\"b410566e-272d-444e-adf4-4de88ff20650\",\"born\":1943},\"label\":\"Person\"},{\"id\":168,\"data\":{\"name\":\"Paul Blythe\",\"uuid\":\"2faed51a-4c64-41e7-b32d-be8914a884ae\"},\"label\":\"Person\"},{\"id\":169,\"data\":{\"name\":\"Angela Scope\",\"uuid\":\"5500b98e-db61-4a45-bea7-46d19b7c0c4e\"},\"label\":\"Person\"},{\"id\":170,\"data\":{\"name\":\"Jessica Thompson\",\"uuid\":\"1561b693-080a-4ce9-b4ad-7506babe79de\"},\"label\":\"Person\"},{\"id\":171,\"data\":{\"name\":\"James Thompson\",\"uuid\":\"f217bcc0-a4c8-4167-b3ed-2e00eb725454\"},\"label\":\"Person\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\",\"NodeWithTime\":\"#6B979E\",\"Node\":\"#9505E9\",\"NodePeriodic\":\"#CC8524\",\"End\":\"#EAC4AF\",\"Batch\":\"#7860E1\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033168834_991591537",
      "id": "paragraph_1668033168834_991591537",
      "dateCreated": "2022-11-09 22:32:48.834",
      "dateStarted": "2022-11-10 15:47:58.632",
      "dateFinished": "2022-11-10 15:47:58.730",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### Delete the entire database\n\nWe can use the `apoc.periodic.truncate` to delete periodically the entire database. This procedure uses the `apoc.periodic.iterate` under the hood.\nThe procedure is useful when you’re in the prototyping phase and you’re defining your graph model or your ingestion strategies.\n\n\u003cpre\u003e\nCALL apoc.periodic.truncate({dropSchema: true})\n\u003c/pre\u003e\nWith dropSchema\u003dtrue/false that eventually drops indexes and constraints.\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:48:02.094",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eDelete the entire database\u003c/h3\u003e\n\u003cp\u003eWe can use the \u003ccode\u003eapoc.periodic.truncate\u003c/code\u003e to delete periodically the entire database. This procedure uses the \u003ccode\u003eapoc.periodic.iterate\u003c/code\u003e under the hood.\u003cbr /\u003e\nThe procedure is useful when you’re in the prototyping phase and you’re defining your graph model or your ingestion strategies.\u003c/p\u003e\n\u003cpre\u003e\nCALL apoc.periodic.truncate({dropSchema: true})\n\u003c/pre\u003e\n\u003cp\u003eWith dropSchema\u003dtrue/false that eventually drops indexes and constraints.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668032840266_177406125",
      "id": "paragraph_1668032840266_177406125",
      "dateCreated": "2022-11-09 22:27:20.266",
      "dateStarted": "2022-11-10 15:48:02.094",
      "dateFinished": "2022-11-10 15:48:02.103",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Scheduler\n\n- `CALL apoc.periodic.list()` - list all jobs\n\n- `CALL apoc.periodic.remove(name)` - remove a job\n\n- `CALL apoc.periodic.submit(\u0027name\u0027,statement)` - submit a one-off background and asynchronously (non-blocking) statement . Under-the-hood execute an `java.util.concurrent.ExecutorService.submit(Runnable)`\n\n- `CALL apoc.periodic.repeat(\u0027name\u0027,statement,repeat-time-in-seconds)` - submit a repeatedly-called background statement (via the `ExecutorService.scheduleWithFixedDelay(Runnable)`)\n\n- `CALL apoc.periodic.countdown(\u0027name\u0027,statement,delay-in-seconds)` - submit a repeatedly-called background statement (via the `ExecutorService.submit(Runnable)`) until it returns 0",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:48:08.107",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eScheduler\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eCALL apoc.periodic.list()\u003c/code\u003e - list all jobs\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eCALL apoc.periodic.remove(name)\u003c/code\u003e - remove a job\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eCALL apoc.periodic.submit(\u0027name\u0027,statement)\u003c/code\u003e - submit a one-off background and asynchronously (non-blocking) statement . Under-the-hood execute an \u003ccode\u003ejava.util.concurrent.ExecutorService.submit(Runnable)\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eCALL apoc.periodic.repeat(\u0027name\u0027,statement,repeat-time-in-seconds)\u003c/code\u003e - submit a repeatedly-called background statement (via the \u003ccode\u003eExecutorService.scheduleWithFixedDelay(Runnable)\u003c/code\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eCALL apoc.periodic.countdown(\u0027name\u0027,statement,delay-in-seconds)\u003c/code\u003e - submit a repeatedly-called background statement (via the \u003ccode\u003eExecutorService.submit(Runnable)\u003c/code\u003e) until it returns 0\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033344398_1377009419",
      "id": "paragraph_1668033344398_1377009419",
      "dateCreated": "2022-11-09 22:35:44.399",
      "dateStarted": "2022-11-10 15:48:08.107",
      "dateFinished": "2022-11-10 15:48:08.119",
      "status": "FINISHED"
    },
    {
      "text": "%md\n`call apoc.util.sleep(7000)` is similar to a `Thread.sleep(7000)`",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:48:53.550",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003ecall apoc.util.sleep(7000)\u003c/code\u003e is similar to a \u003ccode\u003eThread.sleep(7000)\u003c/code\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668095300486_1163533420",
      "id": "paragraph_1668095300486_1163533420",
      "dateCreated": "2022-11-10 15:48:20.486",
      "dateStarted": "2022-11-10 15:48:53.550",
      "dateFinished": "2022-11-10 15:48:53.561",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// execute almost immediately the statement despite apoc.util.sleep\ncall apoc.periodic.submit(\u0027foo\u0027,\u0027call apoc.util.sleep(7000) create (n:Finished)\u0027)\nyield done return done",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:48:17.039",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "done": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "done\nFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667828705612_16675651",
      "id": "paragraph_1667828705612_16675651",
      "dateCreated": "2022-11-07 13:45:05.612",
      "dateStarted": "2022-11-10 15:48:11.620",
      "dateFinished": "2022-11-10 15:48:15.872",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nmatch (n:Finished) return n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:48:58.599",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2409,\"data\":{},\"label\":\"Finished\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\",\"NodeWithTime\":\"#6B979E\",\"Node\":\"#9505E9\",\"NodePeriodic\":\"#CC8524\",\"End\":\"#EAC4AF\",\"Batch\":\"#7860E1\",\"Finished\":\"#675D17\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033366450_1262980704",
      "id": "paragraph_1668033366450_1262980704",
      "dateCreated": "2022-11-09 22:36:06.451",
      "dateStarted": "2022-11-10 15:48:57.236",
      "dateFinished": "2022-11-10 15:48:57.306",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.periodic.repeat(\"repeat-name\", \"CREATE (:CurrentTime {time: $time})\", 5, {params: {time: time() }})",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:49:05.837",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "delay": "string",
                      "rate": "string",
                      "done": "string",
                      "cancelled": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tdelay\trate\tdone\tcancelled\n\"repeat-name\"\t0\t5\tFALSE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033377422_844710233",
      "id": "paragraph_1668033377422_844710233",
      "dateCreated": "2022-11-09 22:36:17.422",
      "dateStarted": "2022-11-10 15:49:04.224",
      "dateFinished": "2022-11-10 15:49:04.486",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.periodic.list()",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:49:10.802",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "delay": "string",
                      "rate": "string",
                      "done": "string",
                      "cancelled": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tdelay\trate\tdone\tcancelled\n\"repeat-name\"\t0\t5\tFALSE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033382697_1105441825",
      "id": "paragraph_1668033382697_1105441825",
      "dateCreated": "2022-11-09 22:36:22.697",
      "dateStarted": "2022-11-10 15:49:09.190",
      "dateFinished": "2022-11-10 15:49:09.250",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nmatch (n:CurrentTime) return n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:49:14.834",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "time": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":2410,\"data\":{\"time\":{\"time\":{\"hour\":15,\"minute\":49,\"second\":4,\"nano\":428000000},\"offset\":{\"totalSeconds\":0}}},\"label\":\"CurrentTime\"},{\"id\":2411,\"data\":{\"time\":{\"time\":{\"hour\":15,\"minute\":49,\"second\":4,\"nano\":428000000},\"offset\":{\"totalSeconds\":0}}},\"label\":\"CurrentTime\"}],\"edges\":[],\"labels\":{\"Movie\":\"#3A31DF\",\"Person\":\"#C2849D\",\"Trigger\":\"#13E58D\",\"NotFracchia\":\"#07816C\",\"MyCaseNode\":\"#8DE40A\",\"NodeWithTime\":\"#6B979E\",\"Node\":\"#9505E9\",\"NodePeriodic\":\"#CC8524\",\"End\":\"#EAC4AF\",\"Batch\":\"#7860E1\",\"Finished\":\"#675D17\",\"CurrentTime\":\"#5996A8\"},\"types\":[\"SELF_REL\",\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033389103_835402200",
      "id": "paragraph_1668033389103_835402200",
      "dateCreated": "2022-11-09 22:36:29.104",
      "dateStarted": "2022-11-10 15:49:13.186",
      "dateFinished": "2022-11-10 15:49:13.286",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\ncall apoc.periodic.cancel(\"repeat-name\")",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:49:18.522",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "delay": "string",
                      "rate": "string",
                      "done": "string",
                      "cancelled": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tdelay\trate\tdone\tcancelled\n\"repeat-name\"\t0\t0\tTRUE\tTRUE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033410393_1343795259",
      "id": "paragraph_1668033410393_1343795259",
      "dateCreated": "2022-11-09 22:36:50.393",
      "dateStarted": "2022-11-10 15:49:16.755",
      "dateFinished": "2022-11-10 15:49:16.816",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nCREATE (:Counter {value: 20});\nCALL apoc.periodic.countdown(\"countdown\", \"MATCH (counter:Counter) SET counter.value \u003d counter.value - 1 RETURN counter.value\", 1)",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:49:23.247",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "delay": "string",
                      "rate": "string",
                      "done": "string",
                      "cancelled": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tdelay\trate\tdone\tcancelled\n\"countdown\"\t0\t1\tFALSE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033424426_1308006721",
      "id": "paragraph_1668033424426_1308006721",
      "dateCreated": "2022-11-09 22:37:04.426",
      "dateStarted": "2022-11-10 15:49:21.436",
      "dateFinished": "2022-11-10 15:49:21.625",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nMATCH (n:Counter) RETURN n.value",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:49:29.395",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.value": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.value\n15\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668033425724_1744916623",
      "id": "paragraph_1668033425724_1744916623",
      "dateCreated": "2022-11-09 22:37:05.724",
      "dateStarted": "2022-11-10 15:49:26.229",
      "dateFinished": "2022-11-10 15:49:26.293",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Exercise!!\n\n10 min ca.\n\n- Create a trigger (with phase after) which for each node created, if the property id is 1000 set a property ok \u003d true, otherwise set id \u003d 666\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 17:38:25.273",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eExercise!!\u003c/h2\u003e\n\u003cp\u003e10 min ca.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a trigger (with phase after) which for each node created, if the property id is 1000 set a property ok \u003d true, otherwise set id \u003d 666\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668095403950_1488119524",
      "id": "paragraph_1668095403950_1488119524",
      "dateCreated": "2022-11-10 15:50:03.951",
      "dateStarted": "2022-11-10 17:38:25.274",
      "dateFinished": "2022-11-10 17:38:28.190",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n// do ex stuff\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 17:37:54.394",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "1": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "1\n1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668098404531_1209904922",
      "id": "paragraph_1668098404531_1209904922",
      "dateCreated": "2022-11-10 16:40:04.531",
      "dateStarted": "2022-11-10 16:42:29.934",
      "dateFinished": "2022-11-10 16:42:30.484",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\ncall apoc.trigger.removeAll()",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 17:24:26.851",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "query": "string",
                      "selector.phase": "string",
                      "installed": "string",
                      "paused": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tquery\tselector.phase\tinstalled\tpaused\n\"unique\"\t\"UNWIND $createdNodes AS n with n call apoc.do.when(n.id \u003d 1000, \\\"SET $n.id \u003d 666\\\", \\\"SET $n.ok \u003d true\\\", {n: n} ) yield value return 1\"\tafter\tFALSE\tFALSE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668101056761_660280427",
      "id": "paragraph_1668101056761_660280427",
      "dateCreated": "2022-11-10 17:24:16.786",
      "dateStarted": "2022-11-10 17:24:24.899",
      "dateFinished": "2022-11-10 17:24:25.422",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## [Refresher+new stuff](http://localhost:8080/#/notebook/2HHYDMAGJ)",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:50:46.201",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2HHYDMAGJ\"\u003eRefresher+new stuff\u003c/a\u003e\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667995317935_1974728730",
      "id": "paragraph_1667995317935_1974728730",
      "dateCreated": "2022-11-09 12:01:57.936",
      "dateStarted": "2022-11-10 15:50:46.199",
      "dateFinished": "2022-11-10 15:50:46.208",
      "status": "FINISHED"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-10 15:50:46.198",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668095446198_1234565917",
      "id": "paragraph_1668095446198_1234565917",
      "dateCreated": "2022-11-10 15:50:46.198",
      "status": "READY"
    }
  ],
  "name": "01. Refresher",
  "id": "2HJSEJVEJ",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}